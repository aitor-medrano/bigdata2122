{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Inteligencia Artificial y Big Data \u00b6 Apuntes realizados para el curso de especialista de Inteligencia Artificial y Big Data impartido en el IES Severo Ochoa de Elche. El curriculum viene fijado por el Real Decreto 279/2021 . En este sitio web podr\u00e1s consultar los apuntes y ejercicios trabajados durante el curso. Despliega el men\u00fa de la izquierda para consultar los materiales. Bloque Cloud Computing y Arquitecturas Big Data \u00b6 Resultados de aprendizaje \u00b6 Gestiona soluciones a problemas propuestos, utilizando sistemas de almacenamiento y herramientas asociadas al centro de datos. Gestiona sistemas de almacenamiento y el amplio ecosistema alrededor de ellos facilitando el procesamiento de grandes cantidades de datos sin fallos y de forma r\u00e1pida. Planificaci\u00f3n \u00b6 Sesi\u00f3n Fecha Duraci\u00f3n (h) 1.- Cloud Computing Lunes 8 Nov 1p + 2o 2.- Amazon Web Services Lunes 15 Nov 1p + 2o 3.- Computaci\u00f3n en la nube Lunes 22 Nov 1p + 2o 4.- Almacenamiento en la nube Lunes 29 Nov 1p + 2o 5.- Datos en la nube Lunes 13 Dic 1p + 2o 6.- Arquitecturas Big Data Lunes 20 Dic 1p + 2o Bloque Ingesta de Datos \u00b6 Resultados de aprendizaje del m\u00f3dulo de Sistemas de Big Data \u00b6 Aplica t\u00e9cnicas de an\u00e1lisis de datos que integran, procesan y analizan la informaci\u00f3n, adaptando e implementando sistemas que las utilicen. Resultados de aprendizaje del m\u00f3dulo de Big Data Aplicado \u00b6 Gestiona soluciones a problemas propuestos, utilizando sistemas de almacenamiento y herramientas asociadas al centro de datos. Gestiona sistemas de almacenamiento y el amplio ecosistema alrededor de ellos facilitando el procesamiento de grandes cantidades de datos sin fallos y de forma r\u00e1pida. Genera mecanismos de integridad de los datos, comprobando su mantenimiento en los sistemas de ficheros distribuidos y valorando la sobrecarga que conlleva en el tratamiento de los datos. Valida las t\u00e9cnicas de Big Data para transformar una gran cantidad de datos en informaci\u00f3n significativa, facilitando la toma de decisiones de negocios Planificaci\u00f3n \u00b6 Sesi\u00f3n Fecha Duraci\u00f3n (h) 1.- ETL Lunes 10 Ene 1p + 2o 2.- ETL mediante SQL / Python Lunes 17 Ene 1p + 2o 3.- Herramientas ETL. Pentaho Lunes 24 Ene 1p + 2o 4.- ETL Distribuido. Nifi Lunes 31 Ene 1p + 2o 5.- Nifi II Mi\u00e9rcoles 2 Feb 2p + 4o Para poder continuar con el bloque de ingesta de datos, antes debemos preparar una infraestructura Hadoop Bloque Big Data Aplicado \u00b6 Resultados de aprendizaje \u00b6 Gestiona soluciones a problemas propuestos, utilizando sistemas de almacenamiento y herramientas asociadas al centro de datos. Gestiona sistemas de almacenamiento y el amplio ecosistema alrededor de ellos facilitando el procesamiento de grandes cantidades de datos sin fallos y de forma r\u00e1pida. Genera mecanismos de integridad de los datos, comprobando su mantenimiento en los sistemas de ficheros distribuidos y valorando la sobrecarga que conlleva en el tratamiento de los datos. Realiza el seguimiento de la monitorizaci\u00f3n de un sistema, asegurando la fiabilidad y estabilidad de los servicios que se proveen. Planificaci\u00f3n \u00b6 Sesi\u00f3n Fecha Duraci\u00f3n (h) 1.- Hadoop Mi\u00e9rcoles 9 Feb 2p + 4o 2.- HDFS Mi\u00e9rcoles 16 Feb 2p + 4o 3.- Hive Mi\u00e9rcoles 16 Feb 2p + 4o 4.- Flume y Sqoop Mi\u00e9rcoles 16 Feb 2p + 4o 5.- Kafka Mi\u00e9rcoles 16 Feb 2p + 4o Bloque Anal\u00edtica de Datos \u00b6 Resultados de aprendizaje \u00b6 Gestiona soluciones a problemas propuestos, utilizando sistemas de almacenamiento y herramientas asociadas al centro de datos. Gestiona sistemas de almacenamiento y el amplio ecosistema alrededor de ellos facilitando el procesamiento de grandes cantidades de datos sin fallos y de forma r\u00e1pida. Valida las t\u00e9cnicas de Big Data para transformar una gran cantidad de datos en informaci\u00f3n significativa, facilitando la toma de decisiones de negocios Planificaci\u00f3n \u00b6 Sesi\u00f3n Fecha Duraci\u00f3n (h) 1.- Spark Mi\u00e9rcoles 16 Mar 2p + 4o 2.- Spark RDD Mi\u00e9rcoles 16 Mar 2p + 4o 3.- Spark Avanzado Mi\u00e9rcoles 30 Mar 2p + 4o 4.- Spark SQL Mi\u00e9rcoles 30 Mar 2p + 4o 5.- Spark Streaming I Mi\u00e9rcoles 6 Abr 2p + 4o 6.- Spark Streaming II Mi\u00e9rcoles 6 Abr 2p + 4o","title":"Inicio"},{"location":"index.html#inteligencia-artificial-y-big-data","text":"Apuntes realizados para el curso de especialista de Inteligencia Artificial y Big Data impartido en el IES Severo Ochoa de Elche. El curriculum viene fijado por el Real Decreto 279/2021 . En este sitio web podr\u00e1s consultar los apuntes y ejercicios trabajados durante el curso. Despliega el men\u00fa de la izquierda para consultar los materiales.","title":"Inteligencia Artificial y Big Data"},{"location":"index.html#bloque-cloud-computing-y-arquitecturas-big-data","text":"","title":"Bloque Cloud Computing y Arquitecturas Big Data"},{"location":"index.html#resultados-de-aprendizaje","text":"Gestiona soluciones a problemas propuestos, utilizando sistemas de almacenamiento y herramientas asociadas al centro de datos. Gestiona sistemas de almacenamiento y el amplio ecosistema alrededor de ellos facilitando el procesamiento de grandes cantidades de datos sin fallos y de forma r\u00e1pida.","title":"Resultados de aprendizaje"},{"location":"index.html#planificacion","text":"Sesi\u00f3n Fecha Duraci\u00f3n (h) 1.- Cloud Computing Lunes 8 Nov 1p + 2o 2.- Amazon Web Services Lunes 15 Nov 1p + 2o 3.- Computaci\u00f3n en la nube Lunes 22 Nov 1p + 2o 4.- Almacenamiento en la nube Lunes 29 Nov 1p + 2o 5.- Datos en la nube Lunes 13 Dic 1p + 2o 6.- Arquitecturas Big Data Lunes 20 Dic 1p + 2o","title":"Planificaci\u00f3n"},{"location":"index.html#bloque-ingesta-de-datos","text":"","title":"Bloque Ingesta de Datos"},{"location":"index.html#resultados-de-aprendizaje-del-modulo-de-sistemas-de-big-data","text":"Aplica t\u00e9cnicas de an\u00e1lisis de datos que integran, procesan y analizan la informaci\u00f3n, adaptando e implementando sistemas que las utilicen.","title":"Resultados de aprendizaje del m\u00f3dulo de Sistemas de Big Data"},{"location":"index.html#resultados-de-aprendizaje-del-modulo-de-big-data-aplicado","text":"Gestiona soluciones a problemas propuestos, utilizando sistemas de almacenamiento y herramientas asociadas al centro de datos. Gestiona sistemas de almacenamiento y el amplio ecosistema alrededor de ellos facilitando el procesamiento de grandes cantidades de datos sin fallos y de forma r\u00e1pida. Genera mecanismos de integridad de los datos, comprobando su mantenimiento en los sistemas de ficheros distribuidos y valorando la sobrecarga que conlleva en el tratamiento de los datos. Valida las t\u00e9cnicas de Big Data para transformar una gran cantidad de datos en informaci\u00f3n significativa, facilitando la toma de decisiones de negocios","title":"Resultados de aprendizaje del m\u00f3dulo de Big Data Aplicado"},{"location":"index.html#planificacion_1","text":"Sesi\u00f3n Fecha Duraci\u00f3n (h) 1.- ETL Lunes 10 Ene 1p + 2o 2.- ETL mediante SQL / Python Lunes 17 Ene 1p + 2o 3.- Herramientas ETL. Pentaho Lunes 24 Ene 1p + 2o 4.- ETL Distribuido. Nifi Lunes 31 Ene 1p + 2o 5.- Nifi II Mi\u00e9rcoles 2 Feb 2p + 4o Para poder continuar con el bloque de ingesta de datos, antes debemos preparar una infraestructura Hadoop","title":"Planificaci\u00f3n"},{"location":"index.html#bloque-big-data-aplicado","text":"","title":"Bloque Big Data Aplicado"},{"location":"index.html#resultados-de-aprendizaje_1","text":"Gestiona soluciones a problemas propuestos, utilizando sistemas de almacenamiento y herramientas asociadas al centro de datos. Gestiona sistemas de almacenamiento y el amplio ecosistema alrededor de ellos facilitando el procesamiento de grandes cantidades de datos sin fallos y de forma r\u00e1pida. Genera mecanismos de integridad de los datos, comprobando su mantenimiento en los sistemas de ficheros distribuidos y valorando la sobrecarga que conlleva en el tratamiento de los datos. Realiza el seguimiento de la monitorizaci\u00f3n de un sistema, asegurando la fiabilidad y estabilidad de los servicios que se proveen.","title":"Resultados de aprendizaje"},{"location":"index.html#planificacion_2","text":"Sesi\u00f3n Fecha Duraci\u00f3n (h) 1.- Hadoop Mi\u00e9rcoles 9 Feb 2p + 4o 2.- HDFS Mi\u00e9rcoles 16 Feb 2p + 4o 3.- Hive Mi\u00e9rcoles 16 Feb 2p + 4o 4.- Flume y Sqoop Mi\u00e9rcoles 16 Feb 2p + 4o 5.- Kafka Mi\u00e9rcoles 16 Feb 2p + 4o","title":"Planificaci\u00f3n"},{"location":"index.html#bloque-analitica-de-datos","text":"","title":"Bloque Anal\u00edtica de Datos"},{"location":"index.html#resultados-de-aprendizaje_2","text":"Gestiona soluciones a problemas propuestos, utilizando sistemas de almacenamiento y herramientas asociadas al centro de datos. Gestiona sistemas de almacenamiento y el amplio ecosistema alrededor de ellos facilitando el procesamiento de grandes cantidades de datos sin fallos y de forma r\u00e1pida. Valida las t\u00e9cnicas de Big Data para transformar una gran cantidad de datos en informaci\u00f3n significativa, facilitando la toma de decisiones de negocios","title":"Resultados de aprendizaje"},{"location":"index.html#planificacion_3","text":"Sesi\u00f3n Fecha Duraci\u00f3n (h) 1.- Spark Mi\u00e9rcoles 16 Mar 2p + 4o 2.- Spark RDD Mi\u00e9rcoles 16 Mar 2p + 4o 3.- Spark Avanzado Mi\u00e9rcoles 30 Mar 2p + 4o 4.- Spark SQL Mi\u00e9rcoles 30 Mar 2p + 4o 5.- Spark Streaming I Mi\u00e9rcoles 6 Abr 2p + 4o 6.- Spark Streaming II Mi\u00e9rcoles 6 Abr 2p + 4o","title":"Planificaci\u00f3n"},{"location":"apuntes/arquitecturas01.html","text":"Arquitecturas Big Data \u00b6 Ya sabemos en qu\u00e9 consiste Big Data, y que dentro de sus 5V, dos de las m\u00e1s importantes son el volumen y la velocidad . Para cumplir con estas necesidades, necesitamos una infraestructura que dote a nuestras aplicaciones de toda la potencia y robustez necesarias. En esta sesi\u00f3n no vamos a entrar al detalle de ninguna tecnolog\u00eda, ya que el stack de herramientas es muy amplio y en constante crecimiento. A lo largo del curso iremos conociendo las distintas herramientas y aprenderemos c\u00f3mo y cu\u00e1ndo utilizarlas. Caracter\u00edsticas \u00b6 Todas las arquitecturas que dise\u00f1emos / utilicemos deben cumplir las siguientes caracter\u00edsticas: Escalabilidad : permite aumentar f\u00e1cilmente las capacidades de procesamiento y almacenamiento de datos. Tolerancia a fallos : garantiza la disponibilidad del sistema, aunque se produzcan fallos en algunas de las m\u00e1quinas, evitando la p\u00e9rdida de datos. Datos distribuidos : los datos deben estar almacenados entre diferentes m\u00e1quinas evitando as\u00ed el problema de almacenar grandes vol\u00famenes de datos en un \u00fanico nodo central. Procesamiento distribuido : el tratamiento de los datos se realiza entre diferentes m\u00e1quinas para mejorar los tiempos de ejecuci\u00f3n y dotar al sistema de escalabilidad. Localidad del dato : los datos a trabajar y los procesos que los tratan deben estar cerca, para evitar las transmisiones por red que a\u00f1aden latencias y aumentan los tiempos de ejecuci\u00f3n. Antes de conocer las arquitecturas m\u00e1s empleados, es conveniente tener presente siempre cu\u00e1l es el objetivo que debe cumplir nuestra soluci\u00f3n. Es muy f\u00e1cil caer en la sobreingenier\u00eda y montar una arquitectura con una amalgama de productos que luego son dif\u00edciles de configurar y mantener. Tipos de arquitecturas \u00b6 Debido a que las empresas disponen de un volumen cada vez mayor de datos y a la necesidad de analizarlos y obtener valor de ellos lo antes posible, surge la necesidad de definir nuevas arquitecturas para cubrir casos de uso distintos a los que hab\u00eda hasta el momento. Las arquitecturas m\u00e1s comunes en estos proyectos son principalmente dos: Lambda y Kappa . La principal diferencia entre ambas son los flujos de tratamiento de datos que intervienen. Un par de conceptos que tenemos que definir antes de ver las caracter\u00edsticas de ambas, son el procesamiento batch y el procesamiento en streaming. Procesamiento Batch \u00b6 Batch hace referencia a un proceso en el que intervienen un conjunto de datos y que tiene un inicio y un fin en el tiempo. Tambi\u00e9n se le conoce como procesamiento por lotes y se ejecuta sin control directo del usuario. Por ejemplo, si tenemos una aplicaci\u00f3n que muestra el total de casos COVID que hay en cada ciudad, en vez de realizar el c\u00e1lculo sobre el conjunto completo de los datos, podemos realizar una serie de operaciones que hagan esos c\u00e1lculos y los almacenen en tablas temporales (por ejemplo, mediante INSERT ... SELECT ), de manera que si queremos volver a realzar la consulta sobre todos los datos, acceder\u00edamos a los datos ya calculados de la tabla temporal. El problema es que este c\u00e1lculo necesita actualizarse, por ejemplo, de manera diaria, y de ah\u00ed que haya que rehacer todas las tablas temporales. Es el procesamiento que se ha realizado desde los inicios del trabajo con datos, tanto a nivel de bases de datos como con Data Warehouses . De la mano del procesamiento batch se ha implantado el ecosistema Hadoop con todas las herramientas que abarcan un proceso ETL (extraci\u00f3n, transformaci\u00f3n y carga de los datos). Estos conceptos los trabajaremos m\u00e1s adelante. Procesamiento en Streaming \u00b6 Un procesamiento es de tipo streaming cuando est\u00e1 continuamente recibiendo y tratando nueva informaci\u00f3n seg\u00fan va llegando sin tener un fin en lo referente al apartado temporal. Este procesamiento se relaciona con el an\u00e1lisis en tiempo real. Warning No confundir tiempo real con inmediatez. En inform\u00e1tica, un sistema de tiempo real es aquel que responde en un periodo de tiempo finito, normalmente muy peque\u00f1o, pero no tiene por qu\u00e9 ser instantaneo. Arquitectura Lambda \u00b6 Representada mediante la letra griega, apareci\u00f3 en el a\u00f1o 2012 y se atribuye a Nathan Marz . Nathan Marz La defini\u00f3 en base a su experiencia en sistemas de tratamiento de datos distribuidos durante su etapa como empleado en las empresas Backtype y Twitter, y est\u00e1 inspirada en su art\u00edculo How to beat the CAP theorem . Su objetivo era tener un sistema robusto tolerante a fallos, tanto humanos como de hardware, que fuera linealmente escalable y que permitiese realizar escrituras y lecturas con baja latencia. Para ello, se compone de tres capas: Capa batch : se encarga de (a) gestionar los datos hist\u00f3ricos y (b) recalcular los resultados, por ejemplo, de los modelos de machine learning . De manera espec\u00edfica, la capa batch recibe los datos, los combina con el historico existente y recalcula los resultados iterando sobre todo el conjunto de datos combinado. As\u00ed pues, este capa opera sobre el conjunto completo y permite que el sistema produzca los resultados m\u00e1s precisos. Sin embargo, esto conlleva un coste de alta latencia debido a los requisitos de tiempo de computaci\u00f3n. Capa de streaming / speed : sirve para ofrecer resultados con muy baja latencia, cercano al tiempo real. Este capa recibe los datos y realizar modificaciones incrementales sobre los resultados de la capa batch . Gracias a los algoritmos incrementales implementados en esta capa, se consigue reducir el coste computacional de manera considerable. Capa de serving : permite la consulta de los resultados enviados desde las dos capas anteriores. Podemos ver un esquema de la arquitectura en el siguiente gr\u00e1fico: https://www.paradigmadigital.com/techbiz/de-lambda-a-kappa-evolucion-de-las-arquitecturas-big-data/ El flujo de trabajo es el siguiente: La nueva informaci\u00f3n recogida por el sistema se env\u00eda tanto a la capa batch como a la capa de streaming ( Speed Layer en la imagen anterior). En la capa batch ( Batch Layer ) se gestiona la informaci\u00f3n en crudo, es decir, sin modificar. Los datos nuevos se a\u00f1aden a los ya existentes. Seguidamente se hace un tratamiento mediante un proceso batch cuyo resultado ser\u00e1n las Batch Views , que se usar\u00e1n en la capa que sirve los datos para ofrecer la informaci\u00f3n ya transformada al exterior. La capa que sirve los datos ( Serving Layer ) indexa las Batch Views generadas en el paso anterior de forma que puedan ser consultadas con tiempos de respuesta muy bajos. La capa de streaming compensa la alta latencia de las escrituras que ocurre en la serving layer y solo tiene en cuenta los datos nuevos (incrementos entre los procesos batch y el momento actual). Finalmente, combinando los resultados de las Batch Views y de las vistas en tiempo real ( Real-time Views ), se construye la respuesta a las consultas realizadas. https://www.ericsson.com/en/blog/2015/11/data-processing-architectures--lambda-and-kappa Arquitectura Kappa \u00b6 https://www.treelogic.com/es/Arquitectura_Kappa.html El t\u00e9rmino Arquitectura Kappa, representada por la letra , fue introducido en 2014 por Jay Kreps en su art\u00edculo Questioning the Lambda Architecture . En \u00e9l se\u00f1ala los posibles puntos \u201cd\u00e9biles\u201d de la Arquitectura Lambda y c\u00f3mo solucionarlos mediante una evoluci\u00f3n. Su propuesta consiste en eliminar la capa batch dejando solamente la capa de streaming. Esta capa, a diferencia de la de tipo batch, no tiene un comienzo ni un fin desde un punto de vista temporal y est\u00e1 continuamente procesando nuevos datos a medida que van llegando. Como un proceso batch se puede entender como un stream acotado, podr\u00edamos decir que el procesamiento batch es un subconjunto del procesamiento en streaming. Esta evoluci\u00f3n consiste en una simplificaci\u00f3n de la Arquitectura Lambda, en la que se elimina la capa batch y todo el procesamiento se realiza en una sola capa denominada de tiempo real o Real-time Layer, dando soporte a procesamientos tanto batch como en tiempo real. Podemos decir que sus cuatro pilares principales son los siguientes: Todo es un stream: las operaciones batch son un subconjunto de las operaciones de streaming, por lo que todo puede ser tratado como un stream. Los datos de partida no se modifican: los datos son almacenados sin ser transformados y las vistas se derivan de ellos. Un estado concreto puede ser recalculado puesto que la informaci\u00f3n de origen no se modifica. Solo existe un flujo de procesamiento: puesto que mantenemos un solo flujo, el c\u00f3digo, el mantenimiento y la actualizaci\u00f3n del sistema se ven reducidos considerablemente. Posibilidad de volver a lanzar un procesamiento: se puede modificar un procesamiento concreto y su configuraci\u00f3n para variar los resultados obtenidos partiendo de los mismos datos de entrada. Como requisito previo a cumplir, se tiene que garantizar que los eventos se leen y almacenan en el orden en el que se han generado. De esta forma, podremos variar un procesamiento concreto partiendo de una misma versi\u00f3n de los datos. Casos de uso \u00b6 \u00bfQu\u00e9 arquitectura se adapta mejor a nuestro problema? \u00bfC\u00faal encaja mejor en nuestro modelo de negocio?. https://www.ericsson.com/en/blog/2015/11/data-processing-architectures--lambda-and-kappa-examples Por lo general, no existe una \u00fanica respuesta. La arquitectura Lambda es m\u00e1s vers\u00e1til y es capaz de cubrir un mayor n\u00famero de casos, muchos de ellos que requieren incluso procesamiento en tiempo real. Una pregunta que debemos plantearnos para poder decidir es, \u00bfel an\u00e1lisis y el procesamiento que vamos a realizar en las capas batch y streaming es el mismo? En ese caso la opci\u00f3n m\u00e1s acertada ser\u00eda la Arquitectura Kappa. Como ejemplo real de esta arquitectura podr\u00edamos poner un sistema de geolocalizaci\u00f3n de usuarios por la cercan\u00eda a una antena de telefon\u00eda m\u00f3vil. Cada vez que se aproximase a una antena que le diese cobertura se generar\u00eda un evento. Este evento se procesar\u00eda en la capa de streaming y servir\u00eda para pintar sobre un mapa su desplazamiento respecto a su posici\u00f3n anterior. Sin embargo, en otras ocasiones necesitaremos acceder a todo el conjunto de datos sin penalizar el rendimiento por lo que la Arquitectura Lambda puede ser m\u00e1s apropiada e incluso m\u00e1s f\u00e1cil de implementar. Tambi\u00e9n nos inclinaremos hacia una Arquitectura Lambda si nuestros algoritmos de batch y streaming generan resultados muy distintos, como puede suceder con operaciones de procesamiento pesado o en modelos de Machine Learning. Un caso de uso real para una arquitectura Lambda podr\u00eda ser un sistema que recomiende libros en funci\u00f3n de los gustos de los usuarios. Por un lado, tendr\u00eda una capa batch encargada de entrenar el modelo e ir mejorando las predicciones; y por otro, una capa streaming capaz de encargarse de las valoraciones en tiempo real. Para finalizar, hay que destacar lo r\u00e1pido que evolucionan los casos de uso que queremos cubrir con nuestras soluciones Big Data, y eso supone que hay que adaptarse a ellos lo antes posible. Cada problema a resolver tiene unos condicionantes particulares y en muchos casos habr\u00e1 que evolucionar la arquitectura que est\u00e1bamos utilizando hasta el momento, o como se suele decir: \u201crenovarse o morir\u201d. Buenas pr\u00e1cicas \u00b6 En la ingesta de informaci\u00f3n: eval\u00faa tus tipos de fuentes, no todas las herramientas sirven para cualquier fuente, y en alg\u00fan caso te encontrar\u00e1s que lo mejor es combinar varias herramientas para cubrir todos tus casos. En el procesamiento: eval\u00faa si tu sistema tiene que ser streaming o batch. Algunos sistemas que no se definen como puramente streaming utilizan lo que denominan micro-batch que suele dar respuesta a problemas que en el uso cotidiano del lenguaje se denomina como streaming. En la monitorizaci\u00f3n: ten en cuenta que estamos hablando de multitud de herramientas y que su monitorizaci\u00f3n, control y gesti\u00f3n puede llegar a ser muy tedioso, por lo que independientemente de que te decidas por instalar un stack completo o por instalar herramientas independientes y generar tu propia arquitectura combusto, te recomiendo adem\u00e1s queutilices herramientas para controlar, monitorizar y gestionar tu arquitectura, esto te facilitar\u00e1 y centralizar\u00e1 todo este tipo de tareas. Algunas decisiones que tenemos que tomar a la hora de elegir la arquitectura son: Enfoca tus casos de uso, cuando tengas tus objetivos claros sabr\u00e1s que debes potenciar en tu arquitectura. \u00bfVolumen, variedad, velocidad? Define tu arquitectura: \u00bfbatch o streaming? \u00bfRealmente necesitas que tu arquitectura soporte streaming? Eval\u00faa tus fuentes de datos: \u00bfC\u00f3mo de heterog\u00e9neas son tus fuentes de datos? \u00bfsoportan las herramientas elegidas todos los tipos de fuentes de datos que tienes? Gesti\u00f3n del escalado y la monitorizaci\u00f3n \u00b6 Elastic Load Balancing \u00b6 Amazon CloudWatch \u00b6 Amazon EC2 Auto Scaling \u00b6 Actividades \u00b6 Realizar los m\u00f3dulos 9 (Arquitectura en la nube) y 10 (Monitoreo y escalado autom\u00e1tico) del curso ACF de AWS . Si nos basamos en una arquitectura Lambda, clasifica los siguientes elementos: Si nos basamos en una arquitectura Kappa, clasifica los siguientes elementos: Referencias \u00b6 Arquitectura Big Data: \u00bfen qu\u00e9 consiste y para qu\u00e9 se utiliza? Big Data Lambda Architecture - Nathan Marz What Is Lambda Architecture? Arquitectura Lambda vs Arquitectura Kappa https://luminousmen.com/post/modern-big-data-architectures-lambda-kappa/ https://medium.com/dataprophet/4-big-data-architectures-data-streaming-lambda-architecture-kappa-architecture-and-unifield-d9bcbf711eb9","title":"6.- Arquitecturas"},{"location":"apuntes/arquitecturas01.html#arquitecturas-big-data","text":"Ya sabemos en qu\u00e9 consiste Big Data, y que dentro de sus 5V, dos de las m\u00e1s importantes son el volumen y la velocidad . Para cumplir con estas necesidades, necesitamos una infraestructura que dote a nuestras aplicaciones de toda la potencia y robustez necesarias. En esta sesi\u00f3n no vamos a entrar al detalle de ninguna tecnolog\u00eda, ya que el stack de herramientas es muy amplio y en constante crecimiento. A lo largo del curso iremos conociendo las distintas herramientas y aprenderemos c\u00f3mo y cu\u00e1ndo utilizarlas.","title":"Arquitecturas Big Data"},{"location":"apuntes/arquitecturas01.html#caracteristicas","text":"Todas las arquitecturas que dise\u00f1emos / utilicemos deben cumplir las siguientes caracter\u00edsticas: Escalabilidad : permite aumentar f\u00e1cilmente las capacidades de procesamiento y almacenamiento de datos. Tolerancia a fallos : garantiza la disponibilidad del sistema, aunque se produzcan fallos en algunas de las m\u00e1quinas, evitando la p\u00e9rdida de datos. Datos distribuidos : los datos deben estar almacenados entre diferentes m\u00e1quinas evitando as\u00ed el problema de almacenar grandes vol\u00famenes de datos en un \u00fanico nodo central. Procesamiento distribuido : el tratamiento de los datos se realiza entre diferentes m\u00e1quinas para mejorar los tiempos de ejecuci\u00f3n y dotar al sistema de escalabilidad. Localidad del dato : los datos a trabajar y los procesos que los tratan deben estar cerca, para evitar las transmisiones por red que a\u00f1aden latencias y aumentan los tiempos de ejecuci\u00f3n. Antes de conocer las arquitecturas m\u00e1s empleados, es conveniente tener presente siempre cu\u00e1l es el objetivo que debe cumplir nuestra soluci\u00f3n. Es muy f\u00e1cil caer en la sobreingenier\u00eda y montar una arquitectura con una amalgama de productos que luego son dif\u00edciles de configurar y mantener.","title":"Caracter\u00edsticas"},{"location":"apuntes/arquitecturas01.html#tipos-de-arquitecturas","text":"Debido a que las empresas disponen de un volumen cada vez mayor de datos y a la necesidad de analizarlos y obtener valor de ellos lo antes posible, surge la necesidad de definir nuevas arquitecturas para cubrir casos de uso distintos a los que hab\u00eda hasta el momento. Las arquitecturas m\u00e1s comunes en estos proyectos son principalmente dos: Lambda y Kappa . La principal diferencia entre ambas son los flujos de tratamiento de datos que intervienen. Un par de conceptos que tenemos que definir antes de ver las caracter\u00edsticas de ambas, son el procesamiento batch y el procesamiento en streaming.","title":"Tipos de arquitecturas"},{"location":"apuntes/arquitecturas01.html#procesamiento-batch","text":"Batch hace referencia a un proceso en el que intervienen un conjunto de datos y que tiene un inicio y un fin en el tiempo. Tambi\u00e9n se le conoce como procesamiento por lotes y se ejecuta sin control directo del usuario. Por ejemplo, si tenemos una aplicaci\u00f3n que muestra el total de casos COVID que hay en cada ciudad, en vez de realizar el c\u00e1lculo sobre el conjunto completo de los datos, podemos realizar una serie de operaciones que hagan esos c\u00e1lculos y los almacenen en tablas temporales (por ejemplo, mediante INSERT ... SELECT ), de manera que si queremos volver a realzar la consulta sobre todos los datos, acceder\u00edamos a los datos ya calculados de la tabla temporal. El problema es que este c\u00e1lculo necesita actualizarse, por ejemplo, de manera diaria, y de ah\u00ed que haya que rehacer todas las tablas temporales. Es el procesamiento que se ha realizado desde los inicios del trabajo con datos, tanto a nivel de bases de datos como con Data Warehouses . De la mano del procesamiento batch se ha implantado el ecosistema Hadoop con todas las herramientas que abarcan un proceso ETL (extraci\u00f3n, transformaci\u00f3n y carga de los datos). Estos conceptos los trabajaremos m\u00e1s adelante.","title":"Procesamiento Batch"},{"location":"apuntes/arquitecturas01.html#procesamiento-en-streaming","text":"Un procesamiento es de tipo streaming cuando est\u00e1 continuamente recibiendo y tratando nueva informaci\u00f3n seg\u00fan va llegando sin tener un fin en lo referente al apartado temporal. Este procesamiento se relaciona con el an\u00e1lisis en tiempo real. Warning No confundir tiempo real con inmediatez. En inform\u00e1tica, un sistema de tiempo real es aquel que responde en un periodo de tiempo finito, normalmente muy peque\u00f1o, pero no tiene por qu\u00e9 ser instantaneo.","title":"Procesamiento en Streaming"},{"location":"apuntes/arquitecturas01.html#arquitectura-lambda","text":"Representada mediante la letra griega, apareci\u00f3 en el a\u00f1o 2012 y se atribuye a Nathan Marz . Nathan Marz La defini\u00f3 en base a su experiencia en sistemas de tratamiento de datos distribuidos durante su etapa como empleado en las empresas Backtype y Twitter, y est\u00e1 inspirada en su art\u00edculo How to beat the CAP theorem . Su objetivo era tener un sistema robusto tolerante a fallos, tanto humanos como de hardware, que fuera linealmente escalable y que permitiese realizar escrituras y lecturas con baja latencia. Para ello, se compone de tres capas: Capa batch : se encarga de (a) gestionar los datos hist\u00f3ricos y (b) recalcular los resultados, por ejemplo, de los modelos de machine learning . De manera espec\u00edfica, la capa batch recibe los datos, los combina con el historico existente y recalcula los resultados iterando sobre todo el conjunto de datos combinado. As\u00ed pues, este capa opera sobre el conjunto completo y permite que el sistema produzca los resultados m\u00e1s precisos. Sin embargo, esto conlleva un coste de alta latencia debido a los requisitos de tiempo de computaci\u00f3n. Capa de streaming / speed : sirve para ofrecer resultados con muy baja latencia, cercano al tiempo real. Este capa recibe los datos y realizar modificaciones incrementales sobre los resultados de la capa batch . Gracias a los algoritmos incrementales implementados en esta capa, se consigue reducir el coste computacional de manera considerable. Capa de serving : permite la consulta de los resultados enviados desde las dos capas anteriores. Podemos ver un esquema de la arquitectura en el siguiente gr\u00e1fico: https://www.paradigmadigital.com/techbiz/de-lambda-a-kappa-evolucion-de-las-arquitecturas-big-data/ El flujo de trabajo es el siguiente: La nueva informaci\u00f3n recogida por el sistema se env\u00eda tanto a la capa batch como a la capa de streaming ( Speed Layer en la imagen anterior). En la capa batch ( Batch Layer ) se gestiona la informaci\u00f3n en crudo, es decir, sin modificar. Los datos nuevos se a\u00f1aden a los ya existentes. Seguidamente se hace un tratamiento mediante un proceso batch cuyo resultado ser\u00e1n las Batch Views , que se usar\u00e1n en la capa que sirve los datos para ofrecer la informaci\u00f3n ya transformada al exterior. La capa que sirve los datos ( Serving Layer ) indexa las Batch Views generadas en el paso anterior de forma que puedan ser consultadas con tiempos de respuesta muy bajos. La capa de streaming compensa la alta latencia de las escrituras que ocurre en la serving layer y solo tiene en cuenta los datos nuevos (incrementos entre los procesos batch y el momento actual). Finalmente, combinando los resultados de las Batch Views y de las vistas en tiempo real ( Real-time Views ), se construye la respuesta a las consultas realizadas. https://www.ericsson.com/en/blog/2015/11/data-processing-architectures--lambda-and-kappa","title":"Arquitectura Lambda"},{"location":"apuntes/arquitecturas01.html#arquitectura-kappa","text":"https://www.treelogic.com/es/Arquitectura_Kappa.html El t\u00e9rmino Arquitectura Kappa, representada por la letra , fue introducido en 2014 por Jay Kreps en su art\u00edculo Questioning the Lambda Architecture . En \u00e9l se\u00f1ala los posibles puntos \u201cd\u00e9biles\u201d de la Arquitectura Lambda y c\u00f3mo solucionarlos mediante una evoluci\u00f3n. Su propuesta consiste en eliminar la capa batch dejando solamente la capa de streaming. Esta capa, a diferencia de la de tipo batch, no tiene un comienzo ni un fin desde un punto de vista temporal y est\u00e1 continuamente procesando nuevos datos a medida que van llegando. Como un proceso batch se puede entender como un stream acotado, podr\u00edamos decir que el procesamiento batch es un subconjunto del procesamiento en streaming. Esta evoluci\u00f3n consiste en una simplificaci\u00f3n de la Arquitectura Lambda, en la que se elimina la capa batch y todo el procesamiento se realiza en una sola capa denominada de tiempo real o Real-time Layer, dando soporte a procesamientos tanto batch como en tiempo real. Podemos decir que sus cuatro pilares principales son los siguientes: Todo es un stream: las operaciones batch son un subconjunto de las operaciones de streaming, por lo que todo puede ser tratado como un stream. Los datos de partida no se modifican: los datos son almacenados sin ser transformados y las vistas se derivan de ellos. Un estado concreto puede ser recalculado puesto que la informaci\u00f3n de origen no se modifica. Solo existe un flujo de procesamiento: puesto que mantenemos un solo flujo, el c\u00f3digo, el mantenimiento y la actualizaci\u00f3n del sistema se ven reducidos considerablemente. Posibilidad de volver a lanzar un procesamiento: se puede modificar un procesamiento concreto y su configuraci\u00f3n para variar los resultados obtenidos partiendo de los mismos datos de entrada. Como requisito previo a cumplir, se tiene que garantizar que los eventos se leen y almacenan en el orden en el que se han generado. De esta forma, podremos variar un procesamiento concreto partiendo de una misma versi\u00f3n de los datos.","title":"Arquitectura Kappa"},{"location":"apuntes/arquitecturas01.html#casos-de-uso","text":"\u00bfQu\u00e9 arquitectura se adapta mejor a nuestro problema? \u00bfC\u00faal encaja mejor en nuestro modelo de negocio?. https://www.ericsson.com/en/blog/2015/11/data-processing-architectures--lambda-and-kappa-examples Por lo general, no existe una \u00fanica respuesta. La arquitectura Lambda es m\u00e1s vers\u00e1til y es capaz de cubrir un mayor n\u00famero de casos, muchos de ellos que requieren incluso procesamiento en tiempo real. Una pregunta que debemos plantearnos para poder decidir es, \u00bfel an\u00e1lisis y el procesamiento que vamos a realizar en las capas batch y streaming es el mismo? En ese caso la opci\u00f3n m\u00e1s acertada ser\u00eda la Arquitectura Kappa. Como ejemplo real de esta arquitectura podr\u00edamos poner un sistema de geolocalizaci\u00f3n de usuarios por la cercan\u00eda a una antena de telefon\u00eda m\u00f3vil. Cada vez que se aproximase a una antena que le diese cobertura se generar\u00eda un evento. Este evento se procesar\u00eda en la capa de streaming y servir\u00eda para pintar sobre un mapa su desplazamiento respecto a su posici\u00f3n anterior. Sin embargo, en otras ocasiones necesitaremos acceder a todo el conjunto de datos sin penalizar el rendimiento por lo que la Arquitectura Lambda puede ser m\u00e1s apropiada e incluso m\u00e1s f\u00e1cil de implementar. Tambi\u00e9n nos inclinaremos hacia una Arquitectura Lambda si nuestros algoritmos de batch y streaming generan resultados muy distintos, como puede suceder con operaciones de procesamiento pesado o en modelos de Machine Learning. Un caso de uso real para una arquitectura Lambda podr\u00eda ser un sistema que recomiende libros en funci\u00f3n de los gustos de los usuarios. Por un lado, tendr\u00eda una capa batch encargada de entrenar el modelo e ir mejorando las predicciones; y por otro, una capa streaming capaz de encargarse de las valoraciones en tiempo real. Para finalizar, hay que destacar lo r\u00e1pido que evolucionan los casos de uso que queremos cubrir con nuestras soluciones Big Data, y eso supone que hay que adaptarse a ellos lo antes posible. Cada problema a resolver tiene unos condicionantes particulares y en muchos casos habr\u00e1 que evolucionar la arquitectura que est\u00e1bamos utilizando hasta el momento, o como se suele decir: \u201crenovarse o morir\u201d.","title":"Casos de uso"},{"location":"apuntes/arquitecturas01.html#buenas-pracicas","text":"En la ingesta de informaci\u00f3n: eval\u00faa tus tipos de fuentes, no todas las herramientas sirven para cualquier fuente, y en alg\u00fan caso te encontrar\u00e1s que lo mejor es combinar varias herramientas para cubrir todos tus casos. En el procesamiento: eval\u00faa si tu sistema tiene que ser streaming o batch. Algunos sistemas que no se definen como puramente streaming utilizan lo que denominan micro-batch que suele dar respuesta a problemas que en el uso cotidiano del lenguaje se denomina como streaming. En la monitorizaci\u00f3n: ten en cuenta que estamos hablando de multitud de herramientas y que su monitorizaci\u00f3n, control y gesti\u00f3n puede llegar a ser muy tedioso, por lo que independientemente de que te decidas por instalar un stack completo o por instalar herramientas independientes y generar tu propia arquitectura combusto, te recomiendo adem\u00e1s queutilices herramientas para controlar, monitorizar y gestionar tu arquitectura, esto te facilitar\u00e1 y centralizar\u00e1 todo este tipo de tareas. Algunas decisiones que tenemos que tomar a la hora de elegir la arquitectura son: Enfoca tus casos de uso, cuando tengas tus objetivos claros sabr\u00e1s que debes potenciar en tu arquitectura. \u00bfVolumen, variedad, velocidad? Define tu arquitectura: \u00bfbatch o streaming? \u00bfRealmente necesitas que tu arquitectura soporte streaming? Eval\u00faa tus fuentes de datos: \u00bfC\u00f3mo de heterog\u00e9neas son tus fuentes de datos? \u00bfsoportan las herramientas elegidas todos los tipos de fuentes de datos que tienes?","title":"Buenas pr\u00e1cicas"},{"location":"apuntes/arquitecturas01.html#gestion-del-escalado-y-la-monitorizacion","text":"","title":"Gesti\u00f3n del escalado y la monitorizaci\u00f3n"},{"location":"apuntes/arquitecturas01.html#elastic-load-balancing","text":"","title":"Elastic Load Balancing"},{"location":"apuntes/arquitecturas01.html#amazon-cloudwatch","text":"","title":"Amazon CloudWatch"},{"location":"apuntes/arquitecturas01.html#amazon-ec2-auto-scaling","text":"","title":"Amazon EC2 Auto Scaling"},{"location":"apuntes/arquitecturas01.html#actividades","text":"Realizar los m\u00f3dulos 9 (Arquitectura en la nube) y 10 (Monitoreo y escalado autom\u00e1tico) del curso ACF de AWS . Si nos basamos en una arquitectura Lambda, clasifica los siguientes elementos: Si nos basamos en una arquitectura Kappa, clasifica los siguientes elementos:","title":"Actividades"},{"location":"apuntes/arquitecturas01.html#referencias","text":"Arquitectura Big Data: \u00bfen qu\u00e9 consiste y para qu\u00e9 se utiliza? Big Data Lambda Architecture - Nathan Marz What Is Lambda Architecture? Arquitectura Lambda vs Arquitectura Kappa https://luminousmen.com/post/modern-big-data-architectures-lambda-kappa/ https://medium.com/dataprophet/4-big-data-architectures-data-streaming-lambda-architecture-kappa-architecture-and-unifield-d9bcbf711eb9","title":"Referencias"},{"location":"apuntes/nube01.html","text":"Cloud Computing \u00b6 La Nube \u00b6 Ya hemos visto que la industria 4.0 incluye el Big Data y la computaci\u00f3n en la nube como uno de los elementos principales de su transformaci\u00f3n. El Cloud Computing permite obtener servicios de computaci\u00f3n a trav\u00e9s de internet que hace que s\u00f3lo se pague por los recursos que usa y en el momento en que los necesita. Dicho de otro modo, es la entrega bajo demanda de potencia de c\u00f3mputo, bases de datos, almacenamiento, aplicaciones y otros recursos inform\u00e1ticos, a trav\u00e9s de Internet con un sistema de precios de pago por uso. Los modelos productivos basados en la adquisici\u00f3n de hardware de manera propietaria ha quedado atr\u00e1s, al implicar un proceso largo y costoso de compra de licencias, recursos f\u00edsicos como oficinas y equipamiento y recursos humanos (tanto t\u00e9cnicos como de seguridad) para su implantaci\u00f3n, gesti\u00f3n y mantenimiento. As\u00ed pues, plantea un cambio de perspectiva. La infraestructura se deja de considerar hardware para verla (y usarla) como software. Ventajas \u00b6 As\u00ed pues, los beneficios que ofrece la nube son: Alta disponibilidad , dada su naturaleza de recursos distribuidos. Escalabilidad : Si un usuario necesita m\u00e1s o menos capacidad de proceso o de almacenamiento, el proveedor se lo facilitar\u00e1 pr\u00e1cticamente en tiempo real. Tolerancia a fallos , ya que ofrecen una arquitectura de respaldo de copias de seguridad y a prueba de ataques. Elasticidad : de la misma manera que podemos escalar, podemos reducir los requisitos y buscar soluciones m\u00e1s econ\u00f3micas. Alcance global : cualquier usuario autorizado puede acceder o actualizar informaci\u00f3n desde cualquier lugar del mundo, en cualquier momento y mediante cualquier dispositivo. Agilidad : Permite amoldar los recursos al crecimiento de la empresa/proyecto. Capacidades de latencia del cliente , pudiendo elegir c\u00f3mo de cerca se despliegan las aplicaciones. C\u00e1lculo de costes de manera predictiva , siguiendo un modelo basado en el consumo. S\u00f3lo se paga por los recursos que se utilizan, para ello se proporciona el precio de cada recurso por hora. Una de las ventajas m\u00e1s interesante para las empresas puede que sea la reducci\u00f3n de los costes, ya que no necesitamos instalar ning\u00fan tipo de hardware ni software, ni pagar por las actualizaciones futuras en t\u00e9rminos de ese hardware y software que ya no vamos a necesitar o que se ha quedado corto para nuestras necesidades. En relaci\u00f3n con los costes, es conveniente aclarar dos conceptos relacionados con la contabilidad y las finanzas: CapEx y OpEx. CapEx vs OpEx \u00b6 Hay dos tipos diferentes de gastos que se deben tener en cuenta: La inversi\u00f3n de capital ( CapEx ) hace referencia a la inversi\u00f3n previa de dinero en infraestructura f\u00edsica, que se podr\u00e1 deducir a lo largo del tiempo. El coste previo de CapEx tiene un valor que disminuye con el tiempo. Los gastos operativos ( OpEx ) son dinero que se invierte en servicios o productos y se factura al instante. Este gasto se puede deducir el mismo a\u00f1o que se produce. No hay ning\u00fan costo previo, ya que se paga por un servicio o producto a medida que se usa. As\u00ed pues, si nuestra empresa es due\u00f1a de su infraestructura, comprar\u00e1 equipos que se incluir\u00e1n como recursos en su balance de cuentas. Dado que se ha realizado una inversi\u00f3n de capital, los contables clasifican esta transacci\u00f3n como CapEx. Con el tiempo, a fin de contabilizar la duraci\u00f3n \u00fatil limitada de los activos, estos se deprecian o se amortizan. Los servicios en la nube, por otro lado, se clasifican como OpEx debido a su modelo de consumo. Si nuestra empresa utiliza la nube, no tiene ning\u00fan recurso que pueda amortizar, y su proveedor de servicios en la nube (AWS / Azure) administra los costos asociados con la compra y la vida \u00fatil del equipo f\u00edsico. En consecuencia, los gastos de explotaci\u00f3n tienen un impacto directo en el beneficio neto, la base imponible y los gastos asociados en el balance contable. En resumen, CapEx requiere unos costes financieros previos considerables, as\u00ed como unos gastos continuos de mantenimiento y soporte t\u00e9cnico. En cambio, OpEx es un modelo basado en el consumo, y los gastos se deducen en el mismo a\u00f1o. As\u00ed pues, la inform\u00e1tica en la nube es un modelo basado en el consumo, lo que significa que los usuarios finales solo pagan por los recursos que usan. Lo que usan es lo que pagan. Volviendo a las ventajas, los modelos basados en el consumo y OpEx aportan una serie de ventajas: Sin costes por adelantado. No es necesario comprar ni administrar infraestructuras costosas que es posible que los usuarios no aprovechen del todo. Se puede pagar para obtener recursos adicionales cuando se necesiten. Se puede dejar de pagar por los recursos que ya no se necesiten. Coste total de propiedad \u00b6 El coste total de propiedad (CTO) es la estimaci\u00f3n financiera que ayuda a identificar los costes directos e indirectos de un sistema. Permite comparar el coste de ejecutar una infraestructura completa o una carga de trabajo espec\u00edfica en las instalaciones del cliente frente a hacerlo en la nube. Los elementos a considerar sobre el coste total de propiedad son: Cuando migramos a una soluci\u00f3n en la nube, por ejemplo AWS, los \u00fanicos costes que deberemos pagar son: Costes de computaci\u00f3n (procesador, memor\u00eda): se factura por horas o por segundos (s\u00f3lo m\u00e1quinas Linux) Costes de almacenamiento: se factura por GB Costes de transferencia de datos: se factura por GB de salida (excepto casos excepcionales, los datos de entrada no se facturan) As\u00ed pues, es necesario presupuestar y desarrollar casos de negocio para migrar a la nube y ver si son viables para nuestra organizaci\u00f3n. Para ello, podemos utilizar la calculadora de costes que ofrecen las plataformas cloud: AWS: https://calculator.aws y en concreto en https://calculator.s3.amazonaws.com/index.html Azure: https://azure.microsoft.com/es-es/pricing/tco/calculator/ Google Cloud: https://cloud.google.com/products/calculator?hl=es Estas calculadoras permiten: Calcular los costes mensuales. Identificar oportunidades para reducir los costes mensuales. Utilizar plantillas para comparar servicios y modelos de implementaci\u00f3n. Servicios en la nube \u00b6 Los servicios en la nube son servicios que se utilizan a trav\u00e9s de Internet, eliminando las limitaciones de nuestros equipos. Su principal ventaja es que su CapEx es 0, no necesita ning\u00fan tipo de inversi\u00f3n inicial ni contrato a largo plazo. Todo REVISAR Definici\u00f3n y diferencias. Apuntes Azure https://www.ibm.com/es-es/cloud/learn/cloud-computing-gbl https://docs.microsoft.com/es-es/learn/modules/fundamental-azure-concepts/categories-of-cloud-services IaaS \u00b6 La infraestructura como servicio ( Infraestructure as a Service ) proporciona a las empresas recursos inform\u00e1ticos, incluyendo servidores, m\u00e1quinas virtuales, redes, almacenamiento y espacio en centro de datos con pago en funci\u00f3n del uso. Los elementos que forman parte de IaaS son: Servidores y almacenamiento. Firewall y seguridad en red. Planta f\u00edsica o edificio del centro de datos. Se contrata el hardware y el cliente es el responsable de la instalaci\u00f3n y mantenimiento del software que corre en dichas m\u00e1quinas, as\u00ed como configurar la red, el almacenamiento y el control de acceso. Configurar una m\u00e1quina virtual nueva es considerablemente m\u00e1s r\u00e1pido que adquirir, instalar y configurar un servidor f\u00edsico. PaaS \u00b6 La plataforma como servicio ( Platform as a Service ) proporciona un entorno basado en cloud con todos los requisitos necesarios para dar soporte a todo el ciclo de vida de creaci\u00f3n y puesta en marcha de aplicaciones basadas en web (cloud), sin el coste y la complejidad de comprar y gestionar el hardware, software, aprovisionamiento y alojamiento necesario. Los elementos que forman parte de PaaS son todos los de IaaS m\u00e1s: Sistema operativo Herramientas de desarrollo, administraci\u00f3n de bases de datos, an\u00e1lisis empresarial, etc... Este enfoque acelera el desarrollo y la comercializaci\u00f3n de aplicaciones, ya que desplegar una nueva aplicaci\u00f3n es cuesti\u00f3n de minutos. El cliente no necesita administrar la infraestructura subyacente. El provedor cloud gestiona el sistema operativo, la implementaci\u00f3n de parches a la base de datos, la configuraci\u00f3n del firewall y la recuperaci\u00f3n de desastres. De esta manera, el cliente puede centrarse en la administraci\u00f3n de c\u00f3digo o datos. SaaS \u00b6 Finalmente, las aplicaciones basadas en cloud, o software como servicio ( Sofware as a Service ), se ejecutan en sistemas en la nube que no tienen porque residir en la misma m\u00e1quina ni en la misma red. Estos servicios pertenecen y los administran otras empresas a las cuales el cliente se conecta a trav\u00e9s de Internet y, por lo general, de un navegador web. As\u00ed pues, podemos considerar SaaS como aplicaciones hospedadas y utilizables dentro de un PaaS. Respecto al usuario, cuenta con una licencia seg\u00fan un modelo de suscripci\u00f3n o de pago por uso y no necesitan administrar la infraestructura que respalda el servicio. Por ello, SaaS permite iniciar sesi\u00f3n y empezar r\u00e1pidamente a utilizar las aplicaciones desde el minuto 0. Si el sistema fallase, no se pierden datos, ya que al estar en el cloud hay copias de seguridad continuas y al ser tolerante a fallos y el\u00e1stico, el servicio permite escalar din\u00e1micamente en funci\u00f3n de las necesidades de uso. \u00bfQu\u00e9 es la inform\u00e1tica sin servidor / Serverless computing ? Igual que PaaS, la inform\u00e1tica sin servidor permite que los desarrolladores creen aplicaciones m\u00e1s r\u00e1pidamente, ya que elimina la necesidad de administrar la infraestructura. En las aplicaciones sin servidor, el proveedor de servicios en la nube aprovisiona, escala y administra autom\u00e1ticamente la infraestructura necesaria para ejecutar el c\u00f3digo. Las arquitecturas sin servidor son muy escalables y controladas por eventos , y solo usan recursos cuando se produce una funci\u00f3n o un desencadenador concretos. Es importante tener en cuenta que los servidores siguen ejecutando el c\u00f3digo. El t\u00e9rmino \"sin servidor\" procede del hecho de que las tareas asociadas a la administraci\u00f3n y el aprovisionamiento de la infraestructura son invisibles para el desarrollador. Este enfoque permite a los desarrolladores centrar su atenci\u00f3n en la l\u00f3gica de negocio y ofrecer m\u00e1s valor al n\u00facleo de la empresa. Tipos de arquitectura seg\u00fan la infraestructura \u00b6 Arquitecturas on premise \u00b6 Tambi\u00e9n conocido como in-house es la arquitectura cl\u00e1sica, en la que la empresa adquiere el hardware por adelantado. De esta manera, las empresas tienen el control total sobre los recursos y la seguridad, pero tambi\u00e9n la responsabilidad respecto a su mantenimiento y actualizaci\u00f3n del hardware. Arquitecturas cloud \u00b6 Son aquellas donde los recursos se virtualizan y no son propiedad de la empresa, sino que se pueden aprovisionar y quitar bajo las necesidades de cada momento. S\u00f3lo se paga por lo que se consume. A su vez, podemos distinguirlas entre: Nube p\u00fablica : los recursos virtualizados se comparten de forma p\u00fablica y entre varios clientes a la vez, permitiendo el acceso via internet. Los clouds p\u00fablicos pertenecen y son administrados por proveedores que ofrecen a trav\u00e9s de una red p\u00fablica acceso r\u00e1pido a recursos inform\u00e1ticos asequibles. Nube privada : los recursos virtualizados son privados, mediante un cluster dedicado para el cliente, normalmente mediante una conexi\u00f3n privada, ya sea de propia fibra o VPN. Este tipo de nube lo utiliza \u00fanicamente una \u00fanica organizaci\u00f3n, ya sea gestionada internamente o por terceros y alojada internamente o externamente. Arquitecturas h\u00edbridas \u00b6 Brindan gran flexibilidad, ya que las empresas deciden donde se ejecutan sus aplicaciones, ya sea en su infraestructura in-house o con servicios cloud. De esta manera, controlan la seguridad y el cumplimiento o requisitos legales de sus aplicaciones. Un cloud h\u00edbrido utiliza una base de cloud privado, combinada con la integraci\u00f3n estrat\u00e9gica y el uso de servicios cloud p\u00fablico. En realidad, un cloud privado no puede existir aislado del resto de los recursos de TI de una empresa ni del cloud p\u00fablico. La mayor\u00eda de las empresas con clouds privados evolucionar\u00e1n para gestionar cargas de trabajo en todos los centros de datos (privados y p\u00fablicos) creando as\u00ed clouds h\u00edbridos. Aspectos clave de cloud h\u00edbrido: Permite que todas las empresas mantengan las aplicaciones cr\u00edticas y los datos confidenciales en un entorno de centro de datos tradicional o en un cloud privado Permite beneficiarse de los recursos de cloud p\u00fablico como SaaS, para obtener las aplicaciones m\u00e1s recientes y la infraestructura IaaS para obtener recursos virtuales de forma flexible Facilita la portabilidad de datos, aplicaciones y servicios y otras opciones de modelos de despliegue Plataformas Cloud \u00b6 En la actualidad existen multitud de proveedores que ofrecen servicios en la nube clasificados de acuerdo al modelo de servicio. A continuaci\u00f3n nombramos los m\u00e1s conocidos y m\u00e1s utilizados. Los proveedores cloud de nube p\u00fablica m\u00e1s importantes son: Amazon, con Amazon Web Services : Amazon fue el primer proveedor cloud, pionero y con mayor crecimiento. AWS proporciona una plataforma confiable en la nube que utilizan miles de empresa en todo el mundo. Microsoft, con Azure : Ha realizado una fuerte inversi\u00f3n en los \u00faltimos a\u00f1os y es la plataforma cloud con mayor crecimiento. Ofrece servicios en las tres capas, no s\u00f3lo en IaaS, sino tambi\u00e9n PaaS y SaaS. Google, con Google Cloud : Google tambi\u00e9n es un proveedor de nube p\u00fablica mediante su plataforma Google Cloud Platform (GCP) . Le cost\u00f3 entrar en este \u00e1rea, pero en los \u00faltimos a\u00f1os ha crecido mucho y actualmente es ampliamente utilizada por grandes compa\u00f1\u00edas. En el caso de nube privada, destacar a OpenStack . Se trata de un proyecto de software de infraestructura de computaci\u00f3n en la nube, es de c\u00f3digo abierto y es uno de los proyectos open source m\u00e1s activos del mundo. Si entramos a ejemplos concretos para cada tipo de servicio en la nube tenemos: Tipo de Servicio Proveedor Descripci\u00f3n IaaS AWS EC2 M\u00e1quinas virtuales en Amazon, con procesdor, memoria y almacenamiento a medida Azure y sus m\u00e1quina virtuales Igual pero en Azure Google Cloud Platform Igual pero en Google PaaS AWS RDS, AWS Lambda Base de datos, funciones serverless Google App Engine Red Hat OpenShift Heroku Plataforma que permite el despliegue de aplicaciones en la nube SaaS Microsoft Office 365 Paquete ofim\u00e1tico de Microsoftw en la nube Aplicaciones web de Google Correo electr\u00f3nico, calendario, fotos Trello, Notion, GitHub Tableros Kanban, gesti\u00f3n de tareas, repositorio de c\u00f3digo fuente Herramientas DevOps relacionadas Aunque se salen del \u00e1mbito del curso de IABD, es conveniente conocer algunas herramientas asociadas a perfiles DevOps como: Terraform ( https://www.terraform.io/ ): Facilita la definici\u00f3n, aprovisionamiento y orquestaci\u00f3n de servicios mediante un lenguaje declarativo. Ansible ( https://www.ansible.com/ ): Permite centralizar la configuraci\u00f3n de numerosos servidores, dispositivos de red y proveedores cloud de una forma sencilla y automatizada. Docker ( https://www.docker.com/ ): Permite la creaci\u00f3n de contenedores a modo de m\u00e1quinas virtuales ligeras, donde se instalan los servicios/recursos necesairos. Kubernetes (K8s) ( https://kubernetes.io/es/ ): Orquesta los contenedores para facilitar el despliegue, la supervisi\u00f3n de servicios, el reemplazo, el escalado autom\u00e1tico y la administraci\u00f3n de los servicios. Facilita la portabilidad de contenedores a la nube. En Octubre de 2020, el informe de Synergy Cloud Market Growth Rate Nudges Up as Amazon and Microsoft Solidify Leadership permite observar el predominio de Amazon seguido del crecimiento de la plataforma Azure: Infraestructura cloud \u00b6 Las diferentes plataformas cloud ofrecen una infraestructura dividida en regiones y zonas. Regiones y Zonas de disponibilidad \u00b6 A lo largo de todo el globo terr\u00e1queo, se han construido grandes centros de datos que se conocen como regiones . Estas regiones son zonas geogr\u00e1ficas, y dentro de cada una de ellas hay diferentes grupo de centros de datos l\u00f3gicos que se conocen como zonas de disponibilidad (AZ - Availability Zone ). Normalmente cada regi\u00f3n contiene 3 o m\u00e1s zonas de disponibilidad. Dicho de otro modo, cada regi\u00f3n consta de varias zonas de disponibilidad aisladas y separadas f\u00edsicamente dentro de un \u00e1rea geogr\u00e1fica. Cada zona de disponibilidad tiene alimentaci\u00f3n, refrigeraci\u00f3n y seguridad f\u00edsica independientes y est\u00e1 conectada a trav\u00e9s de redes redundantes de latencia ultrabaja. Si seguimos desgranando, cada zona de disponibilidad contiene al menos 3 centros de datos, y cada centro de datos suele albergar entre 50.000 y 80.000 servidor f\u00edsicos. Si hacemos c\u00e1lculos podemos ver que una regi\u00f3n puede incluir varios cientos de miles de servidores. Las zonas de disponibilidad permiten que los clientes trabajen con bases de datos y aplicaciones de producci\u00f3n con un nivel de disponibilidad, tolerancia a errores y escalabilidad mayor que el que ofrecer\u00eda un centro de datos \u00fanico. Tolerancia a fallos La soluci\u00f3n ideal es replicar los datos y la aplicaci\u00f3n en varias zonas de disponibilidad de una regi\u00f3n, y posteriormente, replicarlos a su vez entre diferentes regiones. Las AZ est\u00e1n f\u00edsicamente separadas entre s\u00ed por una distancia significativa de muchos kil\u00f3metros, aunque todas est\u00e1n dentro de un rango de 100 km de separaci\u00f3n. La replicaci\u00f3n de datos entre regiones y zonas de disponibilidad es responsabilidad del cliente. La infraestructura global de AWS se compone de regiones y zonas de disponibilidad. La elecci\u00f3n de una regi\u00f3n se basa normalmente en los requisitos de conformidad o en la intenci\u00f3n de reducir la latencia. Cada zona de disponibilidad est\u00e1 separada f\u00edsicamente de las dem\u00e1s y posee alimentaci\u00f3n, redes y conectividad redundantes. Ubicaciones de borde \u00b6 Las ubicaciones de borde y las cach\u00e9s de borde regionales mejoran el rendimiento almacenando en cach\u00e9 el contenido m\u00e1s cerca de los usuarios. Se trata de CDN ( Content Delivery Network ) que se utiliza para distribuir el contenido (datos, v\u00eddeos, aplicaciones y API) a los usuarios finales cuyo objetivo es reducir la latencia al m\u00ednimo. Para ello, despliega m\u00e1s de 225 puntos de presencia (m\u00e1s de 215 ubicaciones de borde y 13 cach\u00e9s de nivel medio regional), a trav\u00e9s de 90 ciudades en 47 paises. ++++ Utiliza Amazon Route 53, el cual es un DNS interno que redirige el tr\u00e1fico a los nodos Cloudfront. M\u00e1s informaci\u00f3n en https://aws.amazon.com/es/cloudfront/ . Despliegue \u00b6 Por ejemplo, en el siguiente gr\u00e1fico podemos ver las 25 regiones que tiene AWS que incluyen 81 zonas de disponibilidad (se puede observar como la regi\u00f3n en Espa\u00f1a est\u00e1 en proceso de implantaci\u00f3n): Pod\u00e9is consultar el mapa interactivo de: AWS en https://aws.amazon.com/es/about-aws/global-infrastructure/ (y las regiones en https://aws.amazon.com/es/about-aws/global-infrastructure/regions_az/ ) Azure en https://infrastructuremap.microsoft.com/explore . Google Cloud en https://cloud.google.com/about/locations#regions Seguridad \u00b6 Responsabilidad compartida - Azure Actividades \u00b6 A lo largo de este bloque, vamos a trabajar con AWS como plataforma Cloud. Para ello, es necesario activar una cuenta educativa. En breve, recibir\u00e9is un email para daros de alta y poder realizar las actividades. As\u00ed pues, esta actividad consiste en la creaci\u00f3n de la cuenta de AWS y la realizaci\u00f3n del m\u00f3dulo 0 (Introducci\u00f3n al curso). Realizar los m\u00f3dulos 1 (Informaci\u00f3n general sobre los conceptos de la nube) y 2 (Facturaci\u00f3n y econom\u00eda de la nube) del curso ACF de AWS . \u00bfcalculadora de costes? Referencias \u00b6 Azure Fundamentals AZ-900 FAQ Google Cloud vs AWS en 2021 https://openwebinars.net/blog/tipos-de-cloud-computing/","title":"1.- Cloud Computing"},{"location":"apuntes/nube01.html#cloud-computing","text":"","title":"Cloud Computing"},{"location":"apuntes/nube01.html#la-nube","text":"Ya hemos visto que la industria 4.0 incluye el Big Data y la computaci\u00f3n en la nube como uno de los elementos principales de su transformaci\u00f3n. El Cloud Computing permite obtener servicios de computaci\u00f3n a trav\u00e9s de internet que hace que s\u00f3lo se pague por los recursos que usa y en el momento en que los necesita. Dicho de otro modo, es la entrega bajo demanda de potencia de c\u00f3mputo, bases de datos, almacenamiento, aplicaciones y otros recursos inform\u00e1ticos, a trav\u00e9s de Internet con un sistema de precios de pago por uso. Los modelos productivos basados en la adquisici\u00f3n de hardware de manera propietaria ha quedado atr\u00e1s, al implicar un proceso largo y costoso de compra de licencias, recursos f\u00edsicos como oficinas y equipamiento y recursos humanos (tanto t\u00e9cnicos como de seguridad) para su implantaci\u00f3n, gesti\u00f3n y mantenimiento. As\u00ed pues, plantea un cambio de perspectiva. La infraestructura se deja de considerar hardware para verla (y usarla) como software.","title":"La Nube"},{"location":"apuntes/nube01.html#ventajas","text":"As\u00ed pues, los beneficios que ofrece la nube son: Alta disponibilidad , dada su naturaleza de recursos distribuidos. Escalabilidad : Si un usuario necesita m\u00e1s o menos capacidad de proceso o de almacenamiento, el proveedor se lo facilitar\u00e1 pr\u00e1cticamente en tiempo real. Tolerancia a fallos , ya que ofrecen una arquitectura de respaldo de copias de seguridad y a prueba de ataques. Elasticidad : de la misma manera que podemos escalar, podemos reducir los requisitos y buscar soluciones m\u00e1s econ\u00f3micas. Alcance global : cualquier usuario autorizado puede acceder o actualizar informaci\u00f3n desde cualquier lugar del mundo, en cualquier momento y mediante cualquier dispositivo. Agilidad : Permite amoldar los recursos al crecimiento de la empresa/proyecto. Capacidades de latencia del cliente , pudiendo elegir c\u00f3mo de cerca se despliegan las aplicaciones. C\u00e1lculo de costes de manera predictiva , siguiendo un modelo basado en el consumo. S\u00f3lo se paga por los recursos que se utilizan, para ello se proporciona el precio de cada recurso por hora. Una de las ventajas m\u00e1s interesante para las empresas puede que sea la reducci\u00f3n de los costes, ya que no necesitamos instalar ning\u00fan tipo de hardware ni software, ni pagar por las actualizaciones futuras en t\u00e9rminos de ese hardware y software que ya no vamos a necesitar o que se ha quedado corto para nuestras necesidades. En relaci\u00f3n con los costes, es conveniente aclarar dos conceptos relacionados con la contabilidad y las finanzas: CapEx y OpEx.","title":"Ventajas"},{"location":"apuntes/nube01.html#capex-vs-opex","text":"Hay dos tipos diferentes de gastos que se deben tener en cuenta: La inversi\u00f3n de capital ( CapEx ) hace referencia a la inversi\u00f3n previa de dinero en infraestructura f\u00edsica, que se podr\u00e1 deducir a lo largo del tiempo. El coste previo de CapEx tiene un valor que disminuye con el tiempo. Los gastos operativos ( OpEx ) son dinero que se invierte en servicios o productos y se factura al instante. Este gasto se puede deducir el mismo a\u00f1o que se produce. No hay ning\u00fan costo previo, ya que se paga por un servicio o producto a medida que se usa. As\u00ed pues, si nuestra empresa es due\u00f1a de su infraestructura, comprar\u00e1 equipos que se incluir\u00e1n como recursos en su balance de cuentas. Dado que se ha realizado una inversi\u00f3n de capital, los contables clasifican esta transacci\u00f3n como CapEx. Con el tiempo, a fin de contabilizar la duraci\u00f3n \u00fatil limitada de los activos, estos se deprecian o se amortizan. Los servicios en la nube, por otro lado, se clasifican como OpEx debido a su modelo de consumo. Si nuestra empresa utiliza la nube, no tiene ning\u00fan recurso que pueda amortizar, y su proveedor de servicios en la nube (AWS / Azure) administra los costos asociados con la compra y la vida \u00fatil del equipo f\u00edsico. En consecuencia, los gastos de explotaci\u00f3n tienen un impacto directo en el beneficio neto, la base imponible y los gastos asociados en el balance contable. En resumen, CapEx requiere unos costes financieros previos considerables, as\u00ed como unos gastos continuos de mantenimiento y soporte t\u00e9cnico. En cambio, OpEx es un modelo basado en el consumo, y los gastos se deducen en el mismo a\u00f1o. As\u00ed pues, la inform\u00e1tica en la nube es un modelo basado en el consumo, lo que significa que los usuarios finales solo pagan por los recursos que usan. Lo que usan es lo que pagan. Volviendo a las ventajas, los modelos basados en el consumo y OpEx aportan una serie de ventajas: Sin costes por adelantado. No es necesario comprar ni administrar infraestructuras costosas que es posible que los usuarios no aprovechen del todo. Se puede pagar para obtener recursos adicionales cuando se necesiten. Se puede dejar de pagar por los recursos que ya no se necesiten.","title":"CapEx vs OpEx"},{"location":"apuntes/nube01.html#coste-total-de-propiedad","text":"El coste total de propiedad (CTO) es la estimaci\u00f3n financiera que ayuda a identificar los costes directos e indirectos de un sistema. Permite comparar el coste de ejecutar una infraestructura completa o una carga de trabajo espec\u00edfica en las instalaciones del cliente frente a hacerlo en la nube. Los elementos a considerar sobre el coste total de propiedad son: Cuando migramos a una soluci\u00f3n en la nube, por ejemplo AWS, los \u00fanicos costes que deberemos pagar son: Costes de computaci\u00f3n (procesador, memor\u00eda): se factura por horas o por segundos (s\u00f3lo m\u00e1quinas Linux) Costes de almacenamiento: se factura por GB Costes de transferencia de datos: se factura por GB de salida (excepto casos excepcionales, los datos de entrada no se facturan) As\u00ed pues, es necesario presupuestar y desarrollar casos de negocio para migrar a la nube y ver si son viables para nuestra organizaci\u00f3n. Para ello, podemos utilizar la calculadora de costes que ofrecen las plataformas cloud: AWS: https://calculator.aws y en concreto en https://calculator.s3.amazonaws.com/index.html Azure: https://azure.microsoft.com/es-es/pricing/tco/calculator/ Google Cloud: https://cloud.google.com/products/calculator?hl=es Estas calculadoras permiten: Calcular los costes mensuales. Identificar oportunidades para reducir los costes mensuales. Utilizar plantillas para comparar servicios y modelos de implementaci\u00f3n.","title":"Coste total de propiedad"},{"location":"apuntes/nube01.html#servicios-en-la-nube","text":"Los servicios en la nube son servicios que se utilizan a trav\u00e9s de Internet, eliminando las limitaciones de nuestros equipos. Su principal ventaja es que su CapEx es 0, no necesita ning\u00fan tipo de inversi\u00f3n inicial ni contrato a largo plazo. Todo REVISAR Definici\u00f3n y diferencias. Apuntes Azure https://www.ibm.com/es-es/cloud/learn/cloud-computing-gbl https://docs.microsoft.com/es-es/learn/modules/fundamental-azure-concepts/categories-of-cloud-services","title":"Servicios en la nube"},{"location":"apuntes/nube01.html#iaas","text":"La infraestructura como servicio ( Infraestructure as a Service ) proporciona a las empresas recursos inform\u00e1ticos, incluyendo servidores, m\u00e1quinas virtuales, redes, almacenamiento y espacio en centro de datos con pago en funci\u00f3n del uso. Los elementos que forman parte de IaaS son: Servidores y almacenamiento. Firewall y seguridad en red. Planta f\u00edsica o edificio del centro de datos. Se contrata el hardware y el cliente es el responsable de la instalaci\u00f3n y mantenimiento del software que corre en dichas m\u00e1quinas, as\u00ed como configurar la red, el almacenamiento y el control de acceso. Configurar una m\u00e1quina virtual nueva es considerablemente m\u00e1s r\u00e1pido que adquirir, instalar y configurar un servidor f\u00edsico.","title":"IaaS"},{"location":"apuntes/nube01.html#paas","text":"La plataforma como servicio ( Platform as a Service ) proporciona un entorno basado en cloud con todos los requisitos necesarios para dar soporte a todo el ciclo de vida de creaci\u00f3n y puesta en marcha de aplicaciones basadas en web (cloud), sin el coste y la complejidad de comprar y gestionar el hardware, software, aprovisionamiento y alojamiento necesario. Los elementos que forman parte de PaaS son todos los de IaaS m\u00e1s: Sistema operativo Herramientas de desarrollo, administraci\u00f3n de bases de datos, an\u00e1lisis empresarial, etc... Este enfoque acelera el desarrollo y la comercializaci\u00f3n de aplicaciones, ya que desplegar una nueva aplicaci\u00f3n es cuesti\u00f3n de minutos. El cliente no necesita administrar la infraestructura subyacente. El provedor cloud gestiona el sistema operativo, la implementaci\u00f3n de parches a la base de datos, la configuraci\u00f3n del firewall y la recuperaci\u00f3n de desastres. De esta manera, el cliente puede centrarse en la administraci\u00f3n de c\u00f3digo o datos.","title":"PaaS"},{"location":"apuntes/nube01.html#saas","text":"Finalmente, las aplicaciones basadas en cloud, o software como servicio ( Sofware as a Service ), se ejecutan en sistemas en la nube que no tienen porque residir en la misma m\u00e1quina ni en la misma red. Estos servicios pertenecen y los administran otras empresas a las cuales el cliente se conecta a trav\u00e9s de Internet y, por lo general, de un navegador web. As\u00ed pues, podemos considerar SaaS como aplicaciones hospedadas y utilizables dentro de un PaaS. Respecto al usuario, cuenta con una licencia seg\u00fan un modelo de suscripci\u00f3n o de pago por uso y no necesitan administrar la infraestructura que respalda el servicio. Por ello, SaaS permite iniciar sesi\u00f3n y empezar r\u00e1pidamente a utilizar las aplicaciones desde el minuto 0. Si el sistema fallase, no se pierden datos, ya que al estar en el cloud hay copias de seguridad continuas y al ser tolerante a fallos y el\u00e1stico, el servicio permite escalar din\u00e1micamente en funci\u00f3n de las necesidades de uso. \u00bfQu\u00e9 es la inform\u00e1tica sin servidor / Serverless computing ? Igual que PaaS, la inform\u00e1tica sin servidor permite que los desarrolladores creen aplicaciones m\u00e1s r\u00e1pidamente, ya que elimina la necesidad de administrar la infraestructura. En las aplicaciones sin servidor, el proveedor de servicios en la nube aprovisiona, escala y administra autom\u00e1ticamente la infraestructura necesaria para ejecutar el c\u00f3digo. Las arquitecturas sin servidor son muy escalables y controladas por eventos , y solo usan recursos cuando se produce una funci\u00f3n o un desencadenador concretos. Es importante tener en cuenta que los servidores siguen ejecutando el c\u00f3digo. El t\u00e9rmino \"sin servidor\" procede del hecho de que las tareas asociadas a la administraci\u00f3n y el aprovisionamiento de la infraestructura son invisibles para el desarrollador. Este enfoque permite a los desarrolladores centrar su atenci\u00f3n en la l\u00f3gica de negocio y ofrecer m\u00e1s valor al n\u00facleo de la empresa.","title":"SaaS"},{"location":"apuntes/nube01.html#tipos-de-arquitectura-segun-la-infraestructura","text":"","title":"Tipos de arquitectura seg\u00fan la infraestructura"},{"location":"apuntes/nube01.html#arquitecturas-on-premise","text":"Tambi\u00e9n conocido como in-house es la arquitectura cl\u00e1sica, en la que la empresa adquiere el hardware por adelantado. De esta manera, las empresas tienen el control total sobre los recursos y la seguridad, pero tambi\u00e9n la responsabilidad respecto a su mantenimiento y actualizaci\u00f3n del hardware.","title":"Arquitecturas on premise"},{"location":"apuntes/nube01.html#arquitecturas-cloud","text":"Son aquellas donde los recursos se virtualizan y no son propiedad de la empresa, sino que se pueden aprovisionar y quitar bajo las necesidades de cada momento. S\u00f3lo se paga por lo que se consume. A su vez, podemos distinguirlas entre: Nube p\u00fablica : los recursos virtualizados se comparten de forma p\u00fablica y entre varios clientes a la vez, permitiendo el acceso via internet. Los clouds p\u00fablicos pertenecen y son administrados por proveedores que ofrecen a trav\u00e9s de una red p\u00fablica acceso r\u00e1pido a recursos inform\u00e1ticos asequibles. Nube privada : los recursos virtualizados son privados, mediante un cluster dedicado para el cliente, normalmente mediante una conexi\u00f3n privada, ya sea de propia fibra o VPN. Este tipo de nube lo utiliza \u00fanicamente una \u00fanica organizaci\u00f3n, ya sea gestionada internamente o por terceros y alojada internamente o externamente.","title":"Arquitecturas cloud"},{"location":"apuntes/nube01.html#arquitecturas-hibridas","text":"Brindan gran flexibilidad, ya que las empresas deciden donde se ejecutan sus aplicaciones, ya sea en su infraestructura in-house o con servicios cloud. De esta manera, controlan la seguridad y el cumplimiento o requisitos legales de sus aplicaciones. Un cloud h\u00edbrido utiliza una base de cloud privado, combinada con la integraci\u00f3n estrat\u00e9gica y el uso de servicios cloud p\u00fablico. En realidad, un cloud privado no puede existir aislado del resto de los recursos de TI de una empresa ni del cloud p\u00fablico. La mayor\u00eda de las empresas con clouds privados evolucionar\u00e1n para gestionar cargas de trabajo en todos los centros de datos (privados y p\u00fablicos) creando as\u00ed clouds h\u00edbridos. Aspectos clave de cloud h\u00edbrido: Permite que todas las empresas mantengan las aplicaciones cr\u00edticas y los datos confidenciales en un entorno de centro de datos tradicional o en un cloud privado Permite beneficiarse de los recursos de cloud p\u00fablico como SaaS, para obtener las aplicaciones m\u00e1s recientes y la infraestructura IaaS para obtener recursos virtuales de forma flexible Facilita la portabilidad de datos, aplicaciones y servicios y otras opciones de modelos de despliegue","title":"Arquitecturas h\u00edbridas"},{"location":"apuntes/nube01.html#plataformas-cloud","text":"En la actualidad existen multitud de proveedores que ofrecen servicios en la nube clasificados de acuerdo al modelo de servicio. A continuaci\u00f3n nombramos los m\u00e1s conocidos y m\u00e1s utilizados. Los proveedores cloud de nube p\u00fablica m\u00e1s importantes son: Amazon, con Amazon Web Services : Amazon fue el primer proveedor cloud, pionero y con mayor crecimiento. AWS proporciona una plataforma confiable en la nube que utilizan miles de empresa en todo el mundo. Microsoft, con Azure : Ha realizado una fuerte inversi\u00f3n en los \u00faltimos a\u00f1os y es la plataforma cloud con mayor crecimiento. Ofrece servicios en las tres capas, no s\u00f3lo en IaaS, sino tambi\u00e9n PaaS y SaaS. Google, con Google Cloud : Google tambi\u00e9n es un proveedor de nube p\u00fablica mediante su plataforma Google Cloud Platform (GCP) . Le cost\u00f3 entrar en este \u00e1rea, pero en los \u00faltimos a\u00f1os ha crecido mucho y actualmente es ampliamente utilizada por grandes compa\u00f1\u00edas. En el caso de nube privada, destacar a OpenStack . Se trata de un proyecto de software de infraestructura de computaci\u00f3n en la nube, es de c\u00f3digo abierto y es uno de los proyectos open source m\u00e1s activos del mundo. Si entramos a ejemplos concretos para cada tipo de servicio en la nube tenemos: Tipo de Servicio Proveedor Descripci\u00f3n IaaS AWS EC2 M\u00e1quinas virtuales en Amazon, con procesdor, memoria y almacenamiento a medida Azure y sus m\u00e1quina virtuales Igual pero en Azure Google Cloud Platform Igual pero en Google PaaS AWS RDS, AWS Lambda Base de datos, funciones serverless Google App Engine Red Hat OpenShift Heroku Plataforma que permite el despliegue de aplicaciones en la nube SaaS Microsoft Office 365 Paquete ofim\u00e1tico de Microsoftw en la nube Aplicaciones web de Google Correo electr\u00f3nico, calendario, fotos Trello, Notion, GitHub Tableros Kanban, gesti\u00f3n de tareas, repositorio de c\u00f3digo fuente Herramientas DevOps relacionadas Aunque se salen del \u00e1mbito del curso de IABD, es conveniente conocer algunas herramientas asociadas a perfiles DevOps como: Terraform ( https://www.terraform.io/ ): Facilita la definici\u00f3n, aprovisionamiento y orquestaci\u00f3n de servicios mediante un lenguaje declarativo. Ansible ( https://www.ansible.com/ ): Permite centralizar la configuraci\u00f3n de numerosos servidores, dispositivos de red y proveedores cloud de una forma sencilla y automatizada. Docker ( https://www.docker.com/ ): Permite la creaci\u00f3n de contenedores a modo de m\u00e1quinas virtuales ligeras, donde se instalan los servicios/recursos necesairos. Kubernetes (K8s) ( https://kubernetes.io/es/ ): Orquesta los contenedores para facilitar el despliegue, la supervisi\u00f3n de servicios, el reemplazo, el escalado autom\u00e1tico y la administraci\u00f3n de los servicios. Facilita la portabilidad de contenedores a la nube. En Octubre de 2020, el informe de Synergy Cloud Market Growth Rate Nudges Up as Amazon and Microsoft Solidify Leadership permite observar el predominio de Amazon seguido del crecimiento de la plataforma Azure:","title":"Plataformas Cloud"},{"location":"apuntes/nube01.html#infraestructura-cloud","text":"Las diferentes plataformas cloud ofrecen una infraestructura dividida en regiones y zonas.","title":"Infraestructura cloud"},{"location":"apuntes/nube01.html#regiones-y-zonas-de-disponibilidad","text":"A lo largo de todo el globo terr\u00e1queo, se han construido grandes centros de datos que se conocen como regiones . Estas regiones son zonas geogr\u00e1ficas, y dentro de cada una de ellas hay diferentes grupo de centros de datos l\u00f3gicos que se conocen como zonas de disponibilidad (AZ - Availability Zone ). Normalmente cada regi\u00f3n contiene 3 o m\u00e1s zonas de disponibilidad. Dicho de otro modo, cada regi\u00f3n consta de varias zonas de disponibilidad aisladas y separadas f\u00edsicamente dentro de un \u00e1rea geogr\u00e1fica. Cada zona de disponibilidad tiene alimentaci\u00f3n, refrigeraci\u00f3n y seguridad f\u00edsica independientes y est\u00e1 conectada a trav\u00e9s de redes redundantes de latencia ultrabaja. Si seguimos desgranando, cada zona de disponibilidad contiene al menos 3 centros de datos, y cada centro de datos suele albergar entre 50.000 y 80.000 servidor f\u00edsicos. Si hacemos c\u00e1lculos podemos ver que una regi\u00f3n puede incluir varios cientos de miles de servidores. Las zonas de disponibilidad permiten que los clientes trabajen con bases de datos y aplicaciones de producci\u00f3n con un nivel de disponibilidad, tolerancia a errores y escalabilidad mayor que el que ofrecer\u00eda un centro de datos \u00fanico. Tolerancia a fallos La soluci\u00f3n ideal es replicar los datos y la aplicaci\u00f3n en varias zonas de disponibilidad de una regi\u00f3n, y posteriormente, replicarlos a su vez entre diferentes regiones. Las AZ est\u00e1n f\u00edsicamente separadas entre s\u00ed por una distancia significativa de muchos kil\u00f3metros, aunque todas est\u00e1n dentro de un rango de 100 km de separaci\u00f3n. La replicaci\u00f3n de datos entre regiones y zonas de disponibilidad es responsabilidad del cliente. La infraestructura global de AWS se compone de regiones y zonas de disponibilidad. La elecci\u00f3n de una regi\u00f3n se basa normalmente en los requisitos de conformidad o en la intenci\u00f3n de reducir la latencia. Cada zona de disponibilidad est\u00e1 separada f\u00edsicamente de las dem\u00e1s y posee alimentaci\u00f3n, redes y conectividad redundantes.","title":"Regiones y Zonas de disponibilidad"},{"location":"apuntes/nube01.html#ubicaciones-de-borde","text":"Las ubicaciones de borde y las cach\u00e9s de borde regionales mejoran el rendimiento almacenando en cach\u00e9 el contenido m\u00e1s cerca de los usuarios. Se trata de CDN ( Content Delivery Network ) que se utiliza para distribuir el contenido (datos, v\u00eddeos, aplicaciones y API) a los usuarios finales cuyo objetivo es reducir la latencia al m\u00ednimo. Para ello, despliega m\u00e1s de 225 puntos de presencia (m\u00e1s de 215 ubicaciones de borde y 13 cach\u00e9s de nivel medio regional), a trav\u00e9s de 90 ciudades en 47 paises. ++++ Utiliza Amazon Route 53, el cual es un DNS interno que redirige el tr\u00e1fico a los nodos Cloudfront. M\u00e1s informaci\u00f3n en https://aws.amazon.com/es/cloudfront/ .","title":"Ubicaciones de borde"},{"location":"apuntes/nube01.html#despliegue","text":"Por ejemplo, en el siguiente gr\u00e1fico podemos ver las 25 regiones que tiene AWS que incluyen 81 zonas de disponibilidad (se puede observar como la regi\u00f3n en Espa\u00f1a est\u00e1 en proceso de implantaci\u00f3n): Pod\u00e9is consultar el mapa interactivo de: AWS en https://aws.amazon.com/es/about-aws/global-infrastructure/ (y las regiones en https://aws.amazon.com/es/about-aws/global-infrastructure/regions_az/ ) Azure en https://infrastructuremap.microsoft.com/explore . Google Cloud en https://cloud.google.com/about/locations#regions","title":"Despliegue"},{"location":"apuntes/nube01.html#seguridad","text":"Responsabilidad compartida - Azure","title":"Seguridad"},{"location":"apuntes/nube01.html#actividades","text":"A lo largo de este bloque, vamos a trabajar con AWS como plataforma Cloud. Para ello, es necesario activar una cuenta educativa. En breve, recibir\u00e9is un email para daros de alta y poder realizar las actividades. As\u00ed pues, esta actividad consiste en la creaci\u00f3n de la cuenta de AWS y la realizaci\u00f3n del m\u00f3dulo 0 (Introducci\u00f3n al curso). Realizar los m\u00f3dulos 1 (Informaci\u00f3n general sobre los conceptos de la nube) y 2 (Facturaci\u00f3n y econom\u00eda de la nube) del curso ACF de AWS . \u00bfcalculadora de costes?","title":"Actividades"},{"location":"apuntes/nube01.html#referencias","text":"Azure Fundamentals AZ-900 FAQ Google Cloud vs AWS en 2021 https://openwebinars.net/blog/tipos-de-cloud-computing/","title":"Referencias"},{"location":"apuntes/nube02.html","text":"Amazon Web Services \u00b6 Amazon Web Services ofrece un conjunto de servicios que funcionan a modo de piezas de un puzzle, de manera que uniendo unos con otros podemos dise\u00f1ar la arquitectura necesaria para nuestras aplicaciones. Servicios \u00b6 Los servicios de AWS se clasifican en categor\u00edas: A continuaci\u00f3n vamos a comentar las categor\u00edas m\u00e1s importantes junto a algunos de sus servicios m\u00e1s destacados: Almacenamiento \u00b6 Los servicios que ofrece AWS para gestionar el almacenamiento de datos son: Amazon Simple Storage Service ( Amazon S3 ): servicio de almacenamiento de objetos que ofrece escalabilidad, disponibilidad de datos, seguridad y rendimiento. Se utiliza para almacenar y proteger cualquier cantidad de datos para sitios web, aplicaciones m\u00f3viles, copias de seguridad y restauraci\u00f3n, archivado, aplicaciones empresariales, dispositivos de Internet de las cosas (IoT) y an\u00e1lisis de bigdata. Amazon Elastic Block Store ( Amazon EBS ): almacenamiento en bloque de alto rendimiento dise\u00f1ado para utilizarse con Amazon EC2 para cargas de trabajo que hacen un uso intensivo de transacciones y de rendimiento. Se utiliza para una amplia gama de cargas de trabajo, como bases de datos relacionales y no relacionales, aplicaciones empresariales, aplicaciones en contenedores, motores de an\u00e1lisis de bigdata, sistemas de archivos y flujos de trabajo multimedia Amazon Elastic File System ( Amazon EFS ): proporciona un sistema de archivos de Network File System(NFS) el\u00e1stico escalable y completamente administrado para su uso con los servicios en la nube de AWS y los recursos en las instalaciones. Est\u00e1 dise\u00f1ado para escalar a petabytes bajo demanda, y aumenta y reduce su tama\u00f1o autom\u00e1ticamente a medida que se agregan y se eliminan archivos. Reduce la necesidad de aprovisionar y administrar capacidad para admitir el crecimiento Amazon Simple Storage Service Glacier ( Amazon S3 Glacier ): es un tipo de almacenamiento en la nube de Amazon S3 seguro, duradero y de muy bajo costo para archivar datos y realizar copias de seguridad a largo plazo. Est\u00e1 dise\u00f1ado para ofrecer una durabilidad del 99,999999999% y proporcionar capacidades integrales de seguridad y conformidad que permiten cumplir requisitos normativos estrictos Estos servicios los veremos en mayor profundidad en la sesi\u00f3n 5.- Almacenamiento en AWS . Inform\u00e1tica / Computaci\u00f3n \u00b6 Los servicios que ofrece AWS relativos a la inform\u00e1tica o computaci\u00f3n son: Amazon Elastic Compute Cloud ( Amazon EC2 ): proporciona capacidad inform\u00e1tica de tama\u00f1o ajustable en forma de m\u00e1quinas virtuales en la nube Amazon EC2 Auto Scaling : permite agregar o eliminar autom\u00e1ticamente instancias EC2 de acuerdo con las condiciones que defina. Amazon Elastic Container Service ( Amazon ECS ): servicio de organizaci\u00f3n de contenedores altamente escalable y de gran rendimiento, compatible con los contenedores Docker. Amazon EC2 Container Registry ( Amazon ECR ): registro de contenedores Docker completamente administrado que facilita las tareas de mantenimiento, administraci\u00f3n e implementaci\u00f3n de im\u00e1genes de contenedores Docker . Amazon Elastic Beanstalk : servicio para implementar y escalar aplicaciones y servicios web en servicios web conocidos, como Apache o IIS. AWS Lambda : permite ejecutar c\u00f3digo sin necesidad de aprovisionar ni administrador servidores. S\u00f3lo se paga por el tiempo de computaci\u00f3n (cuando el c\u00f3digo no se ejecuta, no se paga nada) Amazon Elastic Kubernetes Service ( Amazon EKS ): facilita la implementaci\u00f3n, administraci\u00f3n y el escalado de aplicaciones en contenedores que utilizan Kubernetes en AWS. Amazon Fargate : motor inform\u00e1tico para ECS que permite ejecutar contenedores sin tener que administrar servidores ni cl\u00fasteres. Estos servicios los veremos en mayor profundidad en la sesi\u00f3n 4.- Computaci\u00f3n en AWS . Bases de Datos \u00b6 Los servicios que ofrece AWS para gestionar los datos son: Amazon Relational Database Service ( Amazon RDS ): facilita las tareas de configuraci\u00f3n, operaci\u00f3n y escalado de una base de datos relacional en la nube. El servicio ofrece capacidad de tama\u00f1o ajustable al mismo tiempo que automatiza tareas administrativas que demandan mucho tiempo, como el aprovisionamiento de hardware, la configuraci\u00f3n de bases de datos, la implementaci\u00f3n de parches y la creaci\u00f3n de copias de seguridad Amazon Aurora : es una base de datos relacional compatible con MySQL/MariaDB y PostgreSQL. Amazon vende que es hasta cinco veces m\u00e1s r\u00e1pida que las bases de datos MySQL est\u00e1ndar y tres veces m\u00e1s r\u00e1pida que las bases de datos PostgreSQL est\u00e1ndar. Amazon Redshift : es un servicio de datawarehouse que permite ejecutar consultas anal\u00edticas de petabytes de datos almacenados localmente en Amazon Redshift, adem\u00e1s de ejecutar consultas anal\u00edticas de exabytes de datos almacenados en Amazon S3 de forma directa. Ofrece un rendimiento r\u00e1pido a cualquier escala. Amazon DynamoDB : es una base de datos de documentos y clave-valor que ofrece un rendimiento de milisegundos de un solo d\u00edgito a cualquier escala, con seguridad integrada, copias de seguridad y restauraci\u00f3n, y almacenamiento en cach\u00e9 en memoria. Estos servicios los veremos en mayor profundidad en la sesi\u00f3n 6.- Datos en AWS . Redes \u00b6 Los servicios que ofrece AWS para gestionar las redes son: Amazon Virtual Private Cloud ( Amazon VPC ): permite aprovisionar secciones aisladas de forma l\u00f3gica de la nube de AWS. Elastic Load Balancing : distribuye autom\u00e1ticamente el tr\u00e1fico entrante de las aplicaciones en varios destinos, tales como instancias de Amazon EC2, contenedores, direcciones IP y funciones Lambda. Amazon CloudFront : servicio r\u00e1pido de red de entrega de contenido (CDN) que suministra datos, videos, aplicaciones e interfaces de programaci\u00f3n de aplicaciones (API) de manera segura a clientes de todo el mundo, con baja latencia y altas velocidades de transferencia. AWS Transit Gateway : servicio que permite a los clientes conectar sus nubes privadas virtuales de Amazon (VPC) y sus redes en las instalaciones ( in-house ) a una \u00fanica gateway. Amazon Route 53 : servicio web de DNS escalable y en la nube dise\u00f1ado para direccionar a los usuarios finales a las aplicaciones de Internet de una forma confiable. AWS Direct Connect : ofrece una manera de establecer una conexi\u00f3n de red privada dedicada desde un centro de datos u oficina a AWS, lo que puede reducir los costes de red y aumentar el rendimiento del ancho de banda. AWS VPN : proporciona un t\u00fanel privado seguro desde una red o dispositivo a la red global de AWS. Seguridad en AWS \u00b6 Los servicios que ofrece AWS para gestionar la seguridad, identidad y conformidad son: AWS Identity and Access Management ( IAM ): le permite administrar el acceso a los recursos y servicios de AWS de manera segura. Con IAM, puede crear y administrar usuarios y grupos de AWS. Puede utilizar los permisos de IAM para permitir y denegar el acceso de usuarios y grupos a los recursos de AWS. AWS Organizations : permite restringir los servicios y acciones que se permiten en sus cuentas.Amazon Cognito le permite incorporar control de acceso, inscripci\u00f3n e inicio de sesi\u00f3n de usuarios a sus aplicaciones web y m\u00f3viles. AWS Artifact proporciona acceso bajo demanda a los informes de seguridad y conformidad de AWS y a los acuerdos en l\u00ednea selectos. AWS Key Management Service ( AWS KMS ): permite crear y administrar claves. Puede utilizar AWS KMS para controlar el uso del cifrado en una amplia gama de servicios de AWS y en sus aplicaciones. AWS Shield : es un servicio administrado de protecci\u00f3n contra ataques de denegaci\u00f3n de servicio distribuidos (DDoS) que protege las aplicaciones que se ejecutan en AWS. Servicios de administraci\u00f3n de costes \u00b6 Los servicios que ofrece AWS para administrar los costes son: Informe de uso y coste de AWS contiene el conjunto m\u00e1s completo de datos de uso y costo de AWS disponibles e incluye metadatos adicionales sobre los servicios, los precios y las reservas de AWS. Presupuestos de AWS le permite definitir presupuestos personalizados que generar\u00e1n una alerta cuando los costos o el uso superen, o se prev\u00e9 que superen, el importe presupuestado. AWS Cost Explorer cuenta con una interfaz sencilla que permite visualizar, comprender y administrar los costos y el uso de AWS a lo largo del tiempo.Formaci\u00f3n y certificaci\u00f3n de AWS Administraci\u00f3n y gobernanza de datos \u00b6 La consola de administraci\u00f3n de AWS proporciona una interfaz de usuario basada en la web que permite obtener acceso a su cuenta de AWS. Los servicios que ofrece AWS para administrar y gobernar los datos son: AWS Config : proporciona un servicio que lo ayuda a realizar un seguimiento del inventario de recursos y sus cambios. Amazon CloudWatch : permite monitorear recursos y aplicaciones. AWS Auto Scaling : ofrece caracter\u00edsticas que permiten escalar varios recursos para satisfacer la demanda. Interfaz de l\u00ednea de comandos de AWS ( AWS CLI ) proporciona una herramienta unificada para administrar los servicios de AWS. AWS TrustedAdvisor : lo ayuda a optimizar el rendimiento y la seguridad. AWS Well-Architected Tool : ayuda a revisar y mejorar sus cargas de trabajo. AWS CloudTrail : realiza un seguimiento de la actividad de los usuarios y del uso de la API. Por ejemplo, haciendo usos de esos servicios se puede mostrar una soluci\u00f3n sencilla: Redes en AWS \u00b6 TODO: REVISAR Suponemos que los conceptos de red, subred y direcci\u00f3n IP y el modelo de la OSI est\u00e1n claros. Dentro de AWS se utiliza el m\u00e9todo CIDR para describir redes, por ejemplo, 192.0.2.0/24 (los primeros 24 bits son est\u00e1ticos, y los \u00faltimos 8 flexibles). Muchos de los conceptos de redes f\u00edsicas son validos para las redes cloud , en la nube nos ahorraremos gran parte de la complejidad. Amazon VPC \u00b6 Amazon Virtual Private Cloud Explicar VPC, tablas de enrutamiento, gateway y NAT gateway Siempre hay una VPC predeterminada. Muchas de las configuraciones se pueden realizar mediante el asistente de VPC Wizard, la cual facilita la creaci\u00f3n de arquitecturas de red v\u00e1lidas para soluciones cloud e h\u00edbridas. Amazon Virtual Private Cloud (Amazon VPC) le permite lanzar recursos de Amazon Web Services (AWS) en la red virtual que usted defina. Esta red virtual se asemeja en gran medida a una red tradicional que ejecutar\u00eda en su propio centro de datos, con los beneficios de utilizar la infraestructura escalable de AWS. Puede crear una VPC que abarque varias zonas de disponibilidad. Una gateway de Internet (IGW) es un componente de la VPC que permite la comunicaci\u00f3n entre instancias de la VPC e Internet. NAT gateway. Despu\u00e9s de crear una VPC, puede agregar subredes. Cada subred est\u00e1 ubicada por completo dentro de una zona de disponibilidad y no puede abarcar otras zonas. Si el tr\u00e1fico de una subred se direcciona a una gateway de Internet, la subred recibe el nombre de subred p\u00fablica. Si una subred no dispone de una ruta a la gateway de Internet, recibe el nombre de subred privada. El asistente tambi\u00e9n crear\u00e1 una Gateway NAT, que se utiliza para proporcionar conectividad a Internet a instancias EC2 en las subredes privadas. Ahora, configurar\u00e1 las subredes privadas para dirigir el tr\u00e1fico orientado hacia Internet a la gateway NAT a fin de que los recursos de la subred privada puedan conectarse a Internet, a la vez que mantienen los recursos privados. Esto se realiza mediante la configuraci\u00f3n de una tabla de enrutamiento. Una tabla de enrutamiento contiene un conjunto de reglas llamadas rutas que se utilizan para determinar el destino del tr\u00e1fico de red. Cada subred de una VPC debe estar asociada a una tabla de enrutamiento, que es la que controla el direccionamiento de la subred. Las reglas de las tablas de enrutamiento se coocan de m\u00e1s a menos restrictivas. crear\u00e1 un grupo de seguridad de VPC, que act\u00faa como un firewall virtual. Cuando se lanza una instancia, se asocia uno o varios grupos de seguridad a ella. Puede agregar reglas a cada grupo de seguridad que permitan el tr\u00e1fico hacia las instancias asociadas o desde ellas. Un p\u00e1rrafo de Route 53 (DNS) Un p\u00e1rrafo de Cloudfront (CDN) https://www.josemariagonzalez.es/amazon-web-services-aws/todo-lo-que-deberias-saber-sobre-las-redes-virtuales-en-amazon-aws.html Seguridad en la Nube \u00b6 La capacidad de proteger la integridad y la confidencialidad de los datos es esencial. Un agujero de seguridad puede tirar a la basura todo nuestro trabajo y hacer perder a la empresa el prestigio y much\u00edsimo dinero. Modelo de responsabilidad compartida de AWS \u00b6 La seguridad es una caracter\u00edstica que tien una responsabilidad compartida entre AWS y el cliente. Este modelo de responsabilidad compartida est\u00e1 dise\u00f1ado para minimizar la carga operativa del cliente, pero a\u00fan as\u00ed sigue siendo responsable de algunos aspectos de la seguridad general. Responsabilidad de AWS \u00b6 AWS es responsable de proteger la infraestructura en la que se ejecutan todos los servicios ofrecidos por la nube de AWS (en algunas preguntas de la certificaci\u00f3n se refieren a ellos por servicios de la nube): Seguridad f\u00edsica de los centros de datos con acceso controlado basado en las necesidades en instalaciones sin identificaci\u00f3n, con guardias de seguridad permanentes, autenticaci\u00f3n de dos factores, revisi\u00f3n y registro de accesos, videovigilancia, y destrucci\u00f3n y desmagnetizaci\u00f3n de discos. Infraestructura de hardware , como servidores, dispositivos de almacenamiento y otros dispositivos de los que dependen los servicios de AWS. Infraestructura de software ,que aloja sistemas operativos, aplicaciones de servicios y software de virtualizaci\u00f3n. Infraestructura de red , como routers, conmutadores, balanceadores de carga, firewalls y cables. AWS tambi\u00e9n monitorea la red en l\u00edmites externos, protege los puntos de acceso y proporciona infraestructura redundante con detecci\u00f3n de intrusiones de forma constante Responsabilidad del cliente \u00b6 El cliente es responsable del cifrado de los datos en reposo y los datos en tr\u00e1nsito, de todo lo que se pone en la nube. Los pasos de seguridad que debe tomar depender\u00e1n de los servicios que utilice y de la complejidad del sistema. Si entramos en m\u00e1s detalle, es responsable de: El sistema operativo de la instancia de Amazon EC2 : incluidas las actualizaciones, los parches de seguridad y su mantenimiento. La protecci\u00f3n de las aplicaciones que se lanzan en los recursos AWS: contrase\u00f1as, acceso basado en roles, etc. Configuraci\u00f3n del grupo de seguridad . SO o firewalls basados en host: incluidos los sistemas de detecci\u00f3n o prevenci\u00f3n de intrusiones. Configuraciones de red . Administraci\u00f3n de cuentas : Configuraci\u00f3n de inicio de sesi\u00f3n y credenciales para cada usuario. Respecto al contenido cr\u00edtico, el cliente es responsable de administrar: El contenido que eligen almacenar en AWS. Los servicios de AWS que se utilizan con el contenido. En qu\u00e9 pa\u00eds se almacena ese contenido. El formato y la estructura de ese contenido y si est\u00e1 enmascarado, cifrado o es an\u00f3nimo. Qui\u00e9n tiene acceso a ese contenido y c\u00f3mo se conceden, administran y revocan esos derechos de acceso. AWS IAM \u00b6 AWS Identity and Access Management (IAM) permite administrar el acceso a los recursos de AWS (de inform\u00e1tica, almacenamiento, base de datos, ...). IAM se puede utilizar para gestionar la autenticaci\u00f3n y para especificar y aplicar pol\u00edticas de autorizaci\u00f3n para especificar qu\u00e9 usuarios pueden obtener acceso a cada servicio. Es decir, permite definir qui\u00e9n, a qu\u00e9 y c\u00f3mo se accede a los recursos AWS. Los principales componentes son: Usuario : persona o aplicaci\u00f3n que se puede autenticar en AWS. Cada usuario debe tener un nombre \u00fanico (sin espacios en el nombre) dentro de la cuenta de AWS y un conjunto de credenciales de seguridad que no se comparte con otros usuarios. Estas credenciales son diferentes de las credenciales de seguridad de usuario ra\u00edz de la cuenta de AWS. Cada usuario est\u00e1 definido en una \u00fanica cuenta de AWS. Grupo : conjunto de usuarios de IAM, a los que se les concede una autorizaci\u00f3n id\u00e9ntica. As\u00ed pues, permite asociar las mismas pol\u00edticas a varios usuarios de una manera sencilla. Hay que tener en cuenta que: Un grupo puede contener muchos usuarios y un usuario puede pertenecer a varios grupos. Un grupo solo puede contener usuarios y, a su vez, un grupo no puede contener otros grupos. No hay ning\u00fan grupo predeterminado que incluya autom\u00e1ticamente a todos los usuarios de la cuenta de AWS. Pol\u00edtica de IAM : documento que define permisos para determinar lo que los usuarios pueden hacer en la cuenta de AWS. Una pol\u00edtica normalmente concede acceso a recursos determinados y especifica lo que el usuario puede hacer con esos recursos, aunque tambi\u00e9n pueden denegar expl\u00edcitamente el acceso. Rol : herramienta para conceder acceso temporal a recursos de AWS espec\u00edficos de una cuenta de AWS. Un rol de IAM puede tener asociadas pol\u00edticas de permisos y se puede utilizar para delegar acceso temporal a usuarios o aplicaciones. Dicho de otro modo, un rol de IAM es similar a un usuario, ya que es una identidad de AWS con pol\u00edticas de permisos que establecen qu\u00e9 puede hacer o no la identidad en AWS. Sin embargo, en lugar de estar asociada \u00fanicamente a una persona, el objetivo es que pueda asignarse un rol a cualquier persona que lo necesite. Tambi\u00e9n es conveniente destacar que cuando se asume un rol, se proporcionan credenciales de seguridad temporales para la sesi\u00f3n de rol, de manera que es conveniente utilizar roles para delegar el acceso a usuarios, aplicaciones o servicios que normalmente no tendr\u00edan acceso a los recursos de AWS. Veremos el uso de roles en la configuraci\u00f3n de la creaci\u00f3n de instancias EC2 . Consejo Es recomendable crear una cuenta de usuario IAM por separado con privilegios administrativos en lugar de utilizar el usuario de la cuenta ra\u00edz. Autenticaci\u00f3n \u00b6 Cuando se define un usuario de IAM se indica qu\u00e9 tipo de acceso puede utilizar el usuario para obtener acceso a los recursos de AWS: acceso mediante programaci\u00f3n: mediante email y clave de acceso secreta cuando realice una llamada a la API de AWS mediante la CLI de AWS, el SDK de AWS o cualquier otra herramienta de desarrollo. acceso a la consola de administraci\u00f3n de AWS: mediante usuario / contrase\u00f1a m\u00e1s el ID/alias de cuenta. Es recomendable activar MFA ( Multi-Factor Authentication ) para a\u00f1adir una capa m\u00e1s de seguridad. acceso mediante ambos tipos Autorizaci\u00f3n \u00b6 Una vez que el usuario se ha autenticado, se ha de determinar qu\u00e9 permisos debe concederse a un usuario, servicio o aplicaci\u00f3n. De forma predeterminada, los usuarios de IAM no tienen permiso para obtener acceso a los recursos o los datos en una cuenta de AWS. En su lugar, debe conceder permisos de forma expl\u00edcita a un usuario, grupo o rol mediante la creaci\u00f3n de una pol\u00edtica de IAM, ya que por defecto, se denegar\u00e1n todas las acciones que no se hayan permitido expl\u00edcitamente. Consejo Seguir el principio de m\u00ednimo privilegio: conceder \u00fanicamente los privilegios de usuario m\u00ednimos que necesita el usuario. El alcance de las configuraciones del servicio de IAM es global, se aplican en todas las regiones de AWS. Pol\u00edticas IAM \u00b6 Una pol\u00edtica de IAM es una instrucci\u00f3n formal mediante un documento JSON con los permisos que se conceder\u00e1 a una entidad. Las entidad es incluyen usuarios, grupos, roles o recursos. Las pol\u00edticas especifican cu\u00e1les son las acciones permitidas, cu\u00e1les son los recursos a los que estas tienen permiso y cu\u00e1l ser\u00e1 el efecto cuando el usuario solicite acceso a los recursos. Info Una sola pol\u00edtica se puede asociar a varias entidades. Una sola entidad puede tener varias pol\u00edticas asociadas a ella. Hay dos tipos de pol\u00edticas de IAM: pol\u00edticas basadas en identidad : controlan qu\u00e9 acciones puede realizar dicha identidad, en qu\u00e9 recursos y en qu\u00e9 condiciones. A su vez se dividen en administradas (asociada a varios usuarios/grupos/roles) o insertadas (un \u00fanico usuario/grupo/rol). pol\u00edticas basadas en recursos : son documentos de pol\u00edtica JSON que se asocia a un recurso (por ejemplo, un bucket de S3). Estas pol\u00edticas controlan qu\u00e9 acciones puede realizar una entidad principal especificada en dicho recurso y en qu\u00e9 condiciones. Destacar que no todos los servicios de AWS soportan este tipo de pol\u00edticas. Pol\u00edticas y permisos \u00b6 El usuario solo podr\u00e1 realizar la acci\u00f3n si la acci\u00f3n solicitada no est\u00e1 denegada de forma expl\u00edcita y est\u00e1 permitida de forma expl\u00edcita Cuando IAM determina si se concede un permiso, primero comprueba la existencia de cualquier pol\u00edtica de denegaci\u00f3n expl\u00edcita aplicable. Si no existe ninguna denegaci\u00f3n expl\u00edcita, comprueba si existe alguna pol\u00edtica de permisos expl\u00edcitos aplicable. Si no existe una pol\u00edtica de denegaci\u00f3n expl\u00edcita ni de permiso expl\u00edcito, IAM vuelve a la forma predeterminada, que consiste en denegar el acceso. Este proceso se denomina denegaci\u00f3n impl\u00edcita . Otros servicios relacionados con la seguridad AWS Organizations : Permite configurar los permisos de una organizaci\u00f3n que contiene varias cuentas de usuario en unidades organizativas (UO), y unificar tanto la seguridad como la facturaci\u00f3n AWS Key Management Service (AWS KMS): servicio que permite crear y administrar claves de cifrado Amazon Cognito : permite controlar el acceso a recursos de AWS desde aplicaciones con una credencial \u00fanica mediante SAML. AWS Shield : servicio administrado de protecci\u00f3n contra ataques de denegaci\u00f3n de servicio distribuidos (DDoS) que protege las aplicaciones ejecutadas en AWS. Actividades \u00b6 Realizar los m\u00f3dulos 3 (Informaci\u00f3n general sobre la infraestructura global de AWS) y 4 (Seguridad en la nube) del curso ACF de AWS . Realizar el m\u00f3dulo 5 (Redes y entrega de contenido) del curso ACF de AWS . Referencias \u00b6 Overview of Amazon Web Services","title":"2.- AWS"},{"location":"apuntes/nube02.html#amazon-web-services","text":"Amazon Web Services ofrece un conjunto de servicios que funcionan a modo de piezas de un puzzle, de manera que uniendo unos con otros podemos dise\u00f1ar la arquitectura necesaria para nuestras aplicaciones.","title":"Amazon Web Services"},{"location":"apuntes/nube02.html#servicios","text":"Los servicios de AWS se clasifican en categor\u00edas: A continuaci\u00f3n vamos a comentar las categor\u00edas m\u00e1s importantes junto a algunos de sus servicios m\u00e1s destacados:","title":"Servicios"},{"location":"apuntes/nube02.html#almacenamiento","text":"Los servicios que ofrece AWS para gestionar el almacenamiento de datos son: Amazon Simple Storage Service ( Amazon S3 ): servicio de almacenamiento de objetos que ofrece escalabilidad, disponibilidad de datos, seguridad y rendimiento. Se utiliza para almacenar y proteger cualquier cantidad de datos para sitios web, aplicaciones m\u00f3viles, copias de seguridad y restauraci\u00f3n, archivado, aplicaciones empresariales, dispositivos de Internet de las cosas (IoT) y an\u00e1lisis de bigdata. Amazon Elastic Block Store ( Amazon EBS ): almacenamiento en bloque de alto rendimiento dise\u00f1ado para utilizarse con Amazon EC2 para cargas de trabajo que hacen un uso intensivo de transacciones y de rendimiento. Se utiliza para una amplia gama de cargas de trabajo, como bases de datos relacionales y no relacionales, aplicaciones empresariales, aplicaciones en contenedores, motores de an\u00e1lisis de bigdata, sistemas de archivos y flujos de trabajo multimedia Amazon Elastic File System ( Amazon EFS ): proporciona un sistema de archivos de Network File System(NFS) el\u00e1stico escalable y completamente administrado para su uso con los servicios en la nube de AWS y los recursos en las instalaciones. Est\u00e1 dise\u00f1ado para escalar a petabytes bajo demanda, y aumenta y reduce su tama\u00f1o autom\u00e1ticamente a medida que se agregan y se eliminan archivos. Reduce la necesidad de aprovisionar y administrar capacidad para admitir el crecimiento Amazon Simple Storage Service Glacier ( Amazon S3 Glacier ): es un tipo de almacenamiento en la nube de Amazon S3 seguro, duradero y de muy bajo costo para archivar datos y realizar copias de seguridad a largo plazo. Est\u00e1 dise\u00f1ado para ofrecer una durabilidad del 99,999999999% y proporcionar capacidades integrales de seguridad y conformidad que permiten cumplir requisitos normativos estrictos Estos servicios los veremos en mayor profundidad en la sesi\u00f3n 5.- Almacenamiento en AWS .","title":"Almacenamiento"},{"location":"apuntes/nube02.html#informatica-computacion","text":"Los servicios que ofrece AWS relativos a la inform\u00e1tica o computaci\u00f3n son: Amazon Elastic Compute Cloud ( Amazon EC2 ): proporciona capacidad inform\u00e1tica de tama\u00f1o ajustable en forma de m\u00e1quinas virtuales en la nube Amazon EC2 Auto Scaling : permite agregar o eliminar autom\u00e1ticamente instancias EC2 de acuerdo con las condiciones que defina. Amazon Elastic Container Service ( Amazon ECS ): servicio de organizaci\u00f3n de contenedores altamente escalable y de gran rendimiento, compatible con los contenedores Docker. Amazon EC2 Container Registry ( Amazon ECR ): registro de contenedores Docker completamente administrado que facilita las tareas de mantenimiento, administraci\u00f3n e implementaci\u00f3n de im\u00e1genes de contenedores Docker . Amazon Elastic Beanstalk : servicio para implementar y escalar aplicaciones y servicios web en servicios web conocidos, como Apache o IIS. AWS Lambda : permite ejecutar c\u00f3digo sin necesidad de aprovisionar ni administrador servidores. S\u00f3lo se paga por el tiempo de computaci\u00f3n (cuando el c\u00f3digo no se ejecuta, no se paga nada) Amazon Elastic Kubernetes Service ( Amazon EKS ): facilita la implementaci\u00f3n, administraci\u00f3n y el escalado de aplicaciones en contenedores que utilizan Kubernetes en AWS. Amazon Fargate : motor inform\u00e1tico para ECS que permite ejecutar contenedores sin tener que administrar servidores ni cl\u00fasteres. Estos servicios los veremos en mayor profundidad en la sesi\u00f3n 4.- Computaci\u00f3n en AWS .","title":"Inform\u00e1tica / Computaci\u00f3n"},{"location":"apuntes/nube02.html#bases-de-datos","text":"Los servicios que ofrece AWS para gestionar los datos son: Amazon Relational Database Service ( Amazon RDS ): facilita las tareas de configuraci\u00f3n, operaci\u00f3n y escalado de una base de datos relacional en la nube. El servicio ofrece capacidad de tama\u00f1o ajustable al mismo tiempo que automatiza tareas administrativas que demandan mucho tiempo, como el aprovisionamiento de hardware, la configuraci\u00f3n de bases de datos, la implementaci\u00f3n de parches y la creaci\u00f3n de copias de seguridad Amazon Aurora : es una base de datos relacional compatible con MySQL/MariaDB y PostgreSQL. Amazon vende que es hasta cinco veces m\u00e1s r\u00e1pida que las bases de datos MySQL est\u00e1ndar y tres veces m\u00e1s r\u00e1pida que las bases de datos PostgreSQL est\u00e1ndar. Amazon Redshift : es un servicio de datawarehouse que permite ejecutar consultas anal\u00edticas de petabytes de datos almacenados localmente en Amazon Redshift, adem\u00e1s de ejecutar consultas anal\u00edticas de exabytes de datos almacenados en Amazon S3 de forma directa. Ofrece un rendimiento r\u00e1pido a cualquier escala. Amazon DynamoDB : es una base de datos de documentos y clave-valor que ofrece un rendimiento de milisegundos de un solo d\u00edgito a cualquier escala, con seguridad integrada, copias de seguridad y restauraci\u00f3n, y almacenamiento en cach\u00e9 en memoria. Estos servicios los veremos en mayor profundidad en la sesi\u00f3n 6.- Datos en AWS .","title":"Bases de Datos"},{"location":"apuntes/nube02.html#redes","text":"Los servicios que ofrece AWS para gestionar las redes son: Amazon Virtual Private Cloud ( Amazon VPC ): permite aprovisionar secciones aisladas de forma l\u00f3gica de la nube de AWS. Elastic Load Balancing : distribuye autom\u00e1ticamente el tr\u00e1fico entrante de las aplicaciones en varios destinos, tales como instancias de Amazon EC2, contenedores, direcciones IP y funciones Lambda. Amazon CloudFront : servicio r\u00e1pido de red de entrega de contenido (CDN) que suministra datos, videos, aplicaciones e interfaces de programaci\u00f3n de aplicaciones (API) de manera segura a clientes de todo el mundo, con baja latencia y altas velocidades de transferencia. AWS Transit Gateway : servicio que permite a los clientes conectar sus nubes privadas virtuales de Amazon (VPC) y sus redes en las instalaciones ( in-house ) a una \u00fanica gateway. Amazon Route 53 : servicio web de DNS escalable y en la nube dise\u00f1ado para direccionar a los usuarios finales a las aplicaciones de Internet de una forma confiable. AWS Direct Connect : ofrece una manera de establecer una conexi\u00f3n de red privada dedicada desde un centro de datos u oficina a AWS, lo que puede reducir los costes de red y aumentar el rendimiento del ancho de banda. AWS VPN : proporciona un t\u00fanel privado seguro desde una red o dispositivo a la red global de AWS.","title":"Redes"},{"location":"apuntes/nube02.html#seguridad-en-aws","text":"Los servicios que ofrece AWS para gestionar la seguridad, identidad y conformidad son: AWS Identity and Access Management ( IAM ): le permite administrar el acceso a los recursos y servicios de AWS de manera segura. Con IAM, puede crear y administrar usuarios y grupos de AWS. Puede utilizar los permisos de IAM para permitir y denegar el acceso de usuarios y grupos a los recursos de AWS. AWS Organizations : permite restringir los servicios y acciones que se permiten en sus cuentas.Amazon Cognito le permite incorporar control de acceso, inscripci\u00f3n e inicio de sesi\u00f3n de usuarios a sus aplicaciones web y m\u00f3viles. AWS Artifact proporciona acceso bajo demanda a los informes de seguridad y conformidad de AWS y a los acuerdos en l\u00ednea selectos. AWS Key Management Service ( AWS KMS ): permite crear y administrar claves. Puede utilizar AWS KMS para controlar el uso del cifrado en una amplia gama de servicios de AWS y en sus aplicaciones. AWS Shield : es un servicio administrado de protecci\u00f3n contra ataques de denegaci\u00f3n de servicio distribuidos (DDoS) que protege las aplicaciones que se ejecutan en AWS.","title":"Seguridad en AWS"},{"location":"apuntes/nube02.html#servicios-de-administracion-de-costes","text":"Los servicios que ofrece AWS para administrar los costes son: Informe de uso y coste de AWS contiene el conjunto m\u00e1s completo de datos de uso y costo de AWS disponibles e incluye metadatos adicionales sobre los servicios, los precios y las reservas de AWS. Presupuestos de AWS le permite definitir presupuestos personalizados que generar\u00e1n una alerta cuando los costos o el uso superen, o se prev\u00e9 que superen, el importe presupuestado. AWS Cost Explorer cuenta con una interfaz sencilla que permite visualizar, comprender y administrar los costos y el uso de AWS a lo largo del tiempo.Formaci\u00f3n y certificaci\u00f3n de AWS","title":"Servicios de administraci\u00f3n de costes"},{"location":"apuntes/nube02.html#administracion-y-gobernanza-de-datos","text":"La consola de administraci\u00f3n de AWS proporciona una interfaz de usuario basada en la web que permite obtener acceso a su cuenta de AWS. Los servicios que ofrece AWS para administrar y gobernar los datos son: AWS Config : proporciona un servicio que lo ayuda a realizar un seguimiento del inventario de recursos y sus cambios. Amazon CloudWatch : permite monitorear recursos y aplicaciones. AWS Auto Scaling : ofrece caracter\u00edsticas que permiten escalar varios recursos para satisfacer la demanda. Interfaz de l\u00ednea de comandos de AWS ( AWS CLI ) proporciona una herramienta unificada para administrar los servicios de AWS. AWS TrustedAdvisor : lo ayuda a optimizar el rendimiento y la seguridad. AWS Well-Architected Tool : ayuda a revisar y mejorar sus cargas de trabajo. AWS CloudTrail : realiza un seguimiento de la actividad de los usuarios y del uso de la API. Por ejemplo, haciendo usos de esos servicios se puede mostrar una soluci\u00f3n sencilla:","title":"Administraci\u00f3n y gobernanza de datos"},{"location":"apuntes/nube02.html#redes-en-aws","text":"TODO: REVISAR Suponemos que los conceptos de red, subred y direcci\u00f3n IP y el modelo de la OSI est\u00e1n claros. Dentro de AWS se utiliza el m\u00e9todo CIDR para describir redes, por ejemplo, 192.0.2.0/24 (los primeros 24 bits son est\u00e1ticos, y los \u00faltimos 8 flexibles). Muchos de los conceptos de redes f\u00edsicas son validos para las redes cloud , en la nube nos ahorraremos gran parte de la complejidad.","title":"Redes en AWS"},{"location":"apuntes/nube02.html#amazon-vpc","text":"Amazon Virtual Private Cloud Explicar VPC, tablas de enrutamiento, gateway y NAT gateway Siempre hay una VPC predeterminada. Muchas de las configuraciones se pueden realizar mediante el asistente de VPC Wizard, la cual facilita la creaci\u00f3n de arquitecturas de red v\u00e1lidas para soluciones cloud e h\u00edbridas. Amazon Virtual Private Cloud (Amazon VPC) le permite lanzar recursos de Amazon Web Services (AWS) en la red virtual que usted defina. Esta red virtual se asemeja en gran medida a una red tradicional que ejecutar\u00eda en su propio centro de datos, con los beneficios de utilizar la infraestructura escalable de AWS. Puede crear una VPC que abarque varias zonas de disponibilidad. Una gateway de Internet (IGW) es un componente de la VPC que permite la comunicaci\u00f3n entre instancias de la VPC e Internet. NAT gateway. Despu\u00e9s de crear una VPC, puede agregar subredes. Cada subred est\u00e1 ubicada por completo dentro de una zona de disponibilidad y no puede abarcar otras zonas. Si el tr\u00e1fico de una subred se direcciona a una gateway de Internet, la subred recibe el nombre de subred p\u00fablica. Si una subred no dispone de una ruta a la gateway de Internet, recibe el nombre de subred privada. El asistente tambi\u00e9n crear\u00e1 una Gateway NAT, que se utiliza para proporcionar conectividad a Internet a instancias EC2 en las subredes privadas. Ahora, configurar\u00e1 las subredes privadas para dirigir el tr\u00e1fico orientado hacia Internet a la gateway NAT a fin de que los recursos de la subred privada puedan conectarse a Internet, a la vez que mantienen los recursos privados. Esto se realiza mediante la configuraci\u00f3n de una tabla de enrutamiento. Una tabla de enrutamiento contiene un conjunto de reglas llamadas rutas que se utilizan para determinar el destino del tr\u00e1fico de red. Cada subred de una VPC debe estar asociada a una tabla de enrutamiento, que es la que controla el direccionamiento de la subred. Las reglas de las tablas de enrutamiento se coocan de m\u00e1s a menos restrictivas. crear\u00e1 un grupo de seguridad de VPC, que act\u00faa como un firewall virtual. Cuando se lanza una instancia, se asocia uno o varios grupos de seguridad a ella. Puede agregar reglas a cada grupo de seguridad que permitan el tr\u00e1fico hacia las instancias asociadas o desde ellas. Un p\u00e1rrafo de Route 53 (DNS) Un p\u00e1rrafo de Cloudfront (CDN) https://www.josemariagonzalez.es/amazon-web-services-aws/todo-lo-que-deberias-saber-sobre-las-redes-virtuales-en-amazon-aws.html","title":"Amazon VPC"},{"location":"apuntes/nube02.html#seguridad-en-la-nube","text":"La capacidad de proteger la integridad y la confidencialidad de los datos es esencial. Un agujero de seguridad puede tirar a la basura todo nuestro trabajo y hacer perder a la empresa el prestigio y much\u00edsimo dinero.","title":"Seguridad en la Nube"},{"location":"apuntes/nube02.html#modelo-de-responsabilidad-compartida-de-aws","text":"La seguridad es una caracter\u00edstica que tien una responsabilidad compartida entre AWS y el cliente. Este modelo de responsabilidad compartida est\u00e1 dise\u00f1ado para minimizar la carga operativa del cliente, pero a\u00fan as\u00ed sigue siendo responsable de algunos aspectos de la seguridad general.","title":"Modelo de responsabilidad compartida de AWS"},{"location":"apuntes/nube02.html#aws-iam","text":"AWS Identity and Access Management (IAM) permite administrar el acceso a los recursos de AWS (de inform\u00e1tica, almacenamiento, base de datos, ...). IAM se puede utilizar para gestionar la autenticaci\u00f3n y para especificar y aplicar pol\u00edticas de autorizaci\u00f3n para especificar qu\u00e9 usuarios pueden obtener acceso a cada servicio. Es decir, permite definir qui\u00e9n, a qu\u00e9 y c\u00f3mo se accede a los recursos AWS. Los principales componentes son: Usuario : persona o aplicaci\u00f3n que se puede autenticar en AWS. Cada usuario debe tener un nombre \u00fanico (sin espacios en el nombre) dentro de la cuenta de AWS y un conjunto de credenciales de seguridad que no se comparte con otros usuarios. Estas credenciales son diferentes de las credenciales de seguridad de usuario ra\u00edz de la cuenta de AWS. Cada usuario est\u00e1 definido en una \u00fanica cuenta de AWS. Grupo : conjunto de usuarios de IAM, a los que se les concede una autorizaci\u00f3n id\u00e9ntica. As\u00ed pues, permite asociar las mismas pol\u00edticas a varios usuarios de una manera sencilla. Hay que tener en cuenta que: Un grupo puede contener muchos usuarios y un usuario puede pertenecer a varios grupos. Un grupo solo puede contener usuarios y, a su vez, un grupo no puede contener otros grupos. No hay ning\u00fan grupo predeterminado que incluya autom\u00e1ticamente a todos los usuarios de la cuenta de AWS. Pol\u00edtica de IAM : documento que define permisos para determinar lo que los usuarios pueden hacer en la cuenta de AWS. Una pol\u00edtica normalmente concede acceso a recursos determinados y especifica lo que el usuario puede hacer con esos recursos, aunque tambi\u00e9n pueden denegar expl\u00edcitamente el acceso. Rol : herramienta para conceder acceso temporal a recursos de AWS espec\u00edficos de una cuenta de AWS. Un rol de IAM puede tener asociadas pol\u00edticas de permisos y se puede utilizar para delegar acceso temporal a usuarios o aplicaciones. Dicho de otro modo, un rol de IAM es similar a un usuario, ya que es una identidad de AWS con pol\u00edticas de permisos que establecen qu\u00e9 puede hacer o no la identidad en AWS. Sin embargo, en lugar de estar asociada \u00fanicamente a una persona, el objetivo es que pueda asignarse un rol a cualquier persona que lo necesite. Tambi\u00e9n es conveniente destacar que cuando se asume un rol, se proporcionan credenciales de seguridad temporales para la sesi\u00f3n de rol, de manera que es conveniente utilizar roles para delegar el acceso a usuarios, aplicaciones o servicios que normalmente no tendr\u00edan acceso a los recursos de AWS. Veremos el uso de roles en la configuraci\u00f3n de la creaci\u00f3n de instancias EC2 . Consejo Es recomendable crear una cuenta de usuario IAM por separado con privilegios administrativos en lugar de utilizar el usuario de la cuenta ra\u00edz.","title":"AWS IAM"},{"location":"apuntes/nube02.html#actividades","text":"Realizar los m\u00f3dulos 3 (Informaci\u00f3n general sobre la infraestructura global de AWS) y 4 (Seguridad en la nube) del curso ACF de AWS . Realizar el m\u00f3dulo 5 (Redes y entrega de contenido) del curso ACF de AWS .","title":"Actividades"},{"location":"apuntes/nube02.html#referencias","text":"Overview of Amazon Web Services","title":"Referencias"},{"location":"apuntes/nube03.html","text":"Servicios de computaci\u00f3n en AWS \u00b6 Introducci\u00f3n \u00b6 Los servicios de m\u00e1quinas virtuales fueron los primeros servicios tanto de AWS como de Azure, los cuales proporcionan infraestructura como servicio ( IaaS ). Posteriormente se a\u00f1adieron otros servicios como tecnolog\u00eda sin servidor ( serverless ), tecnolog\u00eda basada en contenedores y plataforma como servicio ( PaaS ). Ya hemos comentado el coste de ejecutar servidores in-house (compra, mantenimiento del centro de datos, personal, etc...) adem\u00e1s de la posibilidad de que la capacidad del servidor podr\u00eda permanecer sin uso e inactiva durante gran parte del tiempo de ejecuci\u00f3n de los servidores, lo que implica un desperdicio. Amazon EC2 \u00b6 Amazon Elastic Compute Cloud ( Amazon EC2 - https://docs.aws.amazon.com/ec2/ ) proporciona m\u00e1quinas virtuales en las que podemos alojar el mismo tipo de aplicaciones que podr\u00edamos ejecutar en un servidor en nuestras oficinas. Adem\u00e1s, ofrece capacidad de c\u00f3mputo segura y de tama\u00f1o ajustable en la nube. Las instancias EC2 admiten distintas cargas de trabajo (servidores de aplicaciones, web, de base de datos, de correo, multimedia, de archivos, etc..) La computaci\u00f3n el\u00e1stica ( Elastic Compute ) se refiere a la capacidad para aumentar o reducir f\u00e1cilmente la cantidad de servidores que ejecutan una aplicaci\u00f3n de manera autom\u00e1tica, as\u00ed como para aumentar o reducir la capacidad de procesamiento (CPU), memoria RAM o almacenamiento de los servidores existentes. La primera vez que lancemos una instancia de Amazon EC2, utilizaremos el asistente de lanzamiento de instancias de la consola de administraci\u00f3n de AWS, el cual nos facilita paso a paso la configuraci\u00f3n y creaci\u00f3n de nuestra m\u00e1quina virtual. Paso 1: AMI \u00b6 Una imagen de Amazon Machine (AMI) proporciona la informaci\u00f3n necesaria para lanzar una instancia EC2. As\u00ed pues, el primer paso consiste en elegir cual ser\u00e1 la AMI de nuestra instancia. Por ejemplo, una AMI que contenga un servidor de aplicaciones y otra que contenga un servidor de base de datos. Si vamos a montar un cluster, tambi\u00e9n podemos lanzar varias instancias a partir de una sola AMI. Las AMI incluyen los siguientes componentes: Una plantilla para el volumen ra\u00edz de la instancia, el cual contiene un sistema operativo y todo lo que se instal\u00f3 en \u00e9l (aplicaciones, librer\u00edas, etc.). Amazon EC2 copia la plantilla en el volumen ra\u00edz de una instancia EC2 nueva y, a continuaci\u00f3n, la inicia. Permisos de lanzamiento que controlan qu\u00e9 cuentas de AWS pueden usar la AMI. La asignaci\u00f3n de dispositivos de bloques que especifica los vol\u00famenes que deben asociarse a la instancia en su lanzamiento, si corresponde. Tipos de AMI \u00b6 Puede elegir entre los siguientes tipos de AMI: Quick Start : AWS ofrece una serie de AMI predise\u00f1adas, tanto Linux como Windows, para lanzar las instancias. Mis AMI : estas son las AMI que hemos creado nosotros. AWS Marketplace : cat\u00e1logo que incluye miles de soluciones de software creadas por empresas terceras. Estas AMI pueden ofrecer casos de uso espec\u00edficos para que pueda ponerse en marcha r\u00e1pidamente. AMI de la comunidad : estas son AMI creadas por personas de todo el mundo.AWS no controla estas AMI, as\u00ed que deben utilizarse bajo la propia responsabilidad, evitando su uso en entornos corporativos o de producci\u00f3n. Las AMI se crean a partir de una instancia EC2. Si queremos crear una AMI propia, podemos importar una m\u00e1quina virtual para que se convierta en una instancia EC2 y, luego guardar la instancia EC2 como una AMI. O partir de una AMI existente, modificarla conforme a nuestras necesidades y luego crear la nueva AMI. Las AMI dependen de la regi\u00f3n Las AMI que creamos se hacen en la regi\u00f3n en la que estamos conectados. Si la necesitamos en otra regi\u00f3n, debemos realizar un proceso de copia. Paso 2: Tipo de instancias \u00b6 El segundo paso es seleccionar un tipo de instancia, seg\u00fan nuestro caso de uso. Los tipos de instancia incluyen diversas combinaciones de capacidad de CPU, memoria, almacenamiento y red. Cada tipo de instancia se ofrece en uno o m\u00e1s tama\u00f1os, lo cual permite escalar los recursos en funci\u00f3n de los requisitos de la carga de trabajo de destino. Categor\u00edas \u00b6 Las categor\u00edas de tipos de instancia incluyen instancias de uso general, optimizadas para inform\u00e1tica, optimizadas para memoria, optimizadas para almacenamiento y de inform\u00e1tica acelerada. Categor\u00eda Tipo de instancia Caso de uso Uso general a1, m4, m5, t2, t3 Amplio Computaci\u00f3n c4, c5 Alto rendimiento Memoria r4, r5 , x1, z1 Big Data Inform\u00e1tica acelerada f1, g3, g4, p2, p3 Machine Learning Almacenamiento d2, h1, i3 Sistemas de archivos distribuidos Tipos de instancias \u00b6 Los tipos de instancias ( https://aws.amazon.com/es/ec2/instance-types/ ) ofrecen familias, generaciones y tama\u00f1os . As\u00ed pues, el tipo de instancia t3.large referencia a la familia T , de la tercera generaci\u00f3n y con un tama\u00f1o large . En general, los tipos de instancia que son de una generaci\u00f3n superior son m\u00e1s potentes y ofrecen una mejor relaci\u00f3n calidad/precio. Comparando tipos de instancias Cuando se comparan los tama\u00f1os hay que examinar la parte del coeficiente en la categor\u00eda de tama\u00f1o. Por ejemplo, una instancia t3.2xlarge tiene el doble de CPU virtual y memoria que una t3.xlarge . A su vez, la instancia t3.xlarge tiene el doble de CPU virtual y memoria que una t3.large . Tambi\u00e9n se debe tener en cuenta que el ancho de banda de red tambi\u00e9n est\u00e1 vinculado al tama\u00f1o de la instancia de Amazon EC2. Si ejecutar\u00e1 trabajos que requieren un uso muy intensivo de la red, es posible que deba aumentar las especificaciones de la instancia para que satisfaga sus necesidades. Paso 3: Configuraci\u00f3n de la instancia / red \u00b6 El siguiente paso es especificar la ubicaci\u00f3n de red en la que se implementar\u00e1 la instancia EC2, teniendo en cuenta la regi\u00f3n donde nos encontramos antes de lanzar la instancia. En este paso, elegiremos la VPC y la subred dentro de la misma, ya sea de las que tenemos creadas o pudiendo crear los recursos en este paso. Respecto a la asignaci\u00f3n p\u00fablica de ip sobre esta instancia, cuando se lanza una instancia en una VPC predeterminada, AWS le asigna una direcci\u00f3n IP p\u00fablica de forma predeterminada. En caso contrario, si la VPC no es la predeterminada, AWS no asignar\u00e1 una direcci\u00f3n IP p\u00fablica, a no ser que lo indiquemos de forma expl\u00edcita. Asociar un rol de IAM \u00b6 Si necesitamos que nuestras instancias EC2 ejecuten una aplicaci\u00f3n que debe realizar llamadas seguras de la API a otros servicios de AWS, en vez de dejar anotadas las credenciales en el c\u00f3digo de la aplicaci\u00f3n (esto es una muy mala pr\u00e1ctica que puede acarrear problemas de seguridad), debemos asociar un rol de IAM a una instancia EC2. El rol de IAM asociado a una instancia EC2 se almacena en un perfil de instancia . Si creamos el rol desde esta misma pantalla, AWS crear\u00e1 un perfil de instancia autom\u00e1ticamente y le otorgar\u00e1 el mismo nombre que al rol. En el desplegable la lista que se muestra es, en realidad, una lista de nombres de perfiles de instancia. Cuando definimos un rol que una instancia EC2 puede utilizar, estamos configurando qu\u00e9 cuentas o servicios de AWS pueden asumir dicho rol, as\u00ed como qu\u00e9 acciones y recursos de la API puede utilizar la aplicaci\u00f3n despu\u00e9s de asumir el rol. Si cambia un rol, el cambio se extiende a todas las instancias que tengan el rol asociado. La asociaci\u00f3n del rol no est\u00e1 limitada al momento del lanzamiento de la instancia, tambi\u00e9n se puede asociar un rol a una instancia que ya exista. Script de datos de usuario \u00b6 Al momento de crear las instancias EC2, de forma opcional, podemos especificar un script de datos de usuario durante el lanzamiento de la instancia. Los datos de usuario pueden automatizar la finalizaci\u00f3n de las instalaciones y las configuraciones durante el lanzamiento de la instancia. Por ejemplo, un script de datos de usuario podr\u00eda colocar parches en el sistema operativo de la instancia y actualizarlo, recuperar e instalar claves de licencia de software, o instalar sistemas de software adicionales. Script en Windows Si nuestra instancia es de Windows, el script de datos de usuario debe escribirse en un formato que sea compatible con una ventana del s\u00edmbolo del sistema (comandos por lotes) o con Windows PowerShell. De forma predeterminada, los datos de usuario s\u00f3lo se ejecutan la primera vez que se inicia la instancia. Paso 4: Almacenamiento \u00b6 Al lanzar la instancia EC2 configuraremos las opciones de almacenamiento. Por ejemplo el tama\u00f1o del volumen ra\u00edz en el que est\u00e1 instalado el sistema operativo invitado o vol\u00famenes de almacenamiento adicionales cuando lance la instancia. Algunas AMI est\u00e1n configuradas para lanzar m\u00e1s de un volumen de almacenamiento de forma predeterminada y, de esa manera, proporcionar almacenamiento independiente del volumen ra\u00edz. Para cada volumen que tenga la instancia, podemos indicar el tama\u00f1o de los discos, los tipos de volumen, si el almacenamiento se conservar\u00e1 en el caso de terminaci\u00f3n de la instancia y si se debe utilizar el cifrado. En la sesi\u00f3n anterior ya comentamos algunos de los servicios de almacenamiento que estudiaremos en profundidad en la siguiente sesi\u00f3n, como pueden ser Amazon EBS (almacenamiento por bloques de alto rendimiento) o Amazon EFS (almacenamiento el\u00e1stico compartido entre diferentes instancias). Paso 5: Etiquetas \u00b6 Las etiquetas son marcas que se asignan a los recursos de AWS. Cada etiqueta est\u00e1 formada por una clave y un valor opcional, siendo ambos campos case sensitive . El etiquetado es la forma en que asocia metadatos a una instancia EC2. De esta manera, permiten clasificar los recursos de AWS, como las instancias EC2, de diferentes maneras. Por ejemplo, en funci\u00f3n de la finalidad, el propietario o el entorno. Los beneficios potenciales del etiquetado son la capacidad de filtrado, la automatizaci\u00f3n, la asignaci\u00f3n de costes y el control de acceso. Paso 6: Grupo de seguridad \u00b6 Un grupo de seguridad es un conjunto de reglas de firewall que controlan el tr\u00e1fico de red de una o m\u00e1s instancias, por lo que se encuentra fuera del sistema operativo de la instancia. Dentro del grupo, agregaremos reglas para habilitar el tr\u00e1fico hacia o desde nuestras instancias asociadas. Para cada una de estas reglas especificaremos el puerto, el protocolo (TCP, UDP, ICMP), as\u00ed como el origen (por ejemplo, una direcci\u00f3n IP u otro grupo de seguridad) que tiene permiso para utilizar la regla. De forma predeterminada, se incluye una regla de salida que permite todo el tr\u00e1fico saliente. Es posible quitar esta regla y agregar reglas de salida que solo permitan tr\u00e1fico saliente espec\u00edfico. AWS eval\u00faa las reglas de todos los grupos de seguridad asociados a una instancia para decidir si permite que el tr\u00e1fico llegue a ella. Si desea lanzar una instancia en una nube virtual privada (VPC), debe crear un grupo de seguridad nuevo o utilizar uno que ya exista en esa VPC. Las reglas de un grupo de seguridad se pueden modificar en cualquier momento, y las reglas nuevas se aplicar\u00e1n autom\u00e1ticamente a todas las instancias que est\u00e9n asociadas al grupo de seguridad. Paso 7: An\u00e1lisis e identificaci\u00f3n \u00b6 El paso final es una p\u00e1gina resumen con todos los datos introducidos. Cuando le damos a lanzar la nueva instancia configurada, nos aparecer\u00e1 un cuadro de di\u00e1logo donde se solicita que elijamos un par de claves existente, continuar sin un par de claves o crear un par de claves nuevo antes de crear y lanzar la instancia EC2. Amazon EC2 utiliza la criptograf\u00eda de clave p\u00fablica para cifrar y descifrar la informaci\u00f3n de inicio de sesi\u00f3n. La clave p\u00fablica la almacena AWS, mientras que .la clave privada que la almacenamos nosotros. Guarda tus claves Si creamos una par de claves nuevas, hemos de descargarlas y guardarlas en un lugar seguro. Esta es la \u00fanica oportunidad de guardar el archivo de clave privada. Si perdemos las claves, tendremos que destruir la instancia y volver a crearla. Para conectarnos a la instancia desde nuestra m\u00e1quina local, necesitamos hacerlo via un cliente SSH / Putty adjuntando el par de claves descargado. Si la AMI es de Windows, utilizaremos la clave privada para obtener la contrase\u00f1a de administrador que necesita para iniciar sesi\u00f3n en la instancia. En cambio, si la AMI es de Linux, lo haremos mediante ssh: ssh -i /path/miParClaves.pem miNombreUsuarioInstancia@miPublicDNSInstancia M\u00e1s informaci\u00f3n en: https://docs.aws.amazon.com/es_es/AWSEC2/latest/UserGuide/AccessingInstances.html Por \u00faltimo, una vez lanzada la instancia, podemos observar la informacion disponible sobre la misma: direcci\u00f3n IP y la direcci\u00f3n DNS, el tipo de instancia, el ID de instancia \u00fanico asignado a la instancia, el ID de la AMI que utiliz\u00f3 para lanzar la instancia, el ID de la VPC, el ID de la subred, etc... Uso de la consola \u00b6 Tambi\u00e9n puede lanzar instancias EC2 mediante programaci\u00f3n, ya sea a trav\u00e9s de la interfaz de l\u00ednea de comandos de AWS (CLI de AWS) o uno de los kits de desarrollo de software (SDK) de AWS.En el comando de la CLI de AWS de ejemplo, ver\u00e1 un solo comando que especifica la informaci\u00f3n m\u00ednima necesaria para lanzar una instancia. El comando incluye la siguiente informaci\u00f3n: aws: especifica la invocaci\u00f3n de la utilidad de l\u00ednea de comandos aws. ec2: especifica la invocaci\u00f3n del comando del servicioec2. run-instances: es el subcomando que se invoca.El resto del comando especifica varios par\u00e1metros, entre los que se incluyen los siguientes: image-id: este par\u00e1metro va seguido de un ID de AMI. Todas las AMI tienen un ID de \u00fanico.count: puede especificar m\u00e1s de una instancia. instance-type: puede especificar el tipo de instancia que se crear\u00e1, como una instancia c3.large.key-name: en el ejemplo, supongamos que MyKeyPairya existe. security-groups: en este ejemplo, supongamos que MySecurityGroupya existe. region: las AMI se encuentran en una regi\u00f3n de AWS, por lo que debe especificar la regi\u00f3n donde la CLI de AWS encontrar\u00e1 la AMI y lanzar\u00e1 la instancia EC2. El comando deber\u00eda crear la instancia EC2 correctamente si suceden los siguientes supuestos:El comando tiene el formato correcto.Los recursos que el comando necesita ya existen.Cuenta con los permisos necesarios para ejecutar el comando.Tiene capacidad suficiente en la cuenta de AWS.Si el comando se ejecuta correctamente, la API responde al comando con el ID de la instancia y otros datos importantes para que la aplicaci\u00f3n los utilice en las solicitudes a la API posteriores. 45 Ciclo de vida de las instancias \u00b6 Este es el ciclo de vida de una instancia. Las flechas muestran las acciones que puede realizar, y las casillas indican el estadoque tendr\u00e1 la instancia despu\u00e9s de dicha acci\u00f3n. Las instancias pueden tener uno de los siguientes estados: Pending(pendiente): cuando se lanza una instancia por primera vez desde una AMI o cuando se activa una instancia detenida, esta pasa al estado pending cuando arranca y se implementa en un equipo de alojamiento. El tipo de instancia que especific\u00f3 durante el lanzamiento determinar\u00e1 el hardware del equipo de alojamiento para la instancia. Running(en ejecuci\u00f3n): cuando ya arranc\u00f3 la instancia por completo y est\u00e1 lista, sale del estado pending y pasa al estado running. Puede conectarse a trav\u00e9s de Internet a la instancia en ejecuci\u00f3n. Rebooting(reiniciada): AWS recomienda reiniciar las instancias con la consola de Amazon EC2, la CLI de AWS o los SDK de AWS, en lugar de invocar una acci\u00f3n de reinicio desde el sistema operativo invitado. Una instancia reiniciada permanece en el mismo host f\u00edsico, mantiene el mismo nombre DNS p\u00fablico y la misma direcci\u00f3n IP p\u00fablica y, si tiene vol\u00famenes del almac\u00e9n de instancias, conserva los datos en ellos. Shuttingdown(en proceso de cierre):este es un estado intermedio entre running y terminated. Terminated(terminada): las instancias terminadas permanecen visibles en la consola de Amazon EC2 durante un tiempo antes de que se elimine la m\u00e1quina virtual. Sin embargo, no es posible conectarse a una instancia terminada ni recuperarla. Stopping(en proceso de detenci\u00f3n): las instancias que cuentan con el respaldo de Amazon EBS se pueden detener. Entran en el estado stoppingantes de alcanzar el estado stopped por completo. Stopped(detenida):una instancia en el estado stopped no generar\u00e1 los mismos costos que una instancia en el estado running. Si se inicia una instancia en el estado stopped, esta vuelve al estado pending y se traslada a una nueva m\u00e1quina de alojamiento. 47 Algunas instancias que cuentan con el respaldo de Amazon EBS admiten la hibernaci\u00f3n. Cuando pone una instancia a hibernar, el sistema operativo invitado guarda el contenido de la memoria de la instancia (RAM) en el volumen ra\u00edz de Amazon EBS. Cuando reinicie la instancia, el volumen ra\u00edz se restaurar\u00e1 al estado anterior, se volver\u00e1 a cargar el contenido de la RAM y se reanudar\u00e1n los procesos que estaban en ejecuci\u00f3n anteriormente en la instancia.Solo algunas AMI de Linux que cuentan con el respaldo de Amazon EBS y determinados tipos de instancias admiten la hibernaci\u00f3n. La hibernaci\u00f3n tambi\u00e9n requiere el cifrado del volumen ra\u00edz de EBS. Adem\u00e1s, se debe habilitar la hibernaci\u00f3n con el lanzamiento inicial de la instancia. No puede habilitarla en una instancia existente que no ten\u00eda habilitada esta funci\u00f3n originalmente. Para obtener m\u00e1s informaci\u00f3n sobre los requisitos previos y el costo, consulte Hiberne su instancia de Linux en la p\u00e1gina de documentaci\u00f3n de AWS. 48 De manera predeterminada, todas las cuentas de AWS est\u00e1n limitadas a cinco (5) direcciones IP el\u00e1sticas por regi\u00f3n porque las direcciones p\u00fablicas de Internet (IPv4) son un recurso p\u00fablico escaso. Sin embargo, este l\u00edmite no es fijo, y se puede solicitar un aumento del l\u00edmite (que podr\u00eda aprobarse). 50 Metadatos de las instancias \u00b6 Los metadatos de la instancia son datos sobre la instancia. Puede verlos mientras est\u00e9 conectado a la instancia. Para acceder a ellos en un navegador, dir\u00edjase a la siguiente direcci\u00f3n URL: http://169.254.169.254/latest/meta-data/. Tambi\u00e9n puede leer los datos mediante programaci\u00f3n, por ejemplo, desde una ventana de terminal que tenga la utilidad cURL. En la ventana de terminal, ejecute cURLhttp://169.254.169.254/latest/meta-data/para recuperarlos. La direcci\u00f3n IP 169.254.169.254es una direcci\u00f3n de enlace local y solo es v\u00e1lida desde la instancia. Los metadatos de la instancia proporcionan en general la misma informaci\u00f3n acerca de la instancia en ejecuci\u00f3n que puede encontrar en la consola de administraci\u00f3n de AWS. Por ejemplo, puede conocer la direcci\u00f3n IP p\u00fablica, la direcci\u00f3n IP privada, el nombre de host p\u00fablico, el ID de la instancia, los grupos de seguridad, la regi\u00f3n, la zona de disponibilidad y mucho m\u00e1s. Tambi\u00e9n se puede acceder a todos los datos de usuario especificados durante el lanzamiento de la instancia en la siguiente direcci\u00f3n URL: http://169.254.169.254/latest/user-data.Los metadatos de instancias EC2 se pueden utilizar para configurar o administrar una instancia en ejecuci\u00f3n. Por ejemplo, puede crear un script de configuraci\u00f3n que tenga acceso a la informaci\u00f3n de metadatos y la utilice para configurar las aplicaciones o el sistema operativo. 51 IPs est\u00e1ticas Una direcci\u00f3n IP p\u00fablicaes una direcci\u00f3n IPv4 a la que se puede acceder desde Internet. A cada instancia que recibe una direcci\u00f3n IP p\u00fablica se le asigna tambi\u00e9n un nombre de host DNS externo. Por ejemplo, si la direcci\u00f3n IP p\u00fablica asignada a la instancia es 203.0.113.25, el nombre de host DNS externo podr\u00eda serec2-203-0-113-25.compute-1.amazonaws.com.Si especifica que se debe asignar una direcci\u00f3n IP p\u00fablica a la instancia, esta se asigna desde el grupo de direcciones IPv4 p\u00fablicas de AWS. La direcci\u00f3n IP p\u00fablica no est\u00e1 asociada a su cuenta de AWS. Cuando se desvincula una direcci\u00f3n IP p\u00fablica de la instancia, se vuelve a liberar en el grupo de direcciones IPv4 p\u00fablicas, y no podr\u00e1 indicar que desea volver a utilizarla. AWS libera la direcci\u00f3n IP p\u00fablica de la instancia cuando la instancia se detiene o se termina. La instancia detenida recibe una direcci\u00f3n IP p\u00fablica nueva cuando se reinicia.Si necesita una direcci\u00f3n IP p\u00fablica permanente, le recomendamos asociar una direcci\u00f3n IP el\u00e1stica a la instancia. Para hacerlo, primero debe asignar una nueva direcci\u00f3n IP el\u00e1stica en la regi\u00f3n donde se encuentra la instancia. Una vez asignada, puede asociar la direcci\u00f3n IP el\u00e1stica a una instancia EC2. 49 Monitorizaci\u00f3n \u00b6 Puede monitorizar las instancias con Amazon CloudWatch, el cual recopila y procesa los datos sin formato de Amazon EC2, y los convierte en m\u00e9tricas legibles casi en tiempo real. Estas estad\u00edsticas se registran durante un periodo de 15meses, de forma que pueda acceder a la informaci\u00f3n hist\u00f3rica y obtener una mejor perspectiva acerca del rendimiento de su servicio o aplicaci\u00f3n web.De forma predeterminada, Amazon EC2 proporciona un monitoreo b\u00e1sico,que env\u00eda datos de m\u00e9tricas a CloudWatch en intervalos de 5minutos. Para enviar los datos de las m\u00e9tricas de la instancia a CloudWatch cada 1 minuto, puede habilitar el monitoreo detallado en la instancia. Para obtener m\u00e1s informaci\u00f3n, consulte Habilitar o deshabilitar el monitoreo detallado de las instancias. La consola de Amazon EC2 muestra una serie de gr\u00e1ficos basados en los datos sin procesar de Amazon CloudWatch. En funci\u00f3n de sus necesidades, es posible que prefiera obtener los datos para las instancias de Amazon CloudWatch, en lugar de los gr\u00e1ficos en la consola. De forma predeterminada, Amazon CloudWatch no proporciona m\u00e9tricas de la RAM para las instancias EC2, pero puede configurar esta opci\u00f3n si desea que Cloud Watch recopile esos datos. 52 RESUMEN Las instancias EC2 se lanzan desde una plantilla de AMI en una VPC de su cuenta.Puede elegir entre muchos tipos de instancias. Cada tipo de instancia ofrece diferentes combinaciones de capacidades de CPU, RAM, almacenamiento y redes.Puede configurar grupos de seguridad para controlar el acceso a las instancias (especificar el origen y los puertos permitidos).Los datos de usuario le permiten especificar un script que se ejecutar\u00e1 la primera vez que se lance una instancia. Solo se pueden detener las instancias que cuentan con el respaldo de Amazon EBS. Puede utilizar Amazon CloudWatch para capturar y revisar m\u00e9tricas en instancias EC2. Optimizaci\u00f3n de costes \u00b6 AWS ofrece diferentes tipos de instancia Los modelos de precios de Amazon EC2 incluyen instancias bajo demanda, instancias reservadas, instancias de spot, instancias dedicadas y hosts dedicados. La facturaci\u00f3n por segundo est\u00e1 disponible para las instancias bajo demanda, las instancias reservadas y las instancias de spot que solo utilizan Amazon Linux y Ubuntu. Las instancias de spot se pueden interrumpir con una notificaci\u00f3n de 2 minutos. Sin embargo, pueden significar un ahorro considerable en comparaci\u00f3n con las instancias bajo demanda. Los cuatro pilares de la optimizaci\u00f3n de costes son: Adaptaci\u00f3n del tama\u00f1o Aumento de la elasticidad Modelo de precios \u00f3ptimo Optimizaci\u00f3n de las opciones de almacenamiento Servicios de contenedores \u00b6 Los contenedores pueden abarcar todo lo que una aplicaci\u00f3n necesita para ejecutarse. Docker es una plataforma de software que empaqueta software en contenedores. Una sola aplicaci\u00f3n puede abarcar varios contenedores. Amazon Elastic Container Service(Amazon ECS) organiza la ejecuci\u00f3n de los contenedores de Docker. Kuberneteses un software de c\u00f3digo abierto para la organizaci\u00f3n de contenedores. Amazon Elastic Kubernetes Service (Amazon EKS) le permite ejecutar Kubernetes en AWS. Amazon Elastic Container Registry (Amazon ECR) le permite almacenar, administrar e implementar sus contenedores de Docker AWS Lambda \u00b6 La inform\u00e1tica sin servidor le permite crear y ejecutar aplicaciones y servicios sin aprovisionar ni administrar servidores. AWS Lambda ( https://aws.amazon.com/es/lambda/ ) es un servicio de inform\u00e1tica sin servidor que proporciona las funcionalidades integradas de tolerancia a errores y escalado autom\u00e1tico, el cual se factura por el tiempo de ejecuci\u00f3n (cantidad de milisegundos por el n\u00famero de invocaciones a la funci\u00f3n). Para ello, permite la ejecuci\u00f3n de c\u00f3digo en el servidor con soporte para m\u00faltiples lenguajes (Java, C#, Python, Go, ...) sin necesidad de configurar una instancia EC2. Un origen de eventos es un servicio de AWS ( S3 , DynamoDB , ...) o una aplicaci\u00f3n creada por un desarrollador que desencadena la ejecuci\u00f3n de una funci\u00f3n de Lambda. Mediante AWS Step Functions se pueden crear flujos de trabajo encadenando llamadas a funciones lambda Las restricciones m\u00e1s destacables son: Permite hasta 1000 ejecuciones simult\u00e1neas en una \u00fanica regi\u00f3n. La cantidad m\u00e1xima de memoria que se puede asignar para una sola funci\u00f3n Lambda es de 3008 MB. El tiempo de ejecuci\u00f3n m\u00e1ximo para una funci\u00f3n Lambda es de 15 minutos. AWS Elastic Beanstalk \u00b6 AWS ElasticBeanstalk mejora la productividad de los desarrolladores. Simplifica el proceso de implementaci\u00f3n de la aplicaci\u00f3n. Reduce la complejidad de administraci\u00f3n. ElasticBeanstalk es compatible con Java, .NET, PHP, Node.js, Python, Ruby, Go y Docker. No se aplican cargos por utilizar ElasticBeanstalk. Pague \u00fanicamente por los recursos de AWS que utilice. Actividades \u00b6 Realizar el m\u00f3dulo 6 (Inform\u00e1tica) del curso ACF de AWS . Referencias \u00b6","title":"3.- Computaci\u00f3n en AWS"},{"location":"apuntes/nube03.html#servicios-de-computacion-en-aws","text":"","title":"Servicios de computaci\u00f3n en AWS"},{"location":"apuntes/nube03.html#introduccion","text":"Los servicios de m\u00e1quinas virtuales fueron los primeros servicios tanto de AWS como de Azure, los cuales proporcionan infraestructura como servicio ( IaaS ). Posteriormente se a\u00f1adieron otros servicios como tecnolog\u00eda sin servidor ( serverless ), tecnolog\u00eda basada en contenedores y plataforma como servicio ( PaaS ). Ya hemos comentado el coste de ejecutar servidores in-house (compra, mantenimiento del centro de datos, personal, etc...) adem\u00e1s de la posibilidad de que la capacidad del servidor podr\u00eda permanecer sin uso e inactiva durante gran parte del tiempo de ejecuci\u00f3n de los servidores, lo que implica un desperdicio.","title":"Introducci\u00f3n"},{"location":"apuntes/nube03.html#amazon-ec2","text":"Amazon Elastic Compute Cloud ( Amazon EC2 - https://docs.aws.amazon.com/ec2/ ) proporciona m\u00e1quinas virtuales en las que podemos alojar el mismo tipo de aplicaciones que podr\u00edamos ejecutar en un servidor en nuestras oficinas. Adem\u00e1s, ofrece capacidad de c\u00f3mputo segura y de tama\u00f1o ajustable en la nube. Las instancias EC2 admiten distintas cargas de trabajo (servidores de aplicaciones, web, de base de datos, de correo, multimedia, de archivos, etc..) La computaci\u00f3n el\u00e1stica ( Elastic Compute ) se refiere a la capacidad para aumentar o reducir f\u00e1cilmente la cantidad de servidores que ejecutan una aplicaci\u00f3n de manera autom\u00e1tica, as\u00ed como para aumentar o reducir la capacidad de procesamiento (CPU), memoria RAM o almacenamiento de los servidores existentes. La primera vez que lancemos una instancia de Amazon EC2, utilizaremos el asistente de lanzamiento de instancias de la consola de administraci\u00f3n de AWS, el cual nos facilita paso a paso la configuraci\u00f3n y creaci\u00f3n de nuestra m\u00e1quina virtual.","title":"Amazon EC2"},{"location":"apuntes/nube03.html#paso-1-ami","text":"Una imagen de Amazon Machine (AMI) proporciona la informaci\u00f3n necesaria para lanzar una instancia EC2. As\u00ed pues, el primer paso consiste en elegir cual ser\u00e1 la AMI de nuestra instancia. Por ejemplo, una AMI que contenga un servidor de aplicaciones y otra que contenga un servidor de base de datos. Si vamos a montar un cluster, tambi\u00e9n podemos lanzar varias instancias a partir de una sola AMI. Las AMI incluyen los siguientes componentes: Una plantilla para el volumen ra\u00edz de la instancia, el cual contiene un sistema operativo y todo lo que se instal\u00f3 en \u00e9l (aplicaciones, librer\u00edas, etc.). Amazon EC2 copia la plantilla en el volumen ra\u00edz de una instancia EC2 nueva y, a continuaci\u00f3n, la inicia. Permisos de lanzamiento que controlan qu\u00e9 cuentas de AWS pueden usar la AMI. La asignaci\u00f3n de dispositivos de bloques que especifica los vol\u00famenes que deben asociarse a la instancia en su lanzamiento, si corresponde.","title":"Paso 1: AMI"},{"location":"apuntes/nube03.html#paso-2-tipo-de-instancias","text":"El segundo paso es seleccionar un tipo de instancia, seg\u00fan nuestro caso de uso. Los tipos de instancia incluyen diversas combinaciones de capacidad de CPU, memoria, almacenamiento y red. Cada tipo de instancia se ofrece en uno o m\u00e1s tama\u00f1os, lo cual permite escalar los recursos en funci\u00f3n de los requisitos de la carga de trabajo de destino.","title":"Paso 2: Tipo de instancias"},{"location":"apuntes/nube03.html#paso-3-configuracion-de-la-instancia-red","text":"El siguiente paso es especificar la ubicaci\u00f3n de red en la que se implementar\u00e1 la instancia EC2, teniendo en cuenta la regi\u00f3n donde nos encontramos antes de lanzar la instancia. En este paso, elegiremos la VPC y la subred dentro de la misma, ya sea de las que tenemos creadas o pudiendo crear los recursos en este paso. Respecto a la asignaci\u00f3n p\u00fablica de ip sobre esta instancia, cuando se lanza una instancia en una VPC predeterminada, AWS le asigna una direcci\u00f3n IP p\u00fablica de forma predeterminada. En caso contrario, si la VPC no es la predeterminada, AWS no asignar\u00e1 una direcci\u00f3n IP p\u00fablica, a no ser que lo indiquemos de forma expl\u00edcita.","title":"Paso 3: Configuraci\u00f3n de la instancia / red"},{"location":"apuntes/nube03.html#paso-4-almacenamiento","text":"Al lanzar la instancia EC2 configuraremos las opciones de almacenamiento. Por ejemplo el tama\u00f1o del volumen ra\u00edz en el que est\u00e1 instalado el sistema operativo invitado o vol\u00famenes de almacenamiento adicionales cuando lance la instancia. Algunas AMI est\u00e1n configuradas para lanzar m\u00e1s de un volumen de almacenamiento de forma predeterminada y, de esa manera, proporcionar almacenamiento independiente del volumen ra\u00edz. Para cada volumen que tenga la instancia, podemos indicar el tama\u00f1o de los discos, los tipos de volumen, si el almacenamiento se conservar\u00e1 en el caso de terminaci\u00f3n de la instancia y si se debe utilizar el cifrado. En la sesi\u00f3n anterior ya comentamos algunos de los servicios de almacenamiento que estudiaremos en profundidad en la siguiente sesi\u00f3n, como pueden ser Amazon EBS (almacenamiento por bloques de alto rendimiento) o Amazon EFS (almacenamiento el\u00e1stico compartido entre diferentes instancias).","title":"Paso 4: Almacenamiento"},{"location":"apuntes/nube03.html#paso-5-etiquetas","text":"Las etiquetas son marcas que se asignan a los recursos de AWS. Cada etiqueta est\u00e1 formada por una clave y un valor opcional, siendo ambos campos case sensitive . El etiquetado es la forma en que asocia metadatos a una instancia EC2. De esta manera, permiten clasificar los recursos de AWS, como las instancias EC2, de diferentes maneras. Por ejemplo, en funci\u00f3n de la finalidad, el propietario o el entorno. Los beneficios potenciales del etiquetado son la capacidad de filtrado, la automatizaci\u00f3n, la asignaci\u00f3n de costes y el control de acceso.","title":"Paso 5: Etiquetas"},{"location":"apuntes/nube03.html#paso-6-grupo-de-seguridad","text":"Un grupo de seguridad es un conjunto de reglas de firewall que controlan el tr\u00e1fico de red de una o m\u00e1s instancias, por lo que se encuentra fuera del sistema operativo de la instancia. Dentro del grupo, agregaremos reglas para habilitar el tr\u00e1fico hacia o desde nuestras instancias asociadas. Para cada una de estas reglas especificaremos el puerto, el protocolo (TCP, UDP, ICMP), as\u00ed como el origen (por ejemplo, una direcci\u00f3n IP u otro grupo de seguridad) que tiene permiso para utilizar la regla. De forma predeterminada, se incluye una regla de salida que permite todo el tr\u00e1fico saliente. Es posible quitar esta regla y agregar reglas de salida que solo permitan tr\u00e1fico saliente espec\u00edfico. AWS eval\u00faa las reglas de todos los grupos de seguridad asociados a una instancia para decidir si permite que el tr\u00e1fico llegue a ella. Si desea lanzar una instancia en una nube virtual privada (VPC), debe crear un grupo de seguridad nuevo o utilizar uno que ya exista en esa VPC. Las reglas de un grupo de seguridad se pueden modificar en cualquier momento, y las reglas nuevas se aplicar\u00e1n autom\u00e1ticamente a todas las instancias que est\u00e9n asociadas al grupo de seguridad.","title":"Paso 6: Grupo de seguridad"},{"location":"apuntes/nube03.html#paso-7-analisis-e-identificacion","text":"El paso final es una p\u00e1gina resumen con todos los datos introducidos. Cuando le damos a lanzar la nueva instancia configurada, nos aparecer\u00e1 un cuadro de di\u00e1logo donde se solicita que elijamos un par de claves existente, continuar sin un par de claves o crear un par de claves nuevo antes de crear y lanzar la instancia EC2. Amazon EC2 utiliza la criptograf\u00eda de clave p\u00fablica para cifrar y descifrar la informaci\u00f3n de inicio de sesi\u00f3n. La clave p\u00fablica la almacena AWS, mientras que .la clave privada que la almacenamos nosotros. Guarda tus claves Si creamos una par de claves nuevas, hemos de descargarlas y guardarlas en un lugar seguro. Esta es la \u00fanica oportunidad de guardar el archivo de clave privada. Si perdemos las claves, tendremos que destruir la instancia y volver a crearla. Para conectarnos a la instancia desde nuestra m\u00e1quina local, necesitamos hacerlo via un cliente SSH / Putty adjuntando el par de claves descargado. Si la AMI es de Windows, utilizaremos la clave privada para obtener la contrase\u00f1a de administrador que necesita para iniciar sesi\u00f3n en la instancia. En cambio, si la AMI es de Linux, lo haremos mediante ssh: ssh -i /path/miParClaves.pem miNombreUsuarioInstancia@miPublicDNSInstancia M\u00e1s informaci\u00f3n en: https://docs.aws.amazon.com/es_es/AWSEC2/latest/UserGuide/AccessingInstances.html Por \u00faltimo, una vez lanzada la instancia, podemos observar la informacion disponible sobre la misma: direcci\u00f3n IP y la direcci\u00f3n DNS, el tipo de instancia, el ID de instancia \u00fanico asignado a la instancia, el ID de la AMI que utiliz\u00f3 para lanzar la instancia, el ID de la VPC, el ID de la subred, etc...","title":"Paso 7: An\u00e1lisis e identificaci\u00f3n"},{"location":"apuntes/nube03.html#uso-de-la-consola","text":"Tambi\u00e9n puede lanzar instancias EC2 mediante programaci\u00f3n, ya sea a trav\u00e9s de la interfaz de l\u00ednea de comandos de AWS (CLI de AWS) o uno de los kits de desarrollo de software (SDK) de AWS.En el comando de la CLI de AWS de ejemplo, ver\u00e1 un solo comando que especifica la informaci\u00f3n m\u00ednima necesaria para lanzar una instancia. El comando incluye la siguiente informaci\u00f3n: aws: especifica la invocaci\u00f3n de la utilidad de l\u00ednea de comandos aws. ec2: especifica la invocaci\u00f3n del comando del servicioec2. run-instances: es el subcomando que se invoca.El resto del comando especifica varios par\u00e1metros, entre los que se incluyen los siguientes: image-id: este par\u00e1metro va seguido de un ID de AMI. Todas las AMI tienen un ID de \u00fanico.count: puede especificar m\u00e1s de una instancia. instance-type: puede especificar el tipo de instancia que se crear\u00e1, como una instancia c3.large.key-name: en el ejemplo, supongamos que MyKeyPairya existe. security-groups: en este ejemplo, supongamos que MySecurityGroupya existe. region: las AMI se encuentran en una regi\u00f3n de AWS, por lo que debe especificar la regi\u00f3n donde la CLI de AWS encontrar\u00e1 la AMI y lanzar\u00e1 la instancia EC2. El comando deber\u00eda crear la instancia EC2 correctamente si suceden los siguientes supuestos:El comando tiene el formato correcto.Los recursos que el comando necesita ya existen.Cuenta con los permisos necesarios para ejecutar el comando.Tiene capacidad suficiente en la cuenta de AWS.Si el comando se ejecuta correctamente, la API responde al comando con el ID de la instancia y otros datos importantes para que la aplicaci\u00f3n los utilice en las solicitudes a la API posteriores. 45","title":"Uso de la consola"},{"location":"apuntes/nube03.html#ciclo-de-vida-de-las-instancias","text":"Este es el ciclo de vida de una instancia. Las flechas muestran las acciones que puede realizar, y las casillas indican el estadoque tendr\u00e1 la instancia despu\u00e9s de dicha acci\u00f3n. Las instancias pueden tener uno de los siguientes estados: Pending(pendiente): cuando se lanza una instancia por primera vez desde una AMI o cuando se activa una instancia detenida, esta pasa al estado pending cuando arranca y se implementa en un equipo de alojamiento. El tipo de instancia que especific\u00f3 durante el lanzamiento determinar\u00e1 el hardware del equipo de alojamiento para la instancia. Running(en ejecuci\u00f3n): cuando ya arranc\u00f3 la instancia por completo y est\u00e1 lista, sale del estado pending y pasa al estado running. Puede conectarse a trav\u00e9s de Internet a la instancia en ejecuci\u00f3n. Rebooting(reiniciada): AWS recomienda reiniciar las instancias con la consola de Amazon EC2, la CLI de AWS o los SDK de AWS, en lugar de invocar una acci\u00f3n de reinicio desde el sistema operativo invitado. Una instancia reiniciada permanece en el mismo host f\u00edsico, mantiene el mismo nombre DNS p\u00fablico y la misma direcci\u00f3n IP p\u00fablica y, si tiene vol\u00famenes del almac\u00e9n de instancias, conserva los datos en ellos. Shuttingdown(en proceso de cierre):este es un estado intermedio entre running y terminated. Terminated(terminada): las instancias terminadas permanecen visibles en la consola de Amazon EC2 durante un tiempo antes de que se elimine la m\u00e1quina virtual. Sin embargo, no es posible conectarse a una instancia terminada ni recuperarla. Stopping(en proceso de detenci\u00f3n): las instancias que cuentan con el respaldo de Amazon EBS se pueden detener. Entran en el estado stoppingantes de alcanzar el estado stopped por completo. Stopped(detenida):una instancia en el estado stopped no generar\u00e1 los mismos costos que una instancia en el estado running. Si se inicia una instancia en el estado stopped, esta vuelve al estado pending y se traslada a una nueva m\u00e1quina de alojamiento. 47 Algunas instancias que cuentan con el respaldo de Amazon EBS admiten la hibernaci\u00f3n. Cuando pone una instancia a hibernar, el sistema operativo invitado guarda el contenido de la memoria de la instancia (RAM) en el volumen ra\u00edz de Amazon EBS. Cuando reinicie la instancia, el volumen ra\u00edz se restaurar\u00e1 al estado anterior, se volver\u00e1 a cargar el contenido de la RAM y se reanudar\u00e1n los procesos que estaban en ejecuci\u00f3n anteriormente en la instancia.Solo algunas AMI de Linux que cuentan con el respaldo de Amazon EBS y determinados tipos de instancias admiten la hibernaci\u00f3n. La hibernaci\u00f3n tambi\u00e9n requiere el cifrado del volumen ra\u00edz de EBS. Adem\u00e1s, se debe habilitar la hibernaci\u00f3n con el lanzamiento inicial de la instancia. No puede habilitarla en una instancia existente que no ten\u00eda habilitada esta funci\u00f3n originalmente. Para obtener m\u00e1s informaci\u00f3n sobre los requisitos previos y el costo, consulte Hiberne su instancia de Linux en la p\u00e1gina de documentaci\u00f3n de AWS. 48 De manera predeterminada, todas las cuentas de AWS est\u00e1n limitadas a cinco (5) direcciones IP el\u00e1sticas por regi\u00f3n porque las direcciones p\u00fablicas de Internet (IPv4) son un recurso p\u00fablico escaso. Sin embargo, este l\u00edmite no es fijo, y se puede solicitar un aumento del l\u00edmite (que podr\u00eda aprobarse). 50","title":"Ciclo de vida de las instancias"},{"location":"apuntes/nube03.html#metadatos-de-las-instancias","text":"Los metadatos de la instancia son datos sobre la instancia. Puede verlos mientras est\u00e9 conectado a la instancia. Para acceder a ellos en un navegador, dir\u00edjase a la siguiente direcci\u00f3n URL: http://169.254.169.254/latest/meta-data/. Tambi\u00e9n puede leer los datos mediante programaci\u00f3n, por ejemplo, desde una ventana de terminal que tenga la utilidad cURL. En la ventana de terminal, ejecute cURLhttp://169.254.169.254/latest/meta-data/para recuperarlos. La direcci\u00f3n IP 169.254.169.254es una direcci\u00f3n de enlace local y solo es v\u00e1lida desde la instancia. Los metadatos de la instancia proporcionan en general la misma informaci\u00f3n acerca de la instancia en ejecuci\u00f3n que puede encontrar en la consola de administraci\u00f3n de AWS. Por ejemplo, puede conocer la direcci\u00f3n IP p\u00fablica, la direcci\u00f3n IP privada, el nombre de host p\u00fablico, el ID de la instancia, los grupos de seguridad, la regi\u00f3n, la zona de disponibilidad y mucho m\u00e1s. Tambi\u00e9n se puede acceder a todos los datos de usuario especificados durante el lanzamiento de la instancia en la siguiente direcci\u00f3n URL: http://169.254.169.254/latest/user-data.Los metadatos de instancias EC2 se pueden utilizar para configurar o administrar una instancia en ejecuci\u00f3n. Por ejemplo, puede crear un script de configuraci\u00f3n que tenga acceso a la informaci\u00f3n de metadatos y la utilice para configurar las aplicaciones o el sistema operativo. 51 IPs est\u00e1ticas Una direcci\u00f3n IP p\u00fablicaes una direcci\u00f3n IPv4 a la que se puede acceder desde Internet. A cada instancia que recibe una direcci\u00f3n IP p\u00fablica se le asigna tambi\u00e9n un nombre de host DNS externo. Por ejemplo, si la direcci\u00f3n IP p\u00fablica asignada a la instancia es 203.0.113.25, el nombre de host DNS externo podr\u00eda serec2-203-0-113-25.compute-1.amazonaws.com.Si especifica que se debe asignar una direcci\u00f3n IP p\u00fablica a la instancia, esta se asigna desde el grupo de direcciones IPv4 p\u00fablicas de AWS. La direcci\u00f3n IP p\u00fablica no est\u00e1 asociada a su cuenta de AWS. Cuando se desvincula una direcci\u00f3n IP p\u00fablica de la instancia, se vuelve a liberar en el grupo de direcciones IPv4 p\u00fablicas, y no podr\u00e1 indicar que desea volver a utilizarla. AWS libera la direcci\u00f3n IP p\u00fablica de la instancia cuando la instancia se detiene o se termina. La instancia detenida recibe una direcci\u00f3n IP p\u00fablica nueva cuando se reinicia.Si necesita una direcci\u00f3n IP p\u00fablica permanente, le recomendamos asociar una direcci\u00f3n IP el\u00e1stica a la instancia. Para hacerlo, primero debe asignar una nueva direcci\u00f3n IP el\u00e1stica en la regi\u00f3n donde se encuentra la instancia. Una vez asignada, puede asociar la direcci\u00f3n IP el\u00e1stica a una instancia EC2. 49","title":"Metadatos de las instancias"},{"location":"apuntes/nube03.html#monitorizacion","text":"Puede monitorizar las instancias con Amazon CloudWatch, el cual recopila y procesa los datos sin formato de Amazon EC2, y los convierte en m\u00e9tricas legibles casi en tiempo real. Estas estad\u00edsticas se registran durante un periodo de 15meses, de forma que pueda acceder a la informaci\u00f3n hist\u00f3rica y obtener una mejor perspectiva acerca del rendimiento de su servicio o aplicaci\u00f3n web.De forma predeterminada, Amazon EC2 proporciona un monitoreo b\u00e1sico,que env\u00eda datos de m\u00e9tricas a CloudWatch en intervalos de 5minutos. Para enviar los datos de las m\u00e9tricas de la instancia a CloudWatch cada 1 minuto, puede habilitar el monitoreo detallado en la instancia. Para obtener m\u00e1s informaci\u00f3n, consulte Habilitar o deshabilitar el monitoreo detallado de las instancias. La consola de Amazon EC2 muestra una serie de gr\u00e1ficos basados en los datos sin procesar de Amazon CloudWatch. En funci\u00f3n de sus necesidades, es posible que prefiera obtener los datos para las instancias de Amazon CloudWatch, en lugar de los gr\u00e1ficos en la consola. De forma predeterminada, Amazon CloudWatch no proporciona m\u00e9tricas de la RAM para las instancias EC2, pero puede configurar esta opci\u00f3n si desea que Cloud Watch recopile esos datos. 52 RESUMEN Las instancias EC2 se lanzan desde una plantilla de AMI en una VPC de su cuenta.Puede elegir entre muchos tipos de instancias. Cada tipo de instancia ofrece diferentes combinaciones de capacidades de CPU, RAM, almacenamiento y redes.Puede configurar grupos de seguridad para controlar el acceso a las instancias (especificar el origen y los puertos permitidos).Los datos de usuario le permiten especificar un script que se ejecutar\u00e1 la primera vez que se lance una instancia. Solo se pueden detener las instancias que cuentan con el respaldo de Amazon EBS. Puede utilizar Amazon CloudWatch para capturar y revisar m\u00e9tricas en instancias EC2.","title":"Monitorizaci\u00f3n"},{"location":"apuntes/nube03.html#optimizacion-de-costes","text":"AWS ofrece diferentes tipos de instancia Los modelos de precios de Amazon EC2 incluyen instancias bajo demanda, instancias reservadas, instancias de spot, instancias dedicadas y hosts dedicados. La facturaci\u00f3n por segundo est\u00e1 disponible para las instancias bajo demanda, las instancias reservadas y las instancias de spot que solo utilizan Amazon Linux y Ubuntu. Las instancias de spot se pueden interrumpir con una notificaci\u00f3n de 2 minutos. Sin embargo, pueden significar un ahorro considerable en comparaci\u00f3n con las instancias bajo demanda. Los cuatro pilares de la optimizaci\u00f3n de costes son: Adaptaci\u00f3n del tama\u00f1o Aumento de la elasticidad Modelo de precios \u00f3ptimo Optimizaci\u00f3n de las opciones de almacenamiento","title":"Optimizaci\u00f3n de costes"},{"location":"apuntes/nube03.html#servicios-de-contenedores","text":"Los contenedores pueden abarcar todo lo que una aplicaci\u00f3n necesita para ejecutarse. Docker es una plataforma de software que empaqueta software en contenedores. Una sola aplicaci\u00f3n puede abarcar varios contenedores. Amazon Elastic Container Service(Amazon ECS) organiza la ejecuci\u00f3n de los contenedores de Docker. Kuberneteses un software de c\u00f3digo abierto para la organizaci\u00f3n de contenedores. Amazon Elastic Kubernetes Service (Amazon EKS) le permite ejecutar Kubernetes en AWS. Amazon Elastic Container Registry (Amazon ECR) le permite almacenar, administrar e implementar sus contenedores de Docker","title":"Servicios de contenedores"},{"location":"apuntes/nube03.html#aws-lambda","text":"La inform\u00e1tica sin servidor le permite crear y ejecutar aplicaciones y servicios sin aprovisionar ni administrar servidores. AWS Lambda ( https://aws.amazon.com/es/lambda/ ) es un servicio de inform\u00e1tica sin servidor que proporciona las funcionalidades integradas de tolerancia a errores y escalado autom\u00e1tico, el cual se factura por el tiempo de ejecuci\u00f3n (cantidad de milisegundos por el n\u00famero de invocaciones a la funci\u00f3n). Para ello, permite la ejecuci\u00f3n de c\u00f3digo en el servidor con soporte para m\u00faltiples lenguajes (Java, C#, Python, Go, ...) sin necesidad de configurar una instancia EC2. Un origen de eventos es un servicio de AWS ( S3 , DynamoDB , ...) o una aplicaci\u00f3n creada por un desarrollador que desencadena la ejecuci\u00f3n de una funci\u00f3n de Lambda. Mediante AWS Step Functions se pueden crear flujos de trabajo encadenando llamadas a funciones lambda Las restricciones m\u00e1s destacables son: Permite hasta 1000 ejecuciones simult\u00e1neas en una \u00fanica regi\u00f3n. La cantidad m\u00e1xima de memoria que se puede asignar para una sola funci\u00f3n Lambda es de 3008 MB. El tiempo de ejecuci\u00f3n m\u00e1ximo para una funci\u00f3n Lambda es de 15 minutos.","title":"AWS Lambda"},{"location":"apuntes/nube03.html#aws-elastic-beanstalk","text":"AWS ElasticBeanstalk mejora la productividad de los desarrolladores. Simplifica el proceso de implementaci\u00f3n de la aplicaci\u00f3n. Reduce la complejidad de administraci\u00f3n. ElasticBeanstalk es compatible con Java, .NET, PHP, Node.js, Python, Ruby, Go y Docker. No se aplican cargos por utilizar ElasticBeanstalk. Pague \u00fanicamente por los recursos de AWS que utilice.","title":"AWS Elastic Beanstalk"},{"location":"apuntes/nube03.html#actividades","text":"Realizar el m\u00f3dulo 6 (Inform\u00e1tica) del curso ACF de AWS .","title":"Actividades"},{"location":"apuntes/nube03.html#referencias","text":"","title":"Referencias"},{"location":"apuntes/nube04.html","text":"Almacenamiento en AWS \u00b6 El almacenamiento en la nube, por lo general, es m\u00e1s confiable, escalable y seguro que los sistemas de almacenamiento tradicionales en las instalaciones. El an\u00e1lisis de Big Data , el almacenamiento de datos, el Internet de las cosas (IoT), las bases de datos y las aplicaciones de copias de seguridad y archivo dependen de alg\u00fan tipo de arquitectura de almacenamiento de datos. El almacenamiento m\u00e1s b\u00e1sico es el que incluyen las propias instancias, tambi\u00e9n conocido como el almac\u00e9n de instancias , o almacenamiento ef\u00edmero, es un almacenamiento temporal que se agrega a la instancia de AmazonEC2. El almac\u00e9n de instancias es una buena opci\u00f3n para el almacenamiento temporal de informaci\u00f3n que cambia con frecuencia, como buffers, memorias cach\u00e9, datos de pruebas y dem\u00e1s contenido temporal. Tambi\u00e9n se puede utilizar para los datos que se replican en una flota de instancias, como un grupo de servidores web con balanceo de carga. Si las instancias se detienen, ya sea debido a un error del usuario o un problema de funcionamiento, se eliminar\u00e1n los datos en el almac\u00e9n de instancias. Almacenamiento de bloque o de objeto AWS permite almacenar los datos en bloques o como objetos. Si el almacenamiento es en bloques, los datos se almacenan por trozos (bloques), de manera si se modifica una parte de los datos, solo se ha de modificar el bloque que lo contiene. En cambio, si el almacenamiento es a nivel de objeto, una modificaci\u00f3n implica tener que volver a actualizar el objeto entero. Esto provoca que el almacenamiento por bloque sea m\u00e1s r\u00e1pido. En cambio, el almacenamiento de objetos es m\u00e1s sencillo y por tanto m\u00e1s barato. AWS ofrece m\u00faltiples soluciones que vamos a revisar. Amazon EBS \u00b6 Amazon Elastic Block Store ( https://aws.amazon.com/es/ebs/ ) ofrece vol\u00famenes de almacenamiento a nivel de bloque de alto rendimiento para utilizarlos con instancias de Amazon EC2 para las cargas de trabajo con un uso intensivo de transacciones y de rendimiento. Los beneficios adicionales incluyen la replicaci\u00f3n en la misma zona de disponibilidad, el cifrado f\u00e1cil y transparente, los vol\u00famenes el\u00e1sticos y las copias de seguridad mediante instant\u00e1neas. Importante AmazonEBS se puede montar en una instancia de AmazonEC2 solamente dentro de la misma zona de disponibilidad. Vol\u00famenes \u00b6 Los vol\u00famenes de EBS proporcionan almacenamiento fuera de las instancias que persiste independientemente de la vida de la instancia. Son similares a discos virtuales en la nube. AmazonEBS ofrece tres tipos de vol\u00famenes: SSD de uso general, SSD de IOPS provisionadas y magn\u00e9ticos (HDD). Los tres tipos de vol\u00famenes difieren en caracter\u00edsticas de rendimiento y coste, para ofrecer diferentes posibilidades seg\u00fan las necesidades de las aplicaciones. FIXME: Completar Para crear o configurar un volumen, dentro de las instancias EC2, en el men\u00fa lateral podemos ver las opciones de ..... Los vol\u00famenes de Amazon EBS est\u00e1n asociados a la red, y su duraci\u00f3n es independiente a la vida de una instancia. Los vol\u00famenes de Amazon EBS tienen un alto nivel de disponibilidad y de confianza, y pueden aprovecharse como particiones de arranque de instancias de Amazon EC2 o asociarse a una instancia de Amazon EC2 en ejecuci\u00f3n como dispositivos de bloques est\u00e1ndar. Cuando se utilizan como particiones de arranque, las instancias de Amazon EC2 pueden detenerse y, posteriormente, reiniciarse, lo que le permite pagar solo por los recursos de almacenamiento utilizados al mismo tiempo que conserva el estado de la instancia. Los vol\u00famenes de Amazon EBS tienen durabilidad mucho mayor que los almacenes de instancias de Amazon EC2 locales porque los vol\u00famenes de Amazon EBS se replican autom\u00e1ticamente en el backend (en una \u00fanica zona de disponibilidad). Los vol\u00famenes de Amazon EBS ofrecen las siguientes caracter\u00edsticas: Almacenamiento persistente: el tiempo de vida de los vol\u00famenes es independiente de cualquier instancia de Amazon EC2. De uso general: los vol\u00famenes de Amazon EBS son dispositivos de bloques sin formato que se pueden utilizar en cualquier sistema operativo. Alto rendimiento: los vol\u00famenes de Amazon EBS son iguales que las unidades de Amazon EC2 locales o mejores que ellas. Nivel de fiabilidad alto: los vol\u00famenes de Amazon EBS tienen redundancia integrada dentro de una zona de disponibilidad. Dise\u00f1ados para ofrecer resiliencia: la AFR (tasa anual de errores) de Amazon EBS oscila entre 0,1 % y 1 %. Tama\u00f1o variable: los tama\u00f1os de los vol\u00famenes var\u00edan entre 1 GB y 16 TB. F\u00e1ciles de usar: los vol\u00famenes de Amazon EBS se pueden crear, asociar, almacenar en copias de seguridad, restaurar y eliminar f\u00e1cilmente. Solo una instancia de AmazonEC2 a la vez puede montarse en un volumen de Amazon EBS. Instant\u00e1neas \u00b6 Sin embargo, para los que quieran a\u00fan m\u00e1s durabilidad, con Amazon EBS es posible crear instant\u00e1neas uniformes puntuales de los vol\u00famenes, que luego se almacenan en Amazon Simple Storage Service (Amazon S3) y se replican autom\u00e1ticamente en varias zonas de disponibilidad. Estas instant\u00e1neas se pueden utilizar como punto de partida para nuevos vol\u00famenes de Amazon EBS y permiten proteger la durabilidad de sus datos a largo plazo. Tambi\u00e9n puede compartirlas f\u00e1cilmente con colegas y otros desarrolladores de AWS. Cuando lo desee, podr\u00e1 crear una cantidad ilimitada de instant\u00e1neas uniformes de un momento espec\u00edfico de los vol\u00famenes de Amazon EBS. Las instant\u00e1neas de Amazon EBS se almacenan en Amazon S3 con un alto nivel de durabilidad. Se pueden crear vol\u00famenes de Amazon EBS nuevos a partir de instant\u00e1neas para clonar o restaurar copias de seguridad. Las instant\u00e1neas de Amazon EBS tambi\u00e9n pueden compartirse f\u00e1cilmente entre usuarios de AWS o copiarse entre regiones de AWS. Amazon S3 \u00b6 AmazonS3 ( https://aws.amazon.com/es/s3/ ) es un servicio de almacenamiento persistente de objetos creado para almacenar y recuperar cualquier cantidad de datos desde cualquier lugar mediante una URL: sitios web y aplicaciones m\u00f3viles, aplicaciones corporativas y datos de sensores o dispositivos de Internet de las cosas (IoT) y an\u00e1lisis de Big Data . S3 es un servicio de almacenamiento a nivel de objetos , y tal como hab\u00edamos comentado, significa que si desea cambiar una parte de un archivo, tiene que realizar la modificaci\u00f3n y luego volver a cargar todo el archivo modificado. Los datos como objetos dentro de recursos conocidos como buckets . S3 es una soluci\u00f3n administrada de almacenamiento en la nube que se dise\u00f1\u00f3 para brindar un escalado sin problemas y 99,999999999% (11 nueves) de durabilidad. Adem\u00e1s de poder almacenar pr\u00e1cticamente todos los objetos que desee dentro de un bucket, le permite realizar operaciones de escritura, lectura y eliminaci\u00f3n de los objetos almacenados en el bucket. Los nombres de los buckets son universales y deben ser \u00fanicos entre todos los nombres de buckets existentes en Amazon S3. Los objetos pueden ser de hasta 5TB. De forma predeterminada, en Amazon S3 los datos se almacenan de forma redundante en varias instalaciones y en diferentes dispositivos de cada instalaci\u00f3n. Los datos que almacena en AmazonS3 no est\u00e1n asociados a ning\u00fan servidor en particular. Adem\u00e1s, no necesita administrar ninguna infraestructura por su cuenta. Puede colocar tantos objetos como quiera en Amazon S3. Amazon S3 contiene billones de objetos y, con regularidad, tiene picos de millones de solicitudes por segundo. Los objetos pueden ser pr\u00e1cticamente cualquier archivo de datos, como im\u00e1genes, videos o registros del servidor. Ya que Amazon S3 admite objetos de hasta varios terabytes de tama\u00f1o, le permite incluso almacenar instant\u00e1neas de bases de datos como objetos. Amazon S3 tambi\u00e9n ofrece acceso de baja latencia a los datos a trav\u00e9s de Internet mediante el protocolo de transferencia de hipertexto (HTTP) o el HTTP seguro (HTTPS), para que pueda recuperar datos en cualquier momento y desde cualquier lugar. Tambi\u00e9n puede acceder a AmazonS3 de forma privada a trav\u00e9s de un punto de enlace de nube virtual privada (VPC). Obtendr\u00e1 un control detallado sobre qui\u00e9n puede acceder a sus datos a trav\u00e9s de las pol\u00edticas de AWS Identity and Access Management (IAM), las pol\u00edticas de bucket de AmazonS3 e, incluso, las listas de control de acceso por objeto. De forma predeterminada, no se comparte ninguno de sus datos p\u00fablicamente. Tambi\u00e9n puede cifrar los datos en tr\u00e1nsito y elegir habilitar el cifrado del lado del servidor en sus objetos. Puede acceder a AmazonS3 a trav\u00e9s de la consola de administraci\u00f3n de AWS basada en la web, de forma program\u00e1tica a trav\u00e9s de la API y los SDK, o con soluciones de terceros que utilizan la API o los SDK. AmazonS3 incluye notificaciones de eventos que le permiten configurar notificaciones autom\u00e1ticas cuando se producen determinados eventos, como la carga o la eliminaci\u00f3n de un objeto en un bucketespec\u00edfico. Se le pueden enviar estas notificaciones o pueden utilizarse para desencadenar otros procesos, como funciones de AWS Lambda. Clases de almacenamiento \u00b6 S3 ofrece una variedad de clases de almacenamiento ( https://docs.aws.amazon.com/es_es/AmazonS3/latest/userguide/storage-class-intro.html ) a nivel de objetos que est\u00e1n dise\u00f1adas para diferentes casos de uso. Entre estas clases se incluyen las siguientes: AmazonS3 Est\u00e1ndar: la clase de almacenamiento Est\u00e1ndar de S3 est\u00e1 dise\u00f1ada para ofrecer almacenamiento de objetos de alta durabilidad, disponibilidad y rendimiento para los datos a los que se accede con frecuencia. Como ofrece baja latencia y alto nivel de rendimiento, Est\u00e1ndar de S3 es una opci\u00f3n adecuada para una amplia variedad de casos de uso, como las aplicaciones en la nube, los sitios web din\u00e1micos, la distribuci\u00f3n de contenido, las aplicaciones para dispositivos m\u00f3viles y videojuegos, y el an\u00e1lisis de bigdata. AmazonS3 Intelligent-Tiering: la clase de almacenamiento AmazonS3 Intelligent-Tieringse ha dise\u00f1ado para optimizar los costos mediante la migraci\u00f3n autom\u00e1tica de los datos a la capa de acceso m\u00e1s rentable, sin que se perjudique el rendimiento ni se produzca una sobrecarga operativa. Por una peque\u00f1a tarifa mensual de monitoreo y automatizaci\u00f3n por objeto, AmazonS3 monitorea los patrones de acceso de los objetos en AmazonS3 IntelligentTieringy traslada aquellos a los que no se ha accedido durante 30d\u00edas consecutivos a la capa de acceso poco frecuente. Si se accede a un objeto en la capa de acceso poco frecuente, este se traslada autom\u00e1ticamente a la capa de acceso frecuente. No se aplican tarifas por la recuperaci\u00f3n si se usa la clase de almacenamiento AmazonS3 IntelligentTieringni tampoco se cobran tarifas adicionales cuando los objetos se trasladan de una capa de acceso a otra. Funciona bien con datos de larga duraci\u00f3n con patrones de acceso desconocidos o impredecibles. AmazonS3 Est\u00e1ndar -Acceso poco frecuente: esta clase de almacenamiento de AmazonS3 se utiliza para los datos a los que se accede con menos frecuencia, pero que requieren acceso r\u00e1pido cuando es necesario. La clase Est\u00e1ndar -Acceso poco frecuente de S3 est\u00e1 dise\u00f1ada para ofrecer la alta durabilidad, el alto rendimiento y la baja latencia de Est\u00e1ndar de S3, con precios bajos de almacenamiento por GB y de recuperaci\u00f3n por GB. Esta combinaci\u00f3n de alto rendimiento y bajo costo convierte a Est\u00e1ndar -Acceso poco frecuente de S3 en una opci\u00f3n ideal para el almacenamiento y las copias de seguridad a largo plazo, adem\u00e1s de en un almac\u00e9n de datos para los archivos de recuperaci\u00f3n de desastres. AmazonS3 \u00danica zona \u2013Acceso poco frecuente: esta clase de almacenamiento de AmazonS3 est\u00e1 dise\u00f1ada para guardar los datos a los que se accede con menos frecuencia, pero que requieren acceso r\u00e1pido cuando es necesario. A diferencia de otras clases de almacenamiento de AmazonS3 que guardan datos en un m\u00ednimo de tres zonas de disponibilidad, \u00danica zona -Acceso poco frecuente de S3 almacena datos en una \u00fanica zona de disponibilidad y cuesta menos que Est\u00e1ndar -Acceso poco frecuente de S3. La clase \u00danica zona -Acceso poco frecuente de S3 es ideal para aquellos clientes que desean una opci\u00f3n de menor costo para los datos a los que se accede con poca frecuencia y que no necesitan el nivel de disponibilidad ni la resiliencia de Est\u00e1ndar de S3 o de Est\u00e1ndar -Acceso poco frecuente de S3. Es una buena opci\u00f3n para almacenar copias de seguridad secundarias de los datos que se encuentran en las instalaciones o de los datos que se pueden volver a crear f\u00e1cilmente. Tambi\u00e9n puede utilizarla como una opci\u00f3n de almacenamiento rentable para los datos que se replican desde otra regi\u00f3n de AWS con la replicaci\u00f3n entre regiones de AmazonS3. AmazonS3 Glacier ( https://aws.amazon.com/es/s3/glacier/ ): esta es una clase de almacenamiento seguro, duradero y de bajo costo para archivar datos. Puede almacenar con confianza cualquier cantidad de datos a costos que son competitivos o m\u00e1s econ\u00f3micos que los de las soluciones en las instalaciones. Para que los costos se mantengan bajos, pero sigan siendo aptos para diversas necesidades, AmazonS3 Glacier proporciona tres opciones de recuperaci\u00f3n, que van desde unos pocos minutos a unas horas. Puede cargar objetos directamente en AmazonS3 Glacier o utilizar pol\u00edticas de ciclo de vida de AmazonS3 para transferir datos entre cualquiera de las clases de almacenamiento de AmazonS3 para datos activos (Est\u00e1ndar, IntelligentTiering, Est\u00e1ndar -Acceso poco frecuente y \u00danica zona -Acceso poco frecuente) y AmazonS3 Glacier. AmazonS3 Glacier Deep Archive: esta es la clase de almacenamiento de menor costo en AmazonS3. Admite la retenci\u00f3n a largo plazo y la preservaci\u00f3n digital de datos a los que es posible que se acceda solo una o dos veces por a\u00f1o. Se dise\u00f1\u00f3 para clientes, en particular, para aquellos clientes que pertenecen a sectores con niveles de regulaci\u00f3n muy estrictos, como los servicios financieros, la sanidad y los sectores p\u00fablicos, los cuales retienen conjuntos de datos durante un periodo de7 a10a\u00f1os o m\u00e1s para cumplir los requisitos de conformidad normativa. AmazonS3 Glacier Deep Archive tambi\u00e9n se puede utilizar para casos de uso de copias de seguridad y de recuperaci\u00f3n de desastres. Se trata de una alternativa rentable y f\u00e1cil de administrar a los sistemas de cintas magn\u00e9ticas, independientemente de si estos sistemas de cintas son bibliotecas en las instalaciones o servicios fuera de ellas. AmazonS3 Glacier Deep Archive complementa a AmazonS3 Glacier y tambi\u00e9n est\u00e1 dise\u00f1ado para proporcionar una durabilidad del 99,999999999% (11nueves). Todos los objetos almacenados en AmazonS3 Glacier Deep Archive se replican y almacenan en al menos tres zonas de disponibilidad geogr\u00e1ficamente dispersas, y se pueden restaurar en 12horas.Para obtener m\u00e1s informaci\u00f3n, consulteClases de almacenamiento de AmazonS3. Con el an\u00e1lisis de clase de almacenamiento, puede evaluar los patrones de acceso al almacenamiento y transferir los datos correctos a la clase de almacenamiento adecuada. La caracter\u00edstica de an\u00e1lisis de AmazonS3 identifica autom\u00e1ticamente la pol\u00edtica de ciclo de vida \u00f3ptima para transferir el almacenamiento al que se accede con menos frecuencia a Est\u00e1ndar -Acceso poco frecuente de S3. Puede configurar una pol\u00edtica de an\u00e1lisis de la clase de almacenamiento para monitorear un bucket completo, un prefijo o una etiqueta de objeto. Una vez que se observa un patr\u00f3n de acceso poco frecuente, se puede crear con facilidad una nueva pol\u00edtica de ciclo de vida en funci\u00f3n de los resultados. El an\u00e1lisis de clases de almacenamiento tambi\u00e9n proporciona visualizaciones diarias del uso del almacenamiento en la consola de administraci\u00f3n de AWS. Puede exportarlas a un bucketde AmazonS3 para analizarlas utilizando las herramientas de inteligencia empresarial que prefiera, como Amazon QuickSight. Buckets \u00b6 Para utilizar AmazonS3 de forma eficaz, debe comprender algunos conceptos sencillos. En primer lugar, Amazon S3 almacena los datos en buckets. Los buckets son esencialmente el prefijo de un conjunto de archivos y, como tales, deben tener un nombre \u00fanico en todo AmazonS3 a nivel mundial. Los buckets son contenedores l\u00f3gicos de objetos. Puede tener uno o m\u00e1s buckets en su cuenta. Puede controlar el acceso a cada bucket, es decir, qui\u00e9n puede crear, eliminar y enumerar objetos en el bucket. Tambi\u00e9n puede ver registros de acceso al buckety a sus objetos, adem\u00e1s de elegir la regi\u00f3n geogr\u00e1fica donde AmazonS3 almacenar\u00e1 el buckety su contenido. Para cargar sus datos (como fotos, videos o documentos), cree un bucket en una regi\u00f3n de AWS y, a continuaci\u00f3n, cargue casi cualquier cantidad de objetos en el bucket. En el ejemplo, AmazonS3 se utiliz\u00f3 para crear un bucketen la regi\u00f3n de Tokio, que se identifica formalmente dentro de AWS con el c\u00f3digo de regi\u00f3n ap-northeast-1.La direcci\u00f3n URL de un bucketest\u00e1 estructurada como en los ejemplos. Puede utilizar dos estilos de URL diferentes para hacer referencia a los buckets. AmazonS3 se refiere a los archivos como objetos.Tan pronto como tenga un bucket, podr\u00e1 almacenar casi cualquier cantidad de objetos dentro de \u00e9l. Un objeto est\u00e1 compuesto por los datos y por cualquier metadato que describa a ese archivo, incluida la direcci\u00f3n URL. Para almacenar un objeto en AmazonS3, debe cargar en un bucketel archivo que quiera almacenar. Cuando carga un archivo, puede establecer permisos sobre los datos y cualquier metadato. En este ejemplo, el objeto Preview2.mp4 se almacena dentro del bucket. La direcci\u00f3n URL del archivo incluye el nombre del objeto al final. Cuando se crea un bucketen AmazonS3, este se asocia a una regi\u00f3n de AWS espec\u00edfica. Cuando almacena datos en el bucket, estos se almacenan de forma redundante en varias instalaciones de AWS dentro de la regi\u00f3n seleccionada. AmazonS3 est\u00e1 dise\u00f1ado para almacenar sus datos de forma duradera, incluso en el caso de producirse una p\u00e9rdida de datos simult\u00e1nea en dos instalaciones de AWS. AmazonS3 administra autom\u00e1ticamente el almacenamiento detr\u00e1s de su bucketa medida que aumenta la cantidad de datos. Puede comenzar de inmediato, y el almacenamiento de sus datos aumentar\u00e1 en funci\u00f3n de las necesidades de la aplicaci\u00f3n. AmazonS3 tambi\u00e9n es escalable, lo que le permitir\u00e1 gestionar un volumen elevado de solicitudes. No es necesario aprovisionar el almacenamiento ni el rendimiento, y solo se le facturar\u00e1 por lo que utilice. Puede obtener acceso a AmazonS3 a trav\u00e9s de la consola, de la interfaz de l\u00ednea de comandos de AWS (CLI de AWS), o del SDK de AWS. Tambi\u00e9n puede acceder a los datos de su bucketdirectamente a trav\u00e9s de los puntos de enlace basados en REST. Los puntos de enlace admiten el acceso HTTP o HTTPS. Para admitir este tipo de acceso basado en URL, los nombres de los bucketsde AmazonS3 deben ser \u00fanicos a nivel mundial y tambi\u00e9n deben cumplir los requisitos del servidor de nombres de dominio (DNS). Adem\u00e1s, las claves de objetos deben utilizar caracteres que sean seguros para las direcciones URL. FIXME: Ejemplo con pantallazos de como crear un bucket Casos de uso \u00b6 Esta flexibilidad para almacenar una cantidad pr\u00e1cticamente ilimitada de datos y para acceder a ellos desde cualquier lugar convierte a AmazonS3 en un servicio adecuado para distintos casos. Ahora, consideraremos algunos casos de uso para AmazonS3: Como ubicaci\u00f3n para cualquier dato de aplicaci\u00f3n, los bucketsde AmazonS3 proporcionan una ubicaci\u00f3n compartida para almacenar objetos a los que cualquier instancia de su aplicaci\u00f3n puede acceder, incluso las aplicaciones de AmazonEC2 o hasta los servidores tradicionales. Esta caracter\u00edstica puede resultar \u00fatil para los archivos multimedia generados por el usuario, los registros del servidor u otros archivos que su aplicaci\u00f3n deba almacenar en una ubicaci\u00f3n com\u00fan. Adem\u00e1s, como el contenido se puede obtener de manera directa a trav\u00e9s de Internet, es posible delegar una parte de la entrega de ese contenido de su aplicaci\u00f3n y permitir que los clientes consigan ellos mismos de forma directa los datos de AmazonS3. Para el alojamiento web est\u00e1tico, los bucketsde AmazonS3 pueden entregar el contenido est\u00e1tico de su sitio web, que incluye HTML, CSS, JavaScript y otros archivos. La gran durabilidad de AmazonS3 lo convierte en una buena opci\u00f3n para almacenar copias de seguridad de sus datos. Para una disponibilidad y capacidad de recuperaci\u00f3n de desastres incluso mejores, AmazonS3 puede hasta configurarse para admitir la replicaci\u00f3n entre regiones, de modo que los datos ubicados en un bucketde AmazonS3 en una regi\u00f3n puedan replicarse de forma autom\u00e1tica en otra regi\u00f3n de AmazonS3. Copia de seguridad y almacenamiento:preste servicios de copia de seguridad y almacenamiento de datos a terceros. Alojamiento de aplicaciones:preste servicios que implementen, instalen y administren aplicaciones web. Alojamiento multimedia:cree una infraestructura redundante, escalable y de alta disponibilidad que aloje cargas y descargas de videos, fotos o m\u00fasica. Entrega de software:aloje sus aplicaciones de software para que los clientes puedan descargarlas. Costes \u00b6 Con AmazonS3, los costos espec\u00edficos var\u00edan en funci\u00f3n de la regi\u00f3n y de las solicitudes espec\u00edficas que se realizaron. Solo paga por lo que utiliza, lo que incluye gigabytes por mes; transferencias desde otras regiones; y solicitudes PUT, COPY, POST, LIST y GET. Como regla general, solo paga por las transferencias que cruzan el l\u00edmite de su regi\u00f3n, lo que significa que no paga por las transferencias entrantesa AmazonS3 ni por las transferencias salientes desde AmazonS3 a las ubicaciones de borde de Amazon CloudFrontdentro de esa misma regi\u00f3n. Para comenzar a calcular los costos de AmazonS3, debe tener en cuenta lo siguiente: 1. Clase de almacenamiento: * El almacenamiento est\u00e1ndar est\u00e1 dise\u00f1ado para proporcionar 99,999999999% (11nueves) de durabilidad y 99,99% (4nueves) de disponibilidad. * Est\u00e1ndar -Acceso poco frecuente de S3es una opci\u00f3n de almacenamiento dentro de AmazonS3 que puede utilizar para reducir sus costos al guardar los datos a los que se accede con menos frecuencia con niveles de redundancia ligeramente inferiores a los del almacenamiento est\u00e1ndar de AmazonS3. El almacenamiento Est\u00e1ndar -Acceso poco frecuente est\u00e1 dise\u00f1ado para ofrecer la misma durabilidad de 99,999999999% (11nueves) de AmazonS3, pero con 99,9% (3nueves) de disponibilidad en un a\u00f1o concreto. Cada clase tiene diferentes tasas. 2. Cantidad de almacenamiento:se refiere a la cantidad y al tama\u00f1o de los objetos almacenados en los bucketsde AmazonS3. 3. Solicitudes:se consideran la cantidad y el tipo de las solicitudes. Las solicitudes GET generan cargos a tasas diferentes de las de otras solicitudes, como PUT y COPY. * GET:recupera un objeto en AmazonS3. Debe tener acceso de LECTURA para utilizar esta operaci\u00f3n. * PUT: agrega un objeto a un bucket. Debe contar con permisos de ESCRITURA en un bucketpara agregarle un objeto. * COPY:crea una copia de un objeto que ya est\u00e1 almacenado en AmazonS3. Una operaci\u00f3n COPY equivale a realizar una solicitud GET y luego una PUT. 4. Transferencia de datos:se considera lacantidad de datos transferidos fuera de la regi\u00f3n de AmazonS3. Recuerde que la transferencia entrante de datos es gratuita, pero se cobra un cargo por la transferencia saliente. S3 Select \u00b6 FIXME: completar Amazon S3 Select le permite utilizar instrucciones de lenguaje de consulta estructurada (SQL) simples para filtrar el contenido de los objetos de Amazon S3 y recuperar exactamente el subconjunto de datos que necesita. Si utiliza Amazon S3 Select para filtrar estos datos, puede reducir la cantidad de datos que Amazon S3 transfiere, lo que reduce tambi\u00e9n los costos y la latencia para recuperarlos. Amazon S3 Select funciona con objetos almacenados en formato CSV, JSON o Apache Parquet. Tambi\u00e9n funciona con objetos comprimidos con GZIP o BZIP2 (solo para objetos CSV y JSON), as\u00ed como con objetos cifrados del lado del servidor. Puede especificar el formato de los resultados como CSV o JSON, y tambi\u00e9n puede determinar c\u00f3mo se delimitan los registros en los resultados. Las expresiones SQL se pasan a Amazon S3 en la solicitud. Amazon S3 Select es compatible con un subconjunto de SQL. Para obtener m\u00e1s informaci\u00f3n sobre los elementos SQL compatibles con Amazon S3 Select, consulte Referencia de SQL para Amazon S3 Select y S3 Glacier Select.. Puede realizar consultas de SQL con los SDK de AWS, la API de REST SELECT Object Content, la AWS Command Line Interface (AWS CLI) o la consola de Amazon S3. La consola de Amazon S3 limita la cantidad de datos devueltos a 40 MB. Para recuperar m\u00e1s datos, utilice la AWS CLI o la API. Trabajando programativamente con S3 / S3 Select En el bloque de ingesta de datos, atacaremon S3 mediante Python directamente y utilizando AWS Lambda. Amazon EFS \u00b6 AmazonEFS ( https://aws.amazon.com/es/efs/ ) implementa almacenamiento para las instancias EC2 a las que pueden acceder varias m\u00e1quinas virtuales de forma simult\u00e1nea. Se ha implementado como un sistema de archivos de uso compartido que utiliza el protocolo de sistemas de archivos de red (NFS). AmazonEFS es un sistema de archivos de uso compartido que varias instancias de AmazonEC2 pueden montar al mismo tiempo. Amazon Elastic File System (AmazonEFS) proporciona un almacenamiento de archivos simple, escalable y el\u00e1stico para utilizarlo con los servicios de AWS y los recursos disponibles en las instalaciones. Ofrece una interfaz sencilla que le permite crear y configurar sistemas de archivos de forma r\u00e1pida y simple. AmazonEFS est\u00e1 dise\u00f1ado para escalar a petabytes de manera din\u00e1mica bajo demanda sin interrumpir las aplicaciones, por lo que se ampliar\u00e1 y reducir\u00e1 de forma autom\u00e1tica a medida que agregue o elimine archivos. Est\u00e1 dise\u00f1ado para que sus aplicaciones dispongan del almacenamiento que necesiten, cuando lo necesiten. AmazonEFS proporciona almacenamiento de archivos en la nube que resulta ideal para bigdata y an\u00e1lisis, flujos de trabajo de procesamiento multimedia, administraci\u00f3n de contenido, servidores web y directorios principales. AmazonEFS escala de manera ascendente o descendente a medida que se agregan o eliminan archivos y solo requiere pago por lo que se utiliza. AmazonEFS es un servicio completamente administrado al que se puede acceder desde la consola, una API o la CLI de AWS. Arquitecturas en la nube \u00b6 M\u00f3dulo 9 Introducci\u00f3n Secci\u00f3n 1: Principios de dise\u00f1o del marco de buena arquitectura de AWS External Tool Secci\u00f3n 1: Principios de dise\u00f1o del marco de buena arquitectura de AWS Secci\u00f3n 2: Excelencia operativa External Tool Secci\u00f3n 2: Excelencia operativa Secci\u00f3n 3: Seguridad External Tool Secci\u00f3n 3: Seguridad Secci\u00f3n 4: Fiabilidad External Tool Secci\u00f3n 4: Fiabilidad Secci\u00f3n 5: Eficiencia del rendimiento External Tool Secci\u00f3n 5: Eficiencia del rendimiento Secci\u00f3n 6: Optimizaci\u00f3n de costos External Tool Secci\u00f3n 6: Optimizaci\u00f3n de costos Secci\u00f3n 7: Fiabilidad y disponibilidad External Tool Secci\u00f3n 7: Fiabilidad y disponibilidad Secci\u00f3n 8: AWS Trusted Advisor External Tool Secci\u00f3n 8: AWS Trusted Advisor M\u00f3dulo 2 Conclusi\u00f3n External Tool M\u00f3dulo 2 Conclusi\u00f3n Student Guide External Tool Student Guide M\u00f3dulo 9 Evaluaci\u00f3n de conocimientos Assignment M\u00f3dulo 9 Evaluaci\u00f3n de conocimientos Actividades \u00b6 Realizar los m\u00f3dulo 7 (Almacenamiento) y del curso ACF de AWS . A partir del ejemplo de S3 Select, realiza un script en Python que cargue los siguientes datos en un bucket, y recupere XXXXX. A partir del archiov XXXXX, crear un bucket que muestre el contenido como un sitio web. Referencias \u00b6 https://docs.aws.amazon.com/es_es/whitepapers/latest/big-data-analytics-options/welcome.html","title":"4.- Almacenamiento en AWS"},{"location":"apuntes/nube04.html#almacenamiento-en-aws","text":"El almacenamiento en la nube, por lo general, es m\u00e1s confiable, escalable y seguro que los sistemas de almacenamiento tradicionales en las instalaciones. El an\u00e1lisis de Big Data , el almacenamiento de datos, el Internet de las cosas (IoT), las bases de datos y las aplicaciones de copias de seguridad y archivo dependen de alg\u00fan tipo de arquitectura de almacenamiento de datos. El almacenamiento m\u00e1s b\u00e1sico es el que incluyen las propias instancias, tambi\u00e9n conocido como el almac\u00e9n de instancias , o almacenamiento ef\u00edmero, es un almacenamiento temporal que se agrega a la instancia de AmazonEC2. El almac\u00e9n de instancias es una buena opci\u00f3n para el almacenamiento temporal de informaci\u00f3n que cambia con frecuencia, como buffers, memorias cach\u00e9, datos de pruebas y dem\u00e1s contenido temporal. Tambi\u00e9n se puede utilizar para los datos que se replican en una flota de instancias, como un grupo de servidores web con balanceo de carga. Si las instancias se detienen, ya sea debido a un error del usuario o un problema de funcionamiento, se eliminar\u00e1n los datos en el almac\u00e9n de instancias. Almacenamiento de bloque o de objeto AWS permite almacenar los datos en bloques o como objetos. Si el almacenamiento es en bloques, los datos se almacenan por trozos (bloques), de manera si se modifica una parte de los datos, solo se ha de modificar el bloque que lo contiene. En cambio, si el almacenamiento es a nivel de objeto, una modificaci\u00f3n implica tener que volver a actualizar el objeto entero. Esto provoca que el almacenamiento por bloque sea m\u00e1s r\u00e1pido. En cambio, el almacenamiento de objetos es m\u00e1s sencillo y por tanto m\u00e1s barato. AWS ofrece m\u00faltiples soluciones que vamos a revisar.","title":"Almacenamiento en AWS"},{"location":"apuntes/nube04.html#amazon-ebs","text":"Amazon Elastic Block Store ( https://aws.amazon.com/es/ebs/ ) ofrece vol\u00famenes de almacenamiento a nivel de bloque de alto rendimiento para utilizarlos con instancias de Amazon EC2 para las cargas de trabajo con un uso intensivo de transacciones y de rendimiento. Los beneficios adicionales incluyen la replicaci\u00f3n en la misma zona de disponibilidad, el cifrado f\u00e1cil y transparente, los vol\u00famenes el\u00e1sticos y las copias de seguridad mediante instant\u00e1neas. Importante AmazonEBS se puede montar en una instancia de AmazonEC2 solamente dentro de la misma zona de disponibilidad.","title":"Amazon EBS"},{"location":"apuntes/nube04.html#volumenes","text":"Los vol\u00famenes de EBS proporcionan almacenamiento fuera de las instancias que persiste independientemente de la vida de la instancia. Son similares a discos virtuales en la nube. AmazonEBS ofrece tres tipos de vol\u00famenes: SSD de uso general, SSD de IOPS provisionadas y magn\u00e9ticos (HDD). Los tres tipos de vol\u00famenes difieren en caracter\u00edsticas de rendimiento y coste, para ofrecer diferentes posibilidades seg\u00fan las necesidades de las aplicaciones. FIXME: Completar Para crear o configurar un volumen, dentro de las instancias EC2, en el men\u00fa lateral podemos ver las opciones de ..... Los vol\u00famenes de Amazon EBS est\u00e1n asociados a la red, y su duraci\u00f3n es independiente a la vida de una instancia. Los vol\u00famenes de Amazon EBS tienen un alto nivel de disponibilidad y de confianza, y pueden aprovecharse como particiones de arranque de instancias de Amazon EC2 o asociarse a una instancia de Amazon EC2 en ejecuci\u00f3n como dispositivos de bloques est\u00e1ndar. Cuando se utilizan como particiones de arranque, las instancias de Amazon EC2 pueden detenerse y, posteriormente, reiniciarse, lo que le permite pagar solo por los recursos de almacenamiento utilizados al mismo tiempo que conserva el estado de la instancia. Los vol\u00famenes de Amazon EBS tienen durabilidad mucho mayor que los almacenes de instancias de Amazon EC2 locales porque los vol\u00famenes de Amazon EBS se replican autom\u00e1ticamente en el backend (en una \u00fanica zona de disponibilidad). Los vol\u00famenes de Amazon EBS ofrecen las siguientes caracter\u00edsticas: Almacenamiento persistente: el tiempo de vida de los vol\u00famenes es independiente de cualquier instancia de Amazon EC2. De uso general: los vol\u00famenes de Amazon EBS son dispositivos de bloques sin formato que se pueden utilizar en cualquier sistema operativo. Alto rendimiento: los vol\u00famenes de Amazon EBS son iguales que las unidades de Amazon EC2 locales o mejores que ellas. Nivel de fiabilidad alto: los vol\u00famenes de Amazon EBS tienen redundancia integrada dentro de una zona de disponibilidad. Dise\u00f1ados para ofrecer resiliencia: la AFR (tasa anual de errores) de Amazon EBS oscila entre 0,1 % y 1 %. Tama\u00f1o variable: los tama\u00f1os de los vol\u00famenes var\u00edan entre 1 GB y 16 TB. F\u00e1ciles de usar: los vol\u00famenes de Amazon EBS se pueden crear, asociar, almacenar en copias de seguridad, restaurar y eliminar f\u00e1cilmente. Solo una instancia de AmazonEC2 a la vez puede montarse en un volumen de Amazon EBS.","title":"Vol\u00famenes"},{"location":"apuntes/nube04.html#instantaneas","text":"Sin embargo, para los que quieran a\u00fan m\u00e1s durabilidad, con Amazon EBS es posible crear instant\u00e1neas uniformes puntuales de los vol\u00famenes, que luego se almacenan en Amazon Simple Storage Service (Amazon S3) y se replican autom\u00e1ticamente en varias zonas de disponibilidad. Estas instant\u00e1neas se pueden utilizar como punto de partida para nuevos vol\u00famenes de Amazon EBS y permiten proteger la durabilidad de sus datos a largo plazo. Tambi\u00e9n puede compartirlas f\u00e1cilmente con colegas y otros desarrolladores de AWS. Cuando lo desee, podr\u00e1 crear una cantidad ilimitada de instant\u00e1neas uniformes de un momento espec\u00edfico de los vol\u00famenes de Amazon EBS. Las instant\u00e1neas de Amazon EBS se almacenan en Amazon S3 con un alto nivel de durabilidad. Se pueden crear vol\u00famenes de Amazon EBS nuevos a partir de instant\u00e1neas para clonar o restaurar copias de seguridad. Las instant\u00e1neas de Amazon EBS tambi\u00e9n pueden compartirse f\u00e1cilmente entre usuarios de AWS o copiarse entre regiones de AWS.","title":"Instant\u00e1neas"},{"location":"apuntes/nube04.html#amazon-s3","text":"AmazonS3 ( https://aws.amazon.com/es/s3/ ) es un servicio de almacenamiento persistente de objetos creado para almacenar y recuperar cualquier cantidad de datos desde cualquier lugar mediante una URL: sitios web y aplicaciones m\u00f3viles, aplicaciones corporativas y datos de sensores o dispositivos de Internet de las cosas (IoT) y an\u00e1lisis de Big Data . S3 es un servicio de almacenamiento a nivel de objetos , y tal como hab\u00edamos comentado, significa que si desea cambiar una parte de un archivo, tiene que realizar la modificaci\u00f3n y luego volver a cargar todo el archivo modificado. Los datos como objetos dentro de recursos conocidos como buckets . S3 es una soluci\u00f3n administrada de almacenamiento en la nube que se dise\u00f1\u00f3 para brindar un escalado sin problemas y 99,999999999% (11 nueves) de durabilidad. Adem\u00e1s de poder almacenar pr\u00e1cticamente todos los objetos que desee dentro de un bucket, le permite realizar operaciones de escritura, lectura y eliminaci\u00f3n de los objetos almacenados en el bucket. Los nombres de los buckets son universales y deben ser \u00fanicos entre todos los nombres de buckets existentes en Amazon S3. Los objetos pueden ser de hasta 5TB. De forma predeterminada, en Amazon S3 los datos se almacenan de forma redundante en varias instalaciones y en diferentes dispositivos de cada instalaci\u00f3n. Los datos que almacena en AmazonS3 no est\u00e1n asociados a ning\u00fan servidor en particular. Adem\u00e1s, no necesita administrar ninguna infraestructura por su cuenta. Puede colocar tantos objetos como quiera en Amazon S3. Amazon S3 contiene billones de objetos y, con regularidad, tiene picos de millones de solicitudes por segundo. Los objetos pueden ser pr\u00e1cticamente cualquier archivo de datos, como im\u00e1genes, videos o registros del servidor. Ya que Amazon S3 admite objetos de hasta varios terabytes de tama\u00f1o, le permite incluso almacenar instant\u00e1neas de bases de datos como objetos. Amazon S3 tambi\u00e9n ofrece acceso de baja latencia a los datos a trav\u00e9s de Internet mediante el protocolo de transferencia de hipertexto (HTTP) o el HTTP seguro (HTTPS), para que pueda recuperar datos en cualquier momento y desde cualquier lugar. Tambi\u00e9n puede acceder a AmazonS3 de forma privada a trav\u00e9s de un punto de enlace de nube virtual privada (VPC). Obtendr\u00e1 un control detallado sobre qui\u00e9n puede acceder a sus datos a trav\u00e9s de las pol\u00edticas de AWS Identity and Access Management (IAM), las pol\u00edticas de bucket de AmazonS3 e, incluso, las listas de control de acceso por objeto. De forma predeterminada, no se comparte ninguno de sus datos p\u00fablicamente. Tambi\u00e9n puede cifrar los datos en tr\u00e1nsito y elegir habilitar el cifrado del lado del servidor en sus objetos. Puede acceder a AmazonS3 a trav\u00e9s de la consola de administraci\u00f3n de AWS basada en la web, de forma program\u00e1tica a trav\u00e9s de la API y los SDK, o con soluciones de terceros que utilizan la API o los SDK. AmazonS3 incluye notificaciones de eventos que le permiten configurar notificaciones autom\u00e1ticas cuando se producen determinados eventos, como la carga o la eliminaci\u00f3n de un objeto en un bucketespec\u00edfico. Se le pueden enviar estas notificaciones o pueden utilizarse para desencadenar otros procesos, como funciones de AWS Lambda.","title":"Amazon S3"},{"location":"apuntes/nube04.html#clases-de-almacenamiento","text":"S3 ofrece una variedad de clases de almacenamiento ( https://docs.aws.amazon.com/es_es/AmazonS3/latest/userguide/storage-class-intro.html ) a nivel de objetos que est\u00e1n dise\u00f1adas para diferentes casos de uso. Entre estas clases se incluyen las siguientes: AmazonS3 Est\u00e1ndar: la clase de almacenamiento Est\u00e1ndar de S3 est\u00e1 dise\u00f1ada para ofrecer almacenamiento de objetos de alta durabilidad, disponibilidad y rendimiento para los datos a los que se accede con frecuencia. Como ofrece baja latencia y alto nivel de rendimiento, Est\u00e1ndar de S3 es una opci\u00f3n adecuada para una amplia variedad de casos de uso, como las aplicaciones en la nube, los sitios web din\u00e1micos, la distribuci\u00f3n de contenido, las aplicaciones para dispositivos m\u00f3viles y videojuegos, y el an\u00e1lisis de bigdata. AmazonS3 Intelligent-Tiering: la clase de almacenamiento AmazonS3 Intelligent-Tieringse ha dise\u00f1ado para optimizar los costos mediante la migraci\u00f3n autom\u00e1tica de los datos a la capa de acceso m\u00e1s rentable, sin que se perjudique el rendimiento ni se produzca una sobrecarga operativa. Por una peque\u00f1a tarifa mensual de monitoreo y automatizaci\u00f3n por objeto, AmazonS3 monitorea los patrones de acceso de los objetos en AmazonS3 IntelligentTieringy traslada aquellos a los que no se ha accedido durante 30d\u00edas consecutivos a la capa de acceso poco frecuente. Si se accede a un objeto en la capa de acceso poco frecuente, este se traslada autom\u00e1ticamente a la capa de acceso frecuente. No se aplican tarifas por la recuperaci\u00f3n si se usa la clase de almacenamiento AmazonS3 IntelligentTieringni tampoco se cobran tarifas adicionales cuando los objetos se trasladan de una capa de acceso a otra. Funciona bien con datos de larga duraci\u00f3n con patrones de acceso desconocidos o impredecibles. AmazonS3 Est\u00e1ndar -Acceso poco frecuente: esta clase de almacenamiento de AmazonS3 se utiliza para los datos a los que se accede con menos frecuencia, pero que requieren acceso r\u00e1pido cuando es necesario. La clase Est\u00e1ndar -Acceso poco frecuente de S3 est\u00e1 dise\u00f1ada para ofrecer la alta durabilidad, el alto rendimiento y la baja latencia de Est\u00e1ndar de S3, con precios bajos de almacenamiento por GB y de recuperaci\u00f3n por GB. Esta combinaci\u00f3n de alto rendimiento y bajo costo convierte a Est\u00e1ndar -Acceso poco frecuente de S3 en una opci\u00f3n ideal para el almacenamiento y las copias de seguridad a largo plazo, adem\u00e1s de en un almac\u00e9n de datos para los archivos de recuperaci\u00f3n de desastres. AmazonS3 \u00danica zona \u2013Acceso poco frecuente: esta clase de almacenamiento de AmazonS3 est\u00e1 dise\u00f1ada para guardar los datos a los que se accede con menos frecuencia, pero que requieren acceso r\u00e1pido cuando es necesario. A diferencia de otras clases de almacenamiento de AmazonS3 que guardan datos en un m\u00ednimo de tres zonas de disponibilidad, \u00danica zona -Acceso poco frecuente de S3 almacena datos en una \u00fanica zona de disponibilidad y cuesta menos que Est\u00e1ndar -Acceso poco frecuente de S3. La clase \u00danica zona -Acceso poco frecuente de S3 es ideal para aquellos clientes que desean una opci\u00f3n de menor costo para los datos a los que se accede con poca frecuencia y que no necesitan el nivel de disponibilidad ni la resiliencia de Est\u00e1ndar de S3 o de Est\u00e1ndar -Acceso poco frecuente de S3. Es una buena opci\u00f3n para almacenar copias de seguridad secundarias de los datos que se encuentran en las instalaciones o de los datos que se pueden volver a crear f\u00e1cilmente. Tambi\u00e9n puede utilizarla como una opci\u00f3n de almacenamiento rentable para los datos que se replican desde otra regi\u00f3n de AWS con la replicaci\u00f3n entre regiones de AmazonS3. AmazonS3 Glacier ( https://aws.amazon.com/es/s3/glacier/ ): esta es una clase de almacenamiento seguro, duradero y de bajo costo para archivar datos. Puede almacenar con confianza cualquier cantidad de datos a costos que son competitivos o m\u00e1s econ\u00f3micos que los de las soluciones en las instalaciones. Para que los costos se mantengan bajos, pero sigan siendo aptos para diversas necesidades, AmazonS3 Glacier proporciona tres opciones de recuperaci\u00f3n, que van desde unos pocos minutos a unas horas. Puede cargar objetos directamente en AmazonS3 Glacier o utilizar pol\u00edticas de ciclo de vida de AmazonS3 para transferir datos entre cualquiera de las clases de almacenamiento de AmazonS3 para datos activos (Est\u00e1ndar, IntelligentTiering, Est\u00e1ndar -Acceso poco frecuente y \u00danica zona -Acceso poco frecuente) y AmazonS3 Glacier. AmazonS3 Glacier Deep Archive: esta es la clase de almacenamiento de menor costo en AmazonS3. Admite la retenci\u00f3n a largo plazo y la preservaci\u00f3n digital de datos a los que es posible que se acceda solo una o dos veces por a\u00f1o. Se dise\u00f1\u00f3 para clientes, en particular, para aquellos clientes que pertenecen a sectores con niveles de regulaci\u00f3n muy estrictos, como los servicios financieros, la sanidad y los sectores p\u00fablicos, los cuales retienen conjuntos de datos durante un periodo de7 a10a\u00f1os o m\u00e1s para cumplir los requisitos de conformidad normativa. AmazonS3 Glacier Deep Archive tambi\u00e9n se puede utilizar para casos de uso de copias de seguridad y de recuperaci\u00f3n de desastres. Se trata de una alternativa rentable y f\u00e1cil de administrar a los sistemas de cintas magn\u00e9ticas, independientemente de si estos sistemas de cintas son bibliotecas en las instalaciones o servicios fuera de ellas. AmazonS3 Glacier Deep Archive complementa a AmazonS3 Glacier y tambi\u00e9n est\u00e1 dise\u00f1ado para proporcionar una durabilidad del 99,999999999% (11nueves). Todos los objetos almacenados en AmazonS3 Glacier Deep Archive se replican y almacenan en al menos tres zonas de disponibilidad geogr\u00e1ficamente dispersas, y se pueden restaurar en 12horas.Para obtener m\u00e1s informaci\u00f3n, consulteClases de almacenamiento de AmazonS3. Con el an\u00e1lisis de clase de almacenamiento, puede evaluar los patrones de acceso al almacenamiento y transferir los datos correctos a la clase de almacenamiento adecuada. La caracter\u00edstica de an\u00e1lisis de AmazonS3 identifica autom\u00e1ticamente la pol\u00edtica de ciclo de vida \u00f3ptima para transferir el almacenamiento al que se accede con menos frecuencia a Est\u00e1ndar -Acceso poco frecuente de S3. Puede configurar una pol\u00edtica de an\u00e1lisis de la clase de almacenamiento para monitorear un bucket completo, un prefijo o una etiqueta de objeto. Una vez que se observa un patr\u00f3n de acceso poco frecuente, se puede crear con facilidad una nueva pol\u00edtica de ciclo de vida en funci\u00f3n de los resultados. El an\u00e1lisis de clases de almacenamiento tambi\u00e9n proporciona visualizaciones diarias del uso del almacenamiento en la consola de administraci\u00f3n de AWS. Puede exportarlas a un bucketde AmazonS3 para analizarlas utilizando las herramientas de inteligencia empresarial que prefiera, como Amazon QuickSight.","title":"Clases de almacenamiento"},{"location":"apuntes/nube04.html#buckets","text":"Para utilizar AmazonS3 de forma eficaz, debe comprender algunos conceptos sencillos. En primer lugar, Amazon S3 almacena los datos en buckets. Los buckets son esencialmente el prefijo de un conjunto de archivos y, como tales, deben tener un nombre \u00fanico en todo AmazonS3 a nivel mundial. Los buckets son contenedores l\u00f3gicos de objetos. Puede tener uno o m\u00e1s buckets en su cuenta. Puede controlar el acceso a cada bucket, es decir, qui\u00e9n puede crear, eliminar y enumerar objetos en el bucket. Tambi\u00e9n puede ver registros de acceso al buckety a sus objetos, adem\u00e1s de elegir la regi\u00f3n geogr\u00e1fica donde AmazonS3 almacenar\u00e1 el buckety su contenido. Para cargar sus datos (como fotos, videos o documentos), cree un bucket en una regi\u00f3n de AWS y, a continuaci\u00f3n, cargue casi cualquier cantidad de objetos en el bucket. En el ejemplo, AmazonS3 se utiliz\u00f3 para crear un bucketen la regi\u00f3n de Tokio, que se identifica formalmente dentro de AWS con el c\u00f3digo de regi\u00f3n ap-northeast-1.La direcci\u00f3n URL de un bucketest\u00e1 estructurada como en los ejemplos. Puede utilizar dos estilos de URL diferentes para hacer referencia a los buckets. AmazonS3 se refiere a los archivos como objetos.Tan pronto como tenga un bucket, podr\u00e1 almacenar casi cualquier cantidad de objetos dentro de \u00e9l. Un objeto est\u00e1 compuesto por los datos y por cualquier metadato que describa a ese archivo, incluida la direcci\u00f3n URL. Para almacenar un objeto en AmazonS3, debe cargar en un bucketel archivo que quiera almacenar. Cuando carga un archivo, puede establecer permisos sobre los datos y cualquier metadato. En este ejemplo, el objeto Preview2.mp4 se almacena dentro del bucket. La direcci\u00f3n URL del archivo incluye el nombre del objeto al final. Cuando se crea un bucketen AmazonS3, este se asocia a una regi\u00f3n de AWS espec\u00edfica. Cuando almacena datos en el bucket, estos se almacenan de forma redundante en varias instalaciones de AWS dentro de la regi\u00f3n seleccionada. AmazonS3 est\u00e1 dise\u00f1ado para almacenar sus datos de forma duradera, incluso en el caso de producirse una p\u00e9rdida de datos simult\u00e1nea en dos instalaciones de AWS. AmazonS3 administra autom\u00e1ticamente el almacenamiento detr\u00e1s de su bucketa medida que aumenta la cantidad de datos. Puede comenzar de inmediato, y el almacenamiento de sus datos aumentar\u00e1 en funci\u00f3n de las necesidades de la aplicaci\u00f3n. AmazonS3 tambi\u00e9n es escalable, lo que le permitir\u00e1 gestionar un volumen elevado de solicitudes. No es necesario aprovisionar el almacenamiento ni el rendimiento, y solo se le facturar\u00e1 por lo que utilice. Puede obtener acceso a AmazonS3 a trav\u00e9s de la consola, de la interfaz de l\u00ednea de comandos de AWS (CLI de AWS), o del SDK de AWS. Tambi\u00e9n puede acceder a los datos de su bucketdirectamente a trav\u00e9s de los puntos de enlace basados en REST. Los puntos de enlace admiten el acceso HTTP o HTTPS. Para admitir este tipo de acceso basado en URL, los nombres de los bucketsde AmazonS3 deben ser \u00fanicos a nivel mundial y tambi\u00e9n deben cumplir los requisitos del servidor de nombres de dominio (DNS). Adem\u00e1s, las claves de objetos deben utilizar caracteres que sean seguros para las direcciones URL. FIXME: Ejemplo con pantallazos de como crear un bucket","title":"Buckets"},{"location":"apuntes/nube04.html#casos-de-uso","text":"Esta flexibilidad para almacenar una cantidad pr\u00e1cticamente ilimitada de datos y para acceder a ellos desde cualquier lugar convierte a AmazonS3 en un servicio adecuado para distintos casos. Ahora, consideraremos algunos casos de uso para AmazonS3: Como ubicaci\u00f3n para cualquier dato de aplicaci\u00f3n, los bucketsde AmazonS3 proporcionan una ubicaci\u00f3n compartida para almacenar objetos a los que cualquier instancia de su aplicaci\u00f3n puede acceder, incluso las aplicaciones de AmazonEC2 o hasta los servidores tradicionales. Esta caracter\u00edstica puede resultar \u00fatil para los archivos multimedia generados por el usuario, los registros del servidor u otros archivos que su aplicaci\u00f3n deba almacenar en una ubicaci\u00f3n com\u00fan. Adem\u00e1s, como el contenido se puede obtener de manera directa a trav\u00e9s de Internet, es posible delegar una parte de la entrega de ese contenido de su aplicaci\u00f3n y permitir que los clientes consigan ellos mismos de forma directa los datos de AmazonS3. Para el alojamiento web est\u00e1tico, los bucketsde AmazonS3 pueden entregar el contenido est\u00e1tico de su sitio web, que incluye HTML, CSS, JavaScript y otros archivos. La gran durabilidad de AmazonS3 lo convierte en una buena opci\u00f3n para almacenar copias de seguridad de sus datos. Para una disponibilidad y capacidad de recuperaci\u00f3n de desastres incluso mejores, AmazonS3 puede hasta configurarse para admitir la replicaci\u00f3n entre regiones, de modo que los datos ubicados en un bucketde AmazonS3 en una regi\u00f3n puedan replicarse de forma autom\u00e1tica en otra regi\u00f3n de AmazonS3. Copia de seguridad y almacenamiento:preste servicios de copia de seguridad y almacenamiento de datos a terceros. Alojamiento de aplicaciones:preste servicios que implementen, instalen y administren aplicaciones web. Alojamiento multimedia:cree una infraestructura redundante, escalable y de alta disponibilidad que aloje cargas y descargas de videos, fotos o m\u00fasica. Entrega de software:aloje sus aplicaciones de software para que los clientes puedan descargarlas.","title":"Casos de uso"},{"location":"apuntes/nube04.html#costes","text":"Con AmazonS3, los costos espec\u00edficos var\u00edan en funci\u00f3n de la regi\u00f3n y de las solicitudes espec\u00edficas que se realizaron. Solo paga por lo que utiliza, lo que incluye gigabytes por mes; transferencias desde otras regiones; y solicitudes PUT, COPY, POST, LIST y GET. Como regla general, solo paga por las transferencias que cruzan el l\u00edmite de su regi\u00f3n, lo que significa que no paga por las transferencias entrantesa AmazonS3 ni por las transferencias salientes desde AmazonS3 a las ubicaciones de borde de Amazon CloudFrontdentro de esa misma regi\u00f3n. Para comenzar a calcular los costos de AmazonS3, debe tener en cuenta lo siguiente: 1. Clase de almacenamiento: * El almacenamiento est\u00e1ndar est\u00e1 dise\u00f1ado para proporcionar 99,999999999% (11nueves) de durabilidad y 99,99% (4nueves) de disponibilidad. * Est\u00e1ndar -Acceso poco frecuente de S3es una opci\u00f3n de almacenamiento dentro de AmazonS3 que puede utilizar para reducir sus costos al guardar los datos a los que se accede con menos frecuencia con niveles de redundancia ligeramente inferiores a los del almacenamiento est\u00e1ndar de AmazonS3. El almacenamiento Est\u00e1ndar -Acceso poco frecuente est\u00e1 dise\u00f1ado para ofrecer la misma durabilidad de 99,999999999% (11nueves) de AmazonS3, pero con 99,9% (3nueves) de disponibilidad en un a\u00f1o concreto. Cada clase tiene diferentes tasas. 2. Cantidad de almacenamiento:se refiere a la cantidad y al tama\u00f1o de los objetos almacenados en los bucketsde AmazonS3. 3. Solicitudes:se consideran la cantidad y el tipo de las solicitudes. Las solicitudes GET generan cargos a tasas diferentes de las de otras solicitudes, como PUT y COPY. * GET:recupera un objeto en AmazonS3. Debe tener acceso de LECTURA para utilizar esta operaci\u00f3n. * PUT: agrega un objeto a un bucket. Debe contar con permisos de ESCRITURA en un bucketpara agregarle un objeto. * COPY:crea una copia de un objeto que ya est\u00e1 almacenado en AmazonS3. Una operaci\u00f3n COPY equivale a realizar una solicitud GET y luego una PUT. 4. Transferencia de datos:se considera lacantidad de datos transferidos fuera de la regi\u00f3n de AmazonS3. Recuerde que la transferencia entrante de datos es gratuita, pero se cobra un cargo por la transferencia saliente.","title":"Costes"},{"location":"apuntes/nube04.html#s3-select","text":"FIXME: completar Amazon S3 Select le permite utilizar instrucciones de lenguaje de consulta estructurada (SQL) simples para filtrar el contenido de los objetos de Amazon S3 y recuperar exactamente el subconjunto de datos que necesita. Si utiliza Amazon S3 Select para filtrar estos datos, puede reducir la cantidad de datos que Amazon S3 transfiere, lo que reduce tambi\u00e9n los costos y la latencia para recuperarlos. Amazon S3 Select funciona con objetos almacenados en formato CSV, JSON o Apache Parquet. Tambi\u00e9n funciona con objetos comprimidos con GZIP o BZIP2 (solo para objetos CSV y JSON), as\u00ed como con objetos cifrados del lado del servidor. Puede especificar el formato de los resultados como CSV o JSON, y tambi\u00e9n puede determinar c\u00f3mo se delimitan los registros en los resultados. Las expresiones SQL se pasan a Amazon S3 en la solicitud. Amazon S3 Select es compatible con un subconjunto de SQL. Para obtener m\u00e1s informaci\u00f3n sobre los elementos SQL compatibles con Amazon S3 Select, consulte Referencia de SQL para Amazon S3 Select y S3 Glacier Select.. Puede realizar consultas de SQL con los SDK de AWS, la API de REST SELECT Object Content, la AWS Command Line Interface (AWS CLI) o la consola de Amazon S3. La consola de Amazon S3 limita la cantidad de datos devueltos a 40 MB. Para recuperar m\u00e1s datos, utilice la AWS CLI o la API. Trabajando programativamente con S3 / S3 Select En el bloque de ingesta de datos, atacaremon S3 mediante Python directamente y utilizando AWS Lambda.","title":"S3 Select"},{"location":"apuntes/nube04.html#amazon-efs","text":"AmazonEFS ( https://aws.amazon.com/es/efs/ ) implementa almacenamiento para las instancias EC2 a las que pueden acceder varias m\u00e1quinas virtuales de forma simult\u00e1nea. Se ha implementado como un sistema de archivos de uso compartido que utiliza el protocolo de sistemas de archivos de red (NFS). AmazonEFS es un sistema de archivos de uso compartido que varias instancias de AmazonEC2 pueden montar al mismo tiempo. Amazon Elastic File System (AmazonEFS) proporciona un almacenamiento de archivos simple, escalable y el\u00e1stico para utilizarlo con los servicios de AWS y los recursos disponibles en las instalaciones. Ofrece una interfaz sencilla que le permite crear y configurar sistemas de archivos de forma r\u00e1pida y simple. AmazonEFS est\u00e1 dise\u00f1ado para escalar a petabytes de manera din\u00e1mica bajo demanda sin interrumpir las aplicaciones, por lo que se ampliar\u00e1 y reducir\u00e1 de forma autom\u00e1tica a medida que agregue o elimine archivos. Est\u00e1 dise\u00f1ado para que sus aplicaciones dispongan del almacenamiento que necesiten, cuando lo necesiten. AmazonEFS proporciona almacenamiento de archivos en la nube que resulta ideal para bigdata y an\u00e1lisis, flujos de trabajo de procesamiento multimedia, administraci\u00f3n de contenido, servidores web y directorios principales. AmazonEFS escala de manera ascendente o descendente a medida que se agregan o eliminan archivos y solo requiere pago por lo que se utiliza. AmazonEFS es un servicio completamente administrado al que se puede acceder desde la consola, una API o la CLI de AWS.","title":"Amazon EFS"},{"location":"apuntes/nube04.html#arquitecturas-en-la-nube","text":"M\u00f3dulo 9 Introducci\u00f3n Secci\u00f3n 1: Principios de dise\u00f1o del marco de buena arquitectura de AWS External Tool Secci\u00f3n 1: Principios de dise\u00f1o del marco de buena arquitectura de AWS Secci\u00f3n 2: Excelencia operativa External Tool Secci\u00f3n 2: Excelencia operativa Secci\u00f3n 3: Seguridad External Tool Secci\u00f3n 3: Seguridad Secci\u00f3n 4: Fiabilidad External Tool Secci\u00f3n 4: Fiabilidad Secci\u00f3n 5: Eficiencia del rendimiento External Tool Secci\u00f3n 5: Eficiencia del rendimiento Secci\u00f3n 6: Optimizaci\u00f3n de costos External Tool Secci\u00f3n 6: Optimizaci\u00f3n de costos Secci\u00f3n 7: Fiabilidad y disponibilidad External Tool Secci\u00f3n 7: Fiabilidad y disponibilidad Secci\u00f3n 8: AWS Trusted Advisor External Tool Secci\u00f3n 8: AWS Trusted Advisor M\u00f3dulo 2 Conclusi\u00f3n External Tool M\u00f3dulo 2 Conclusi\u00f3n Student Guide External Tool Student Guide M\u00f3dulo 9 Evaluaci\u00f3n de conocimientos Assignment M\u00f3dulo 9 Evaluaci\u00f3n de conocimientos","title":"Arquitecturas en la nube"},{"location":"apuntes/nube04.html#actividades","text":"Realizar los m\u00f3dulo 7 (Almacenamiento) y del curso ACF de AWS . A partir del ejemplo de S3 Select, realiza un script en Python que cargue los siguientes datos en un bucket, y recupere XXXXX. A partir del archiov XXXXX, crear un bucket que muestre el contenido como un sitio web.","title":"Actividades"},{"location":"apuntes/nube04.html#referencias","text":"https://docs.aws.amazon.com/es_es/whitepapers/latest/big-data-analytics-options/welcome.html","title":"Referencias"},{"location":"apuntes/nube05.html","text":"Datos en AWS \u00b6 Datos relacionales \u00b6 Datos NoSQL \u00b6 DataWarehouse \u00b6 Amazon Aurora \u00b6 M\u00f3dulo 8 Introducci\u00f3n Secci\u00f3n 1: Amazon RDS External Tool Secci\u00f3n 1: Amazon RDS Demostraci\u00f3n del instructor - De Amazon RDS External Tool Demostraci\u00f3n del instructor - De Amazon RDS Ejercicio de laboratorio 5 - Creaci\u00f3n de un servidor de bases de datos External Tool Ejercicio de laboratorio 5 - Creaci\u00f3n de un servidor de bases de datos Visto El item del m\u00f3dulo ha sido revisado y est\u00e1 completo Secci\u00f3n 2: Amazon DynamoDB External Tool Secci\u00f3n 2: Amazon DynamoDB Demostraci\u00f3n del instructor - De Amazon DynamoDB External Tool Demostraci\u00f3n del instructor - De Amazon DynamoDB Secci\u00f3n 3: Amazon Redshift External Tool Secci\u00f3n 3: Amazon Redshift Secci\u00f3n 4: Amazon Aurora External Tool Secci\u00f3n 4: Amazon Aurora M\u00f3dulo 8 Conclusi\u00f3n External Tool M\u00f3dulo 8 Conclusi\u00f3n Student Guide External Tool Student Guide M\u00f3dulo 8 Evaluaci\u00f3n de conocimientos Assignment M\u00f3dulo 8 Evaluaci\u00f3n de conocimientos Actividades \u00b6 Realizar el m\u00f3dulo 8 (Bases de Datos) del curso ACF de AWS . Referencias \u00b6 aaa","title":"5.- Datos en AWS"},{"location":"apuntes/nube05.html#datos-en-aws","text":"","title":"Datos en AWS"},{"location":"apuntes/nube05.html#datos-relacionales","text":"","title":"Datos relacionales"},{"location":"apuntes/nube05.html#datos-nosql","text":"","title":"Datos NoSQL"},{"location":"apuntes/nube05.html#datawarehouse","text":"","title":"DataWarehouse"},{"location":"apuntes/nube05.html#amazon-aurora","text":"M\u00f3dulo 8 Introducci\u00f3n Secci\u00f3n 1: Amazon RDS External Tool Secci\u00f3n 1: Amazon RDS Demostraci\u00f3n del instructor - De Amazon RDS External Tool Demostraci\u00f3n del instructor - De Amazon RDS Ejercicio de laboratorio 5 - Creaci\u00f3n de un servidor de bases de datos External Tool Ejercicio de laboratorio 5 - Creaci\u00f3n de un servidor de bases de datos Visto El item del m\u00f3dulo ha sido revisado y est\u00e1 completo Secci\u00f3n 2: Amazon DynamoDB External Tool Secci\u00f3n 2: Amazon DynamoDB Demostraci\u00f3n del instructor - De Amazon DynamoDB External Tool Demostraci\u00f3n del instructor - De Amazon DynamoDB Secci\u00f3n 3: Amazon Redshift External Tool Secci\u00f3n 3: Amazon Redshift Secci\u00f3n 4: Amazon Aurora External Tool Secci\u00f3n 4: Amazon Aurora M\u00f3dulo 8 Conclusi\u00f3n External Tool M\u00f3dulo 8 Conclusi\u00f3n Student Guide External Tool Student Guide M\u00f3dulo 8 Evaluaci\u00f3n de conocimientos Assignment M\u00f3dulo 8 Evaluaci\u00f3n de conocimientos","title":"Amazon Aurora"},{"location":"apuntes/nube05.html#actividades","text":"Realizar el m\u00f3dulo 8 (Bases de Datos) del curso ACF de AWS .","title":"Actividades"},{"location":"apuntes/nube05.html#referencias","text":"aaa","title":"Referencias"}]}